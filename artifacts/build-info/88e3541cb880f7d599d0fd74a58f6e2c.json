{
	"id": "88e3541cb880f7d599d0fd74a58f6e2c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contract/StakingRewards_flattened.sol": {
				"content": "\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n\n// File: @openzeppelin/contracts/interfaces/IERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n\n// File: @openzeppelin/contracts/utils/introspection/IERC165.sol\n\n\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n\n// File: @openzeppelin/contracts/interfaces/IERC165.sol\n\n\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n\n// File: @openzeppelin/contracts/interfaces/IERC1363.sol\n\n\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\n\npragma solidity >=0.6.2;\n\n\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\n\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n\n// File: @openzeppelin/contracts/utils/ReentrancyGuard.sol\n\n\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n\n// File: @openzeppelin/contracts/access/Ownable.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// File: contract/StakingRewards.sol\n\n\npragma solidity ^0.8.20;\n\n\n\n\n\n/**\n * @title StakingRewards\n * @dev Allows users to stake TradeFiToken (TFT) to earn rewards.\n * Based on the Synthetix StakingRewards model.\n */\ncontract StakingRewards is ReentrancyGuard, Ownable {\n    using SafeERC20 for IERC20;\n\n    IERC20 public stakingToken; // The token users stake (TFT)\n    IERC20 public rewardsToken; // The token paid as reward (also TFT)\n\n    uint256 public periodFinish;\n    uint256 public rewardRate;\n    uint256 public rewardsDuration = 7 days;\n    uint256 public lastUpdateTime;\n    uint256 public rewardPerTokenStored;\n\n    mapping(address => uint256) public userRewardPerTokenPaid;\n    mapping(address => uint256) public rewards;\n\n    uint256 private _totalSupply;\n    mapping(address => uint256) private _balances;\n\n    event Staked(address indexed user, uint256 amount);\n    event Withdrawn(address indexed user, uint256 amount);\n    event RewardPaid(address indexed user, uint256 reward);\n\n    constructor(address _stakingToken, address _rewardsToken) Ownable(msg.sender) {\n        stakingToken = IERC20(_stakingToken);\n        rewardsToken = IERC20(_rewardsToken);\n    }\n\n    // --- View Functions ---\n    function totalSupply() external view returns (uint256) {\n        return _totalSupply;\n    }\n\n    function balanceOf(address account) external view returns (uint256) {\n        return _balances[account];\n    }\n    \n    function earned(address account) public view returns (uint256) {\n        return (_balances[account] * (rewardPerToken() - userRewardPerTokenPaid[account])) / 1e18 + rewards[account];\n    }\n\n    // --- Core Logic ---\n    modifier updateReward(address account) {\n        rewardPerTokenStored = rewardPerToken();\n        lastUpdateTime = lastTimeRewardApplicable();\n        if (account != address(0)) {\n            rewards[account] = earned(account);\n            userRewardPerTokenPaid[account] = rewardPerTokenStored;\n        }\n        _;\n    }\n\n    function stake(uint256 amount) external nonReentrant updateReward(msg.sender) {\n        require(amount > 0, \"Cannot stake 0\");\n        _totalSupply += amount;\n        _balances[msg.sender] += amount;\n        stakingToken.safeTransferFrom(msg.sender, address(this), amount);\n        emit Staked(msg.sender, amount);\n    }\n\n    function withdraw(uint256 amount) public nonReentrant updateReward(msg.sender) {\n        require(amount > 0, \"Cannot withdraw 0\");\n        _totalSupply -= amount;\n        _balances[msg.sender] -= amount;\n        stakingToken.safeTransfer(msg.sender, amount);\n        emit Withdrawn(msg.sender, amount);\n    }\n\n    function claimReward() public nonReentrant updateReward(msg.sender) {\n        uint256 reward = rewards[msg.sender];\n        if (reward > 0) {\n            rewards[msg.sender] = 0;\n            rewardsToken.safeTransfer(msg.sender, reward);\n            emit RewardPaid(msg.sender, reward);\n        }\n    }\n\n    // --- Admin Function ---\n    function notifyRewardAmount(uint256 reward) external onlyOwner updateReward(address(0)) {\n        if (block.timestamp >= periodFinish) {\n            rewardRate = reward / rewardsDuration;\n        } else {\n            uint256 remaining = periodFinish - block.timestamp;\n            uint256 leftover = remaining * rewardRate;\n            rewardRate = (reward + leftover) / rewardsDuration;\n        }\n        lastUpdateTime = block.timestamp;\n        periodFinish = block.timestamp + rewardsDuration;\n    }\n    \n    // --- Internal Helper Functions ---\n    function rewardPerToken() internal view returns (uint256) {\n        if (_totalSupply == 0) {\n            return rewardPerTokenStored;\n        }\n        return rewardPerTokenStored + (rewardRate * (lastTimeRewardApplicable() - lastUpdateTime) * 1e18) / _totalSupply;\n    }\n\n    function lastTimeRewardApplicable() internal view returns (uint256) {\n        return block.timestamp < periodFinish ? block.timestamp : periodFinish;\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contract/StakingRewards_flattened.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract/StakingRewards_flattened.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract/StakingRewards_flattened.sol\":{\"keccak256\":\"0xd0f133ae5d93b35c54ef74d67dc07da43d5b53b9f0a349cea255cdf4ed8fb949\",\"urls\":[\"bzz-raw://c68f7b6a56582b50edb7d2fae04ca156afe6e53c4dc2b362c8e1f605d13b6665\",\"dweb:/ipfs/QmQ3fbiUenFpMTzKmEhr1qUB8DbQ2aTsau9k1kmP6Z2HJJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract/StakingRewards_flattened.sol\":\"IERC1363\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract/StakingRewards_flattened.sol\":{\"keccak256\":\"0xd0f133ae5d93b35c54ef74d67dc07da43d5b53b9f0a349cea255cdf4ed8fb949\",\"urls\":[\"bzz-raw://c68f7b6a56582b50edb7d2fae04ca156afe6e53c4dc2b362c8e1f605d13b6665\",\"dweb:/ipfs/QmQ3fbiUenFpMTzKmEhr1qUB8DbQ2aTsau9k1kmP6Z2HJJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract/StakingRewards_flattened.sol\":\"IERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract/StakingRewards_flattened.sol\":{\"keccak256\":\"0xd0f133ae5d93b35c54ef74d67dc07da43d5b53b9f0a349cea255cdf4ed8fb949\",\"urls\":[\"bzz-raw://c68f7b6a56582b50edb7d2fae04ca156afe6e53c4dc2b362c8e1f605d13b6665\",\"dweb:/ipfs/QmQ3fbiUenFpMTzKmEhr1qUB8DbQ2aTsau9k1kmP6Z2HJJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract/StakingRewards_flattened.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract/StakingRewards_flattened.sol\":{\"keccak256\":\"0xd0f133ae5d93b35c54ef74d67dc07da43d5b53b9f0a349cea255cdf4ed8fb949\",\"urls\":[\"bzz-raw://c68f7b6a56582b50edb7d2fae04ca156afe6e53c4dc2b362c8e1f605d13b6665\",\"dweb:/ipfs/QmQ3fbiUenFpMTzKmEhr1qUB8DbQ2aTsau9k1kmP6Z2HJJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract/StakingRewards_flattened.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract/StakingRewards_flattened.sol\":{\"keccak256\":\"0xd0f133ae5d93b35c54ef74d67dc07da43d5b53b9f0a349cea255cdf4ed8fb949\",\"urls\":[\"bzz-raw://c68f7b6a56582b50edb7d2fae04ca156afe6e53c4dc2b362c8e1f605d13b6665\",\"dweb:/ipfs/QmQ3fbiUenFpMTzKmEhr1qUB8DbQ2aTsau9k1kmP6Z2HJJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 729,
								"contract": "contract/StakingRewards_flattened.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ReentrancyGuard": {
					"abi": [
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"errors": {
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract/StakingRewards_flattened.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract/StakingRewards_flattened.sol\":{\"keccak256\":\"0xd0f133ae5d93b35c54ef74d67dc07da43d5b53b9f0a349cea255cdf4ed8fb949\",\"urls\":[\"bzz-raw://c68f7b6a56582b50edb7d2fae04ca156afe6e53c4dc2b362c8e1f605d13b6665\",\"dweb:/ipfs/QmQ3fbiUenFpMTzKmEhr1qUB8DbQ2aTsau9k1kmP6Z2HJJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 636,
								"contract": "contract/StakingRewards_flattened.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contract/StakingRewards_flattened.sol\":9078:18454  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contract/StakingRewards_flattened.sol\":9078:18454  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220013401f7655fdaa07645637d8ac24449b2d84e40354a28d7f0f2b8d9f8e0a61364736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220013401f7655fdaa07645637d8ac24449b2d84e40354a28d7f0f2b8d9f8e0a61364736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD CALLVALUE ADD 0xF7 PUSH6 0x5FDAA0764563 PUSH30 0x8AC24449B2D84E40354A28D7F0F2B8D9F8E0A61364736F6C634300081E00 CALLER ",
							"sourceMap": "9078:9376:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220013401f7655fdaa07645637d8ac24449b2d84e40354a28d7f0f2b8d9f8e0a61364736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD CALLVALUE ADD 0xF7 PUSH6 0x5FDAA0764563 PUSH30 0x8AC24449B2D84E40354A28D7F0F2B8D9F8E0A61364736F6C634300081E00 CALLER ",
							"sourceMap": "9078:9376:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 9078,
									"end": 18454,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9078,
									"end": 18454,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9078,
									"end": 18454,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 9078,
									"end": 18454,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 9078,
									"end": 18454,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 9078,
									"end": 18454,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 9078,
									"end": 18454,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 9078,
									"end": 18454,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 9078,
									"end": 18454,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 9078,
									"end": 18454,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9078,
									"end": 18454,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 9078,
									"end": 18454,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 9078,
									"end": 18454,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 9078,
									"end": 18454,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 9078,
									"end": 18454,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 9078,
									"end": 18454,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9078,
									"end": 18454,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9078,
									"end": 18454,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 9078,
									"end": 18454,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9078,
									"end": 18454,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 9078,
									"end": 18454,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 9078,
									"end": 18454,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 9078,
									"end": 18454,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9078,
									"end": 18454,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 9078,
									"end": 18454,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 9078,
									"end": 18454,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 9078,
									"end": 18454,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 9078,
									"end": 18454,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9078,
									"end": 18454,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 9078,
									"end": 18454,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 9078,
									"end": 18454,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9078,
									"end": 18454,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 9078,
									"end": 18454,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 9078,
									"end": 18454,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9078,
									"end": 18454,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220013401f7655fdaa07645637d8ac24449b2d84e40354a28d7f0f2b8d9f8e0a61364736f6c634300081e0033",
									".code": [
										{
											"begin": 9078,
											"end": 18454,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 9078,
											"end": 18454,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 9078,
											"end": 18454,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9078,
											"end": 18454,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 9078,
											"end": 18454,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9078,
											"end": 18454,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9078,
											"end": 18454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9078,
											"end": 18454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9078,
											"end": 18454,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contract/StakingRewards_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract/StakingRewards_flattened.sol\":\"SafeERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract/StakingRewards_flattened.sol\":{\"keccak256\":\"0xd0f133ae5d93b35c54ef74d67dc07da43d5b53b9f0a349cea255cdf4ed8fb949\",\"urls\":[\"bzz-raw://c68f7b6a56582b50edb7d2fae04ca156afe6e53c4dc2b362c8e1f605d13b6665\",\"dweb:/ipfs/QmQ3fbiUenFpMTzKmEhr1qUB8DbQ2aTsau9k1kmP6Z2HJJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"StakingRewards": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_stakingToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_rewardsToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "RewardPaid",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdrawn",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "earned",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastUpdateTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "notifyRewardAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "periodFinish",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardPerTokenStored",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "rewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardsDuration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardsToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userRewardPerTokenPaid",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Allows users to stake TradeFiToken (TFT) to earn rewards. Based on the Synthetix StakingRewards model.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"title": "StakingRewards",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contract/StakingRewards_flattened.sol\":26150:29880  contract StakingRewards is ReentrancyGuard, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contract/StakingRewards_flattened.sol\":26473:26479  7 days */\n  0x093a80\n    /* \"contract/StakingRewards_flattened.sol\":26440:26479  uint256 public rewardsDuration = 7 days */\n  0x06\n  sstore\n    /* \"contract/StakingRewards_flattened.sol\":26936:27113  constructor(address _stakingToken, address _rewardsToken) Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contract/StakingRewards_flattened.sol\":27002:27012  msg.sender */\n  caller\n    /* \"contract/StakingRewards_flattened.sol\":20342:20343  1 */\n  0x01\n    /* \"contract/StakingRewards_flattened.sol\":20546:20553  _status */\n  0x00\n    /* \"contract/StakingRewards_flattened.sol\":20546:20567  _status = NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contract/StakingRewards_flattened.sol\":24128:24129  0 */\n  0x00\n    /* \"contract/StakingRewards_flattened.sol\":24104:24130  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contract/StakingRewards_flattened.sol\":24104:24116  initialOwner */\n  dup2\n    /* \"contract/StakingRewards_flattened.sol\":24104:24130  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contract/StakingRewards_flattened.sol\":24100:24195  if (initialOwner == address(0)) {... */\n  tag_9\n  jumpi\n    /* \"contract/StakingRewards_flattened.sol\":24181:24182  0 */\n  0x00\n    /* \"contract/StakingRewards_flattened.sol\":24153:24184  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_10\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contract/StakingRewards_flattened.sol\":24100:24195  if (initialOwner == address(0)) {... */\ntag_9:\n    /* \"contract/StakingRewards_flattened.sol\":24204:24236  _transferOwnership(initialOwner) */\n  tag_12\n    /* \"contract/StakingRewards_flattened.sol\":24223:24235  initialOwner */\n  dup2\n    /* \"contract/StakingRewards_flattened.sol\":24204:24222  _transferOwnership */\n  shl(0x20, tag_13)\n    /* \"contract/StakingRewards_flattened.sol\":24204:24236  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"contract/StakingRewards_flattened.sol\":24056:24243  constructor(address initialOwner) {... */\n  pop\n    /* \"contract/StakingRewards_flattened.sol\":27046:27059  _stakingToken */\n  dup2\n    /* \"contract/StakingRewards_flattened.sol\":27024:27036  stakingToken */\n  0x02\n  0x00\n    /* \"contract/StakingRewards_flattened.sol\":27024:27060  stakingToken = IERC20(_stakingToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contract/StakingRewards_flattened.sol\":27092:27105  _rewardsToken */\n  dup1\n    /* \"contract/StakingRewards_flattened.sol\":27070:27082  rewardsToken */\n  0x03\n  0x00\n    /* \"contract/StakingRewards_flattened.sol\":27070:27106  rewardsToken = IERC20(_rewardsToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contract/StakingRewards_flattened.sol\":26936:27113  constructor(address _stakingToken, address _rewardsToken) Ownable(msg.sender) {... */\n  pop\n  pop\n    /* \"contract/StakingRewards_flattened.sol\":26150:29880  contract StakingRewards is ReentrancyGuard, Ownable {... */\n  jump(tag_15)\n    /* \"contract/StakingRewards_flattened.sol\":25743:25930  function _transferOwnership(address newOwner) internal virtual {... */\ntag_13:\n    /* \"contract/StakingRewards_flattened.sol\":25816:25832  address oldOwner */\n  0x00\n    /* \"contract/StakingRewards_flattened.sol\":25835:25841  _owner */\n  0x01\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contract/StakingRewards_flattened.sol\":25816:25841  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"contract/StakingRewards_flattened.sol\":25860:25868  newOwner */\n  dup2\n    /* \"contract/StakingRewards_flattened.sol\":25851:25857  _owner */\n  0x01\n  0x00\n    /* \"contract/StakingRewards_flattened.sol\":25851:25868  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contract/StakingRewards_flattened.sol\":25914:25922  newOwner */\n  dup2\n    /* \"contract/StakingRewards_flattened.sol\":25883:25923  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contract/StakingRewards_flattened.sol\":25904:25912  oldOwner */\n  dup2\n    /* \"contract/StakingRewards_flattened.sol\":25883:25923  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contract/StakingRewards_flattened.sol\":25806:25930  {... */\n  pop\n    /* \"contract/StakingRewards_flattened.sol\":25743:25930  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_18:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_20:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_21:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_31\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_20\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_22:\n    /* \"#utility.yul\":641:665   */\n  tag_33\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_21\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_34\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_34:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_23:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_36\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_22\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  0x00\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_39\n  tag_18\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":949:1068   */\ntag_38:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_40\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_23\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_41\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_23\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1358:1476   */\ntag_24:\n    /* \"#utility.yul\":1445:1469   */\n  tag_43\n    /* \"#utility.yul\":1463:1468   */\n  dup2\n    /* \"#utility.yul\":1445:1469   */\n  tag_21\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1440:1443   */\n  dup3\n    /* \"#utility.yul\":1433:1470   */\n  mstore\n    /* \"#utility.yul\":1358:1476   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1482:1704   */\ntag_11:\n    /* \"#utility.yul\":1575:1579   */\n  0x00\n    /* \"#utility.yul\":1613:1615   */\n  0x20\n    /* \"#utility.yul\":1602:1611   */\n  dup3\n    /* \"#utility.yul\":1598:1616   */\n  add\n    /* \"#utility.yul\":1590:1616   */\n  swap1\n  pop\n    /* \"#utility.yul\":1626:1697   */\n  tag_45\n    /* \"#utility.yul\":1694:1695   */\n  0x00\n    /* \"#utility.yul\":1683:1692   */\n  dup4\n    /* \"#utility.yul\":1679:1696   */\n  add\n    /* \"#utility.yul\":1670:1676   */\n  dup5\n    /* \"#utility.yul\":1626:1697   */\n  tag_24\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1482:1704   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contract/StakingRewards_flattened.sol\":26150:29880  contract StakingRewards is ReentrancyGuard, Ownable {... */\ntag_15:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contract/StakingRewards_flattened.sol\":26150:29880  contract StakingRewards is ReentrancyGuard, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7b0a47ee\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xc8f33c91\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xc8f33c91\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xd1af0c7d\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xdf136d65\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xebe2b12b\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x7b0a47ee\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8b876347\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xb88a802f\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x386a9525\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x386a9525\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3c6b16ab\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x72f702f3\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x8cc262\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0700037d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contract/StakingRewards_flattened.sol\":27366:27554  function earned(address account) public view returns (uint256) {... */\n    tag_3:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract/StakingRewards_flattened.sol\":26625:26667  mapping(address => uint256) public rewards */\n    tag_4:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_32:\n      tag_33\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract/StakingRewards_flattened.sol\":27149:27240  function totalSupply() external view returns (uint256) {... */\n    tag_5:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract/StakingRewards_flattened.sol\":28240:28548  function withdraw(uint256 amount) public nonReentrant updateReward(msg.sender) {... */\n    tag_6:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      stop\n        /* \"contract/StakingRewards_flattened.sol\":26440:26479  uint256 public rewardsDuration = 7 days */\n    tag_7:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract/StakingRewards_flattened.sol\":28892:29395  function notifyRewardAmount(uint256 reward) external onlyOwner updateReward(address(0)) {... */\n    tag_8:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n    tag_45:\n      stop\n        /* \"contract/StakingRewards_flattened.sol\":27246:27356  function balanceOf(address account) external view returns (uint256) {... */\n    tag_9:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract/StakingRewards_flattened.sol\":25124:25225  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      stop\n        /* \"contract/StakingRewards_flattened.sol\":26241:26267  IERC20 public stakingToken */\n    tag_11:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract/StakingRewards_flattened.sol\":26409:26434  uint256 public rewardRate */\n    tag_12:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract/StakingRewards_flattened.sol\":26562:26619  mapping(address => uint256) public userRewardPerTokenPaid */\n    tag_13:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract/StakingRewards_flattened.sol\":24469:24554  function owner() public view virtual returns (address) {... */\n    tag_14:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract/StakingRewards_flattened.sol\":27914:28234  function stake(uint256 amount) external nonReentrant updateReward(msg.sender) {... */\n    tag_15:\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_70:\n      tag_71\n      jump\t// in\n    tag_69:\n      stop\n        /* \"contract/StakingRewards_flattened.sol\":28554:28856  function claimReward() public nonReentrant updateReward(msg.sender) {... */\n    tag_16:\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      stop\n        /* \"contract/StakingRewards_flattened.sol\":26485:26514  uint256 public lastUpdateTime */\n    tag_17:\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract/StakingRewards_flattened.sol\":26304:26330  IERC20 public rewardsToken */\n    tag_18:\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract/StakingRewards_flattened.sol\":26520:26555  uint256 public rewardPerTokenStored */\n    tag_19:\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_82\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract/StakingRewards_flattened.sol\":26376:26403  uint256 public periodFinish */\n    tag_20:\n      tag_83\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract/StakingRewards_flattened.sol\":25374:25589  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_21:\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_87:\n      tag_88\n      jump\t// in\n    tag_86:\n      stop\n        /* \"contract/StakingRewards_flattened.sol\":27366:27554  function earned(address account) public view returns (uint256) {... */\n    tag_28:\n        /* \"contract/StakingRewards_flattened.sol\":27420:27427  uint256 */\n      0x00\n        /* \"contract/StakingRewards_flattened.sol\":27531:27538  rewards */\n      0x0a\n        /* \"contract/StakingRewards_flattened.sol\":27531:27547  rewards[account] */\n      0x00\n        /* \"contract/StakingRewards_flattened.sol\":27539:27546  account */\n      dup4\n        /* \"contract/StakingRewards_flattened.sol\":27531:27547  rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contract/StakingRewards_flattened.sol\":27524:27528  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contract/StakingRewards_flattened.sol\":27488:27510  userRewardPerTokenPaid */\n      0x09\n        /* \"contract/StakingRewards_flattened.sol\":27488:27519  userRewardPerTokenPaid[account] */\n      0x00\n        /* \"contract/StakingRewards_flattened.sol\":27511:27518  account */\n      dup6\n        /* \"contract/StakingRewards_flattened.sol\":27488:27519  userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contract/StakingRewards_flattened.sol\":27469:27485  rewardPerToken() */\n      tag_90\n        /* \"contract/StakingRewards_flattened.sol\":27469:27483  rewardPerToken */\n      tag_91\n        /* \"contract/StakingRewards_flattened.sol\":27469:27485  rewardPerToken() */\n      jump\t// in\n    tag_90:\n        /* \"contract/StakingRewards_flattened.sol\":27469:27519  rewardPerToken() - userRewardPerTokenPaid[account] */\n      tag_92\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n        /* \"contract/StakingRewards_flattened.sol\":27447:27456  _balances */\n      0x0c\n        /* \"contract/StakingRewards_flattened.sol\":27447:27465  _balances[account] */\n      0x00\n        /* \"contract/StakingRewards_flattened.sol\":27457:27464  account */\n      dup7\n        /* \"contract/StakingRewards_flattened.sol\":27447:27465  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contract/StakingRewards_flattened.sol\":27447:27520  _balances[account] * (rewardPerToken() - userRewardPerTokenPaid[account]) */\n      tag_94\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n        /* \"contract/StakingRewards_flattened.sol\":27446:27528  (_balances[account] * (rewardPerToken() - userRewardPerTokenPaid[account])) / 1e18 */\n      tag_96\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n        /* \"contract/StakingRewards_flattened.sol\":27446:27547  (_balances[account] * (rewardPerToken() - userRewardPerTokenPaid[account])) / 1e18 + rewards[account] */\n      tag_98\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n        /* \"contract/StakingRewards_flattened.sol\":27439:27547  return (_balances[account] * (rewardPerToken() - userRewardPerTokenPaid[account])) / 1e18 + rewards[account] */\n      swap1\n      pop\n        /* \"contract/StakingRewards_flattened.sol\":27366:27554  function earned(address account) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contract/StakingRewards_flattened.sol\":26625:26667  mapping(address => uint256) public rewards */\n    tag_33:\n      mstore(0x20, 0x0a)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contract/StakingRewards_flattened.sol\":27149:27240  function totalSupply() external view returns (uint256) {... */\n    tag_36:\n        /* \"contract/StakingRewards_flattened.sol\":27195:27202  uint256 */\n      0x00\n        /* \"contract/StakingRewards_flattened.sol\":27221:27233  _totalSupply */\n      sload(0x0b)\n        /* \"contract/StakingRewards_flattened.sol\":27214:27233  return _totalSupply */\n      swap1\n      pop\n        /* \"contract/StakingRewards_flattened.sol\":27149:27240  function totalSupply() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contract/StakingRewards_flattened.sol\":28240:28548  function withdraw(uint256 amount) public nonReentrant updateReward(msg.sender) {... */\n    tag_41:\n        /* \"contract/StakingRewards_flattened.sol\":20985:21006  _nonReentrantBefore() */\n      tag_102\n        /* \"contract/StakingRewards_flattened.sol\":20985:21004  _nonReentrantBefore */\n      tag_103\n        /* \"contract/StakingRewards_flattened.sol\":20985:21006  _nonReentrantBefore() */\n      jump\t// in\n    tag_102:\n        /* \"contract/StakingRewards_flattened.sol\":28307:28317  msg.sender */\n      caller\n        /* \"contract/StakingRewards_flattened.sol\":27658:27674  rewardPerToken() */\n      tag_105\n        /* \"contract/StakingRewards_flattened.sol\":27658:27672  rewardPerToken */\n      tag_91\n        /* \"contract/StakingRewards_flattened.sol\":27658:27674  rewardPerToken() */\n      jump\t// in\n    tag_105:\n        /* \"contract/StakingRewards_flattened.sol\":27635:27655  rewardPerTokenStored */\n      0x08\n        /* \"contract/StakingRewards_flattened.sol\":27635:27674  rewardPerTokenStored = rewardPerToken() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract/StakingRewards_flattened.sol\":27701:27727  lastTimeRewardApplicable() */\n      tag_106\n        /* \"contract/StakingRewards_flattened.sol\":27701:27725  lastTimeRewardApplicable */\n      tag_107\n        /* \"contract/StakingRewards_flattened.sol\":27701:27727  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_106:\n        /* \"contract/StakingRewards_flattened.sol\":27684:27698  lastUpdateTime */\n      0x07\n        /* \"contract/StakingRewards_flattened.sol\":27684:27727  lastUpdateTime = lastTimeRewardApplicable() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract/StakingRewards_flattened.sol\":27760:27761  0 */\n      0x00\n        /* \"contract/StakingRewards_flattened.sol\":27741:27762  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract/StakingRewards_flattened.sol\":27741:27748  account */\n      dup2\n        /* \"contract/StakingRewards_flattened.sol\":27741:27762  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contract/StakingRewards_flattened.sol\":27737:27891  if (account != address(0)) {... */\n      tag_108\n      jumpi\n        /* \"contract/StakingRewards_flattened.sol\":27797:27812  earned(account) */\n      tag_109\n        /* \"contract/StakingRewards_flattened.sol\":27804:27811  account */\n      dup2\n        /* \"contract/StakingRewards_flattened.sol\":27797:27803  earned */\n      tag_28\n        /* \"contract/StakingRewards_flattened.sol\":27797:27812  earned(account) */\n      jump\t// in\n    tag_109:\n        /* \"contract/StakingRewards_flattened.sol\":27778:27785  rewards */\n      0x0a\n        /* \"contract/StakingRewards_flattened.sol\":27778:27794  rewards[account] */\n      0x00\n        /* \"contract/StakingRewards_flattened.sol\":27786:27793  account */\n      dup4\n        /* \"contract/StakingRewards_flattened.sol\":27778:27794  rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contract/StakingRewards_flattened.sol\":27778:27812  rewards[account] = earned(account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract/StakingRewards_flattened.sol\":27860:27880  rewardPerTokenStored */\n      sload(0x08)\n        /* \"contract/StakingRewards_flattened.sol\":27826:27848  userRewardPerTokenPaid */\n      0x09\n        /* \"contract/StakingRewards_flattened.sol\":27826:27857  userRewardPerTokenPaid[account] */\n      0x00\n        /* \"contract/StakingRewards_flattened.sol\":27849:27856  account */\n      dup4\n        /* \"contract/StakingRewards_flattened.sol\":27826:27857  userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contract/StakingRewards_flattened.sol\":27826:27880  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract/StakingRewards_flattened.sol\":27737:27891  if (account != address(0)) {... */\n    tag_108:\n        /* \"contract/StakingRewards_flattened.sol\":28346:28347  0 */\n      0x00\n        /* \"contract/StakingRewards_flattened.sol\":28337:28343  amount */\n      dup3\n        /* \"contract/StakingRewards_flattened.sol\":28337:28347  amount > 0 */\n      gt\n        /* \"contract/StakingRewards_flattened.sol\":28329:28369  require(amount > 0, \"Cannot withdraw 0\") */\n      tag_111\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_111:\n        /* \"contract/StakingRewards_flattened.sol\":28395:28401  amount */\n      dup2\n        /* \"contract/StakingRewards_flattened.sol\":28379:28391  _totalSupply */\n      0x0b\n      0x00\n        /* \"contract/StakingRewards_flattened.sol\":28379:28401  _totalSupply -= amount */\n      dup3\n      dup3\n      sload\n      tag_114\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_114:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract/StakingRewards_flattened.sol\":28436:28442  amount */\n      dup2\n        /* \"contract/StakingRewards_flattened.sol\":28411:28420  _balances */\n      0x0c\n        /* \"contract/StakingRewards_flattened.sol\":28411:28432  _balances[msg.sender] */\n      0x00\n        /* \"contract/StakingRewards_flattened.sol\":28421:28431  msg.sender */\n      caller\n        /* \"contract/StakingRewards_flattened.sol\":28411:28432  _balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contract/StakingRewards_flattened.sol\":28411:28442  _balances[msg.sender] -= amount */\n      dup3\n      dup3\n      sload\n      tag_115\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_115:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract/StakingRewards_flattened.sol\":28452:28497  stakingToken.safeTransfer(msg.sender, amount) */\n      tag_116\n        /* \"contract/StakingRewards_flattened.sol\":28478:28488  msg.sender */\n      caller\n        /* \"contract/StakingRewards_flattened.sol\":28490:28496  amount */\n      dup4\n        /* \"contract/StakingRewards_flattened.sol\":28452:28464  stakingToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract/StakingRewards_flattened.sol\":28452:28477  stakingToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_117\n      swap1\n        /* \"contract/StakingRewards_flattened.sol\":28452:28497  stakingToken.safeTransfer(msg.sender, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_116:\n        /* \"contract/StakingRewards_flattened.sol\":28522:28532  msg.sender */\n      caller\n        /* \"contract/StakingRewards_flattened.sol\":28512:28541  Withdrawn(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5\n        /* \"contract/StakingRewards_flattened.sol\":28534:28540  amount */\n      dup4\n        /* \"contract/StakingRewards_flattened.sol\":28512:28541  Withdrawn(msg.sender, amount) */\n      mload(0x40)\n      tag_118\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contract/StakingRewards_flattened.sol\":21016:21017  _ */\n      pop\n        /* \"contract/StakingRewards_flattened.sol\":21027:21047  _nonReentrantAfter() */\n      tag_119\n        /* \"contract/StakingRewards_flattened.sol\":21027:21045  _nonReentrantAfter */\n      tag_120\n        /* \"contract/StakingRewards_flattened.sol\":21027:21047  _nonReentrantAfter() */\n      jump\t// in\n    tag_119:\n        /* \"contract/StakingRewards_flattened.sol\":28240:28548  function withdraw(uint256 amount) public nonReentrant updateReward(msg.sender) {... */\n      pop\n      jump\t// out\n        /* \"contract/StakingRewards_flattened.sol\":26440:26479  uint256 public rewardsDuration = 7 days */\n    tag_43:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"contract/StakingRewards_flattened.sol\":28892:29395  function notifyRewardAmount(uint256 reward) external onlyOwner updateReward(address(0)) {... */\n    tag_47:\n        /* \"contract/StakingRewards_flattened.sol\":24362:24375  _checkOwner() */\n      tag_122\n        /* \"contract/StakingRewards_flattened.sol\":24362:24373  _checkOwner */\n      tag_123\n        /* \"contract/StakingRewards_flattened.sol\":24362:24375  _checkOwner() */\n      jump\t// in\n    tag_122:\n        /* \"contract/StakingRewards_flattened.sol\":28976:28977  0 */\n      0x00\n        /* \"contract/StakingRewards_flattened.sol\":27658:27674  rewardPerToken() */\n      tag_125\n        /* \"contract/StakingRewards_flattened.sol\":27658:27672  rewardPerToken */\n      tag_91\n        /* \"contract/StakingRewards_flattened.sol\":27658:27674  rewardPerToken() */\n      jump\t// in\n    tag_125:\n        /* \"contract/StakingRewards_flattened.sol\":27635:27655  rewardPerTokenStored */\n      0x08\n        /* \"contract/StakingRewards_flattened.sol\":27635:27674  rewardPerTokenStored = rewardPerToken() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract/StakingRewards_flattened.sol\":27701:27727  lastTimeRewardApplicable() */\n      tag_126\n        /* \"contract/StakingRewards_flattened.sol\":27701:27725  lastTimeRewardApplicable */\n      tag_107\n        /* \"contract/StakingRewards_flattened.sol\":27701:27727  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_126:\n        /* \"contract/StakingRewards_flattened.sol\":27684:27698  lastUpdateTime */\n      0x07\n        /* \"contract/StakingRewards_flattened.sol\":27684:27727  lastUpdateTime = lastTimeRewardApplicable() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract/StakingRewards_flattened.sol\":27760:27761  0 */\n      0x00\n        /* \"contract/StakingRewards_flattened.sol\":27741:27762  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract/StakingRewards_flattened.sol\":27741:27748  account */\n      dup2\n        /* \"contract/StakingRewards_flattened.sol\":27741:27762  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contract/StakingRewards_flattened.sol\":27737:27891  if (account != address(0)) {... */\n      tag_127\n      jumpi\n        /* \"contract/StakingRewards_flattened.sol\":27797:27812  earned(account) */\n      tag_128\n        /* \"contract/StakingRewards_flattened.sol\":27804:27811  account */\n      dup2\n        /* \"contract/StakingRewards_flattened.sol\":27797:27803  earned */\n      tag_28\n        /* \"contract/StakingRewards_flattened.sol\":27797:27812  earned(account) */\n      jump\t// in\n    tag_128:\n        /* \"contract/StakingRewards_flattened.sol\":27778:27785  rewards */\n      0x0a\n        /* \"contract/StakingRewards_flattened.sol\":27778:27794  rewards[account] */\n      0x00\n        /* \"contract/StakingRewards_flattened.sol\":27786:27793  account */\n      dup4\n        /* \"contract/StakingRewards_flattened.sol\":27778:27794  rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contract/StakingRewards_flattened.sol\":27778:27812  rewards[account] = earned(account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract/StakingRewards_flattened.sol\":27860:27880  rewardPerTokenStored */\n      sload(0x08)\n        /* \"contract/StakingRewards_flattened.sol\":27826:27848  userRewardPerTokenPaid */\n      0x09\n        /* \"contract/StakingRewards_flattened.sol\":27826:27857  userRewardPerTokenPaid[account] */\n      0x00\n        /* \"contract/StakingRewards_flattened.sol\":27849:27856  account */\n      dup4\n        /* \"contract/StakingRewards_flattened.sol\":27826:27857  userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contract/StakingRewards_flattened.sol\":27826:27880  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract/StakingRewards_flattened.sol\":27737:27891  if (account != address(0)) {... */\n    tag_127:\n        /* \"contract/StakingRewards_flattened.sol\":29013:29025  periodFinish */\n      sload(0x04)\n        /* \"contract/StakingRewards_flattened.sol\":28994:29009  block.timestamp */\n      timestamp\n        /* \"contract/StakingRewards_flattened.sol\":28994:29025  block.timestamp >= periodFinish */\n      lt\n        /* \"contract/StakingRewards_flattened.sol\":28990:29289  if (block.timestamp >= periodFinish) {... */\n      tag_130\n      jumpi\n        /* \"contract/StakingRewards_flattened.sol\":29063:29078  rewardsDuration */\n      sload(0x06)\n        /* \"contract/StakingRewards_flattened.sol\":29054:29060  reward */\n      dup3\n        /* \"contract/StakingRewards_flattened.sol\":29054:29078  reward / rewardsDuration */\n      tag_131\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_131:\n        /* \"contract/StakingRewards_flattened.sol\":29041:29051  rewardRate */\n      0x05\n        /* \"contract/StakingRewards_flattened.sol\":29041:29078  rewardRate = reward / rewardsDuration */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract/StakingRewards_flattened.sol\":28990:29289  if (block.timestamp >= periodFinish) {... */\n      jump(tag_132)\n    tag_130:\n        /* \"contract/StakingRewards_flattened.sol\":29109:29126  uint256 remaining */\n      0x00\n        /* \"contract/StakingRewards_flattened.sol\":29144:29159  block.timestamp */\n      timestamp\n        /* \"contract/StakingRewards_flattened.sol\":29129:29141  periodFinish */\n      sload(0x04)\n        /* \"contract/StakingRewards_flattened.sol\":29129:29159  periodFinish - block.timestamp */\n      tag_133\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_133:\n        /* \"contract/StakingRewards_flattened.sol\":29109:29159  uint256 remaining = periodFinish - block.timestamp */\n      swap1\n      pop\n        /* \"contract/StakingRewards_flattened.sol\":29173:29189  uint256 leftover */\n      0x00\n        /* \"contract/StakingRewards_flattened.sol\":29204:29214  rewardRate */\n      sload(0x05)\n        /* \"contract/StakingRewards_flattened.sol\":29192:29201  remaining */\n      dup3\n        /* \"contract/StakingRewards_flattened.sol\":29192:29214  remaining * rewardRate */\n      tag_134\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_134:\n        /* \"contract/StakingRewards_flattened.sol\":29173:29214  uint256 leftover = remaining * rewardRate */\n      swap1\n      pop\n        /* \"contract/StakingRewards_flattened.sol\":29263:29278  rewardsDuration */\n      sload(0x06)\n        /* \"contract/StakingRewards_flattened.sol\":29251:29259  leftover */\n      dup2\n        /* \"contract/StakingRewards_flattened.sol\":29242:29248  reward */\n      dup6\n        /* \"contract/StakingRewards_flattened.sol\":29242:29259  reward + leftover */\n      tag_135\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_135:\n        /* \"contract/StakingRewards_flattened.sol\":29241:29278  (reward + leftover) / rewardsDuration */\n      tag_136\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_136:\n        /* \"contract/StakingRewards_flattened.sol\":29228:29238  rewardRate */\n      0x05\n        /* \"contract/StakingRewards_flattened.sol\":29228:29278  rewardRate = (reward + leftover) / rewardsDuration */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract/StakingRewards_flattened.sol\":29095:29289  {... */\n      pop\n      pop\n        /* \"contract/StakingRewards_flattened.sol\":28990:29289  if (block.timestamp >= periodFinish) {... */\n    tag_132:\n        /* \"contract/StakingRewards_flattened.sol\":29315:29330  block.timestamp */\n      timestamp\n        /* \"contract/StakingRewards_flattened.sol\":29298:29312  lastUpdateTime */\n      0x07\n        /* \"contract/StakingRewards_flattened.sol\":29298:29330  lastUpdateTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract/StakingRewards_flattened.sol\":29373:29388  rewardsDuration */\n      sload(0x06)\n        /* \"contract/StakingRewards_flattened.sol\":29355:29370  block.timestamp */\n      timestamp\n        /* \"contract/StakingRewards_flattened.sol\":29355:29388  block.timestamp + rewardsDuration */\n      tag_137\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_137:\n        /* \"contract/StakingRewards_flattened.sol\":29340:29352  periodFinish */\n      0x04\n        /* \"contract/StakingRewards_flattened.sol\":29340:29388  periodFinish = block.timestamp + rewardsDuration */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract/StakingRewards_flattened.sol\":24385:24386  _ */\n      pop\n        /* \"contract/StakingRewards_flattened.sol\":28892:29395  function notifyRewardAmount(uint256 reward) external onlyOwner updateReward(address(0)) {... */\n      pop\n      jump\t// out\n        /* \"contract/StakingRewards_flattened.sol\":27246:27356  function balanceOf(address account) external view returns (uint256) {... */\n    tag_50:\n        /* \"contract/StakingRewards_flattened.sol\":27305:27312  uint256 */\n      0x00\n        /* \"contract/StakingRewards_flattened.sol\":27331:27340  _balances */\n      0x0c\n        /* \"contract/StakingRewards_flattened.sol\":27331:27349  _balances[account] */\n      0x00\n        /* \"contract/StakingRewards_flattened.sol\":27341:27348  account */\n      dup4\n        /* \"contract/StakingRewards_flattened.sol\":27331:27349  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contract/StakingRewards_flattened.sol\":27324:27349  return _balances[account] */\n      swap1\n      pop\n        /* \"contract/StakingRewards_flattened.sol\":27246:27356  function balanceOf(address account) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contract/StakingRewards_flattened.sol\":25124:25225  function renounceOwnership() public virtual onlyOwner {... */\n    tag_53:\n        /* \"contract/StakingRewards_flattened.sol\":24362:24375  _checkOwner() */\n      tag_140\n        /* \"contract/StakingRewards_flattened.sol\":24362:24373  _checkOwner */\n      tag_123\n        /* \"contract/StakingRewards_flattened.sol\":24362:24375  _checkOwner() */\n      jump\t// in\n    tag_140:\n        /* \"contract/StakingRewards_flattened.sol\":25188:25218  _transferOwnership(address(0)) */\n      tag_142\n        /* \"contract/StakingRewards_flattened.sol\":25215:25216  0 */\n      0x00\n        /* \"contract/StakingRewards_flattened.sol\":25188:25206  _transferOwnership */\n      tag_143\n        /* \"contract/StakingRewards_flattened.sol\":25188:25218  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_142:\n        /* \"contract/StakingRewards_flattened.sol\":25124:25225  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contract/StakingRewards_flattened.sol\":26241:26267  IERC20 public stakingToken */\n    tag_55:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contract/StakingRewards_flattened.sol\":26409:26434  uint256 public rewardRate */\n    tag_59:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"contract/StakingRewards_flattened.sol\":26562:26619  mapping(address => uint256) public userRewardPerTokenPaid */\n    tag_63:\n      mstore(0x20, 0x09)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contract/StakingRewards_flattened.sol\":24469:24554  function owner() public view virtual returns (address) {... */\n    tag_66:\n        /* \"contract/StakingRewards_flattened.sol\":24515:24522  address */\n      0x00\n        /* \"contract/StakingRewards_flattened.sol\":24541:24547  _owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract/StakingRewards_flattened.sol\":24534:24547  return _owner */\n      swap1\n      pop\n        /* \"contract/StakingRewards_flattened.sol\":24469:24554  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contract/StakingRewards_flattened.sol\":27914:28234  function stake(uint256 amount) external nonReentrant updateReward(msg.sender) {... */\n    tag_71:\n        /* \"contract/StakingRewards_flattened.sol\":20985:21006  _nonReentrantBefore() */\n      tag_146\n        /* \"contract/StakingRewards_flattened.sol\":20985:21004  _nonReentrantBefore */\n      tag_103\n        /* \"contract/StakingRewards_flattened.sol\":20985:21006  _nonReentrantBefore() */\n      jump\t// in\n    tag_146:\n        /* \"contract/StakingRewards_flattened.sol\":27980:27990  msg.sender */\n      caller\n        /* \"contract/StakingRewards_flattened.sol\":27658:27674  rewardPerToken() */\n      tag_148\n        /* \"contract/StakingRewards_flattened.sol\":27658:27672  rewardPerToken */\n      tag_91\n        /* \"contract/StakingRewards_flattened.sol\":27658:27674  rewardPerToken() */\n      jump\t// in\n    tag_148:\n        /* \"contract/StakingRewards_flattened.sol\":27635:27655  rewardPerTokenStored */\n      0x08\n        /* \"contract/StakingRewards_flattened.sol\":27635:27674  rewardPerTokenStored = rewardPerToken() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract/StakingRewards_flattened.sol\":27701:27727  lastTimeRewardApplicable() */\n      tag_149\n        /* \"contract/StakingRewards_flattened.sol\":27701:27725  lastTimeRewardApplicable */\n      tag_107\n        /* \"contract/StakingRewards_flattened.sol\":27701:27727  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_149:\n        /* \"contract/StakingRewards_flattened.sol\":27684:27698  lastUpdateTime */\n      0x07\n        /* \"contract/StakingRewards_flattened.sol\":27684:27727  lastUpdateTime = lastTimeRewardApplicable() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract/StakingRewards_flattened.sol\":27760:27761  0 */\n      0x00\n        /* \"contract/StakingRewards_flattened.sol\":27741:27762  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract/StakingRewards_flattened.sol\":27741:27748  account */\n      dup2\n        /* \"contract/StakingRewards_flattened.sol\":27741:27762  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contract/StakingRewards_flattened.sol\":27737:27891  if (account != address(0)) {... */\n      tag_150\n      jumpi\n        /* \"contract/StakingRewards_flattened.sol\":27797:27812  earned(account) */\n      tag_151\n        /* \"contract/StakingRewards_flattened.sol\":27804:27811  account */\n      dup2\n        /* \"contract/StakingRewards_flattened.sol\":27797:27803  earned */\n      tag_28\n        /* \"contract/StakingRewards_flattened.sol\":27797:27812  earned(account) */\n      jump\t// in\n    tag_151:\n        /* \"contract/StakingRewards_flattened.sol\":27778:27785  rewards */\n      0x0a\n        /* \"contract/StakingRewards_flattened.sol\":27778:27794  rewards[account] */\n      0x00\n        /* \"contract/StakingRewards_flattened.sol\":27786:27793  account */\n      dup4\n        /* \"contract/StakingRewards_flattened.sol\":27778:27794  rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contract/StakingRewards_flattened.sol\":27778:27812  rewards[account] = earned(account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract/StakingRewards_flattened.sol\":27860:27880  rewardPerTokenStored */\n      sload(0x08)\n        /* \"contract/StakingRewards_flattened.sol\":27826:27848  userRewardPerTokenPaid */\n      0x09\n        /* \"contract/StakingRewards_flattened.sol\":27826:27857  userRewardPerTokenPaid[account] */\n      0x00\n        /* \"contract/StakingRewards_flattened.sol\":27849:27856  account */\n      dup4\n        /* \"contract/StakingRewards_flattened.sol\":27826:27857  userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contract/StakingRewards_flattened.sol\":27826:27880  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract/StakingRewards_flattened.sol\":27737:27891  if (account != address(0)) {... */\n    tag_150:\n        /* \"contract/StakingRewards_flattened.sol\":28019:28020  0 */\n      0x00\n        /* \"contract/StakingRewards_flattened.sol\":28010:28016  amount */\n      dup3\n        /* \"contract/StakingRewards_flattened.sol\":28010:28020  amount > 0 */\n      gt\n        /* \"contract/StakingRewards_flattened.sol\":28002:28039  require(amount > 0, \"Cannot stake 0\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_154\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_153:\n        /* \"contract/StakingRewards_flattened.sol\":28065:28071  amount */\n      dup2\n        /* \"contract/StakingRewards_flattened.sol\":28049:28061  _totalSupply */\n      0x0b\n      0x00\n        /* \"contract/StakingRewards_flattened.sol\":28049:28071  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_156\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_156:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract/StakingRewards_flattened.sol\":28106:28112  amount */\n      dup2\n        /* \"contract/StakingRewards_flattened.sol\":28081:28090  _balances */\n      0x0c\n        /* \"contract/StakingRewards_flattened.sol\":28081:28102  _balances[msg.sender] */\n      0x00\n        /* \"contract/StakingRewards_flattened.sol\":28091:28101  msg.sender */\n      caller\n        /* \"contract/StakingRewards_flattened.sol\":28081:28102  _balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contract/StakingRewards_flattened.sol\":28081:28112  _balances[msg.sender] += amount */\n      dup3\n      dup3\n      sload\n      tag_157\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_157:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract/StakingRewards_flattened.sol\":28122:28186  stakingToken.safeTransferFrom(msg.sender, address(this), amount) */\n      tag_158\n        /* \"contract/StakingRewards_flattened.sol\":28152:28162  msg.sender */\n      caller\n        /* \"contract/StakingRewards_flattened.sol\":28172:28176  this */\n      address\n        /* \"contract/StakingRewards_flattened.sol\":28179:28185  amount */\n      dup5\n        /* \"contract/StakingRewards_flattened.sol\":28122:28134  stakingToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract/StakingRewards_flattened.sol\":28122:28151  stakingToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_159\n      swap1\n        /* \"contract/StakingRewards_flattened.sol\":28122:28186  stakingToken.safeTransferFrom(msg.sender, address(this), amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_158:\n        /* \"contract/StakingRewards_flattened.sol\":28208:28218  msg.sender */\n      caller\n        /* \"contract/StakingRewards_flattened.sol\":28201:28227  Staked(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n        /* \"contract/StakingRewards_flattened.sol\":28220:28226  amount */\n      dup4\n        /* \"contract/StakingRewards_flattened.sol\":28201:28227  Staked(msg.sender, amount) */\n      mload(0x40)\n      tag_160\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contract/StakingRewards_flattened.sol\":21016:21017  _ */\n      pop\n        /* \"contract/StakingRewards_flattened.sol\":21027:21047  _nonReentrantAfter() */\n      tag_161\n        /* \"contract/StakingRewards_flattened.sol\":21027:21045  _nonReentrantAfter */\n      tag_120\n        /* \"contract/StakingRewards_flattened.sol\":21027:21047  _nonReentrantAfter() */\n      jump\t// in\n    tag_161:\n        /* \"contract/StakingRewards_flattened.sol\":27914:28234  function stake(uint256 amount) external nonReentrant updateReward(msg.sender) {... */\n      pop\n      jump\t// out\n        /* \"contract/StakingRewards_flattened.sol\":28554:28856  function claimReward() public nonReentrant updateReward(msg.sender) {... */\n    tag_73:\n        /* \"contract/StakingRewards_flattened.sol\":20985:21006  _nonReentrantBefore() */\n      tag_163\n        /* \"contract/StakingRewards_flattened.sol\":20985:21004  _nonReentrantBefore */\n      tag_103\n        /* \"contract/StakingRewards_flattened.sol\":20985:21006  _nonReentrantBefore() */\n      jump\t// in\n    tag_163:\n        /* \"contract/StakingRewards_flattened.sol\":28610:28620  msg.sender */\n      caller\n        /* \"contract/StakingRewards_flattened.sol\":27658:27674  rewardPerToken() */\n      tag_165\n        /* \"contract/StakingRewards_flattened.sol\":27658:27672  rewardPerToken */\n      tag_91\n        /* \"contract/StakingRewards_flattened.sol\":27658:27674  rewardPerToken() */\n      jump\t// in\n    tag_165:\n        /* \"contract/StakingRewards_flattened.sol\":27635:27655  rewardPerTokenStored */\n      0x08\n        /* \"contract/StakingRewards_flattened.sol\":27635:27674  rewardPerTokenStored = rewardPerToken() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract/StakingRewards_flattened.sol\":27701:27727  lastTimeRewardApplicable() */\n      tag_166\n        /* \"contract/StakingRewards_flattened.sol\":27701:27725  lastTimeRewardApplicable */\n      tag_107\n        /* \"contract/StakingRewards_flattened.sol\":27701:27727  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_166:\n        /* \"contract/StakingRewards_flattened.sol\":27684:27698  lastUpdateTime */\n      0x07\n        /* \"contract/StakingRewards_flattened.sol\":27684:27727  lastUpdateTime = lastTimeRewardApplicable() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract/StakingRewards_flattened.sol\":27760:27761  0 */\n      0x00\n        /* \"contract/StakingRewards_flattened.sol\":27741:27762  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract/StakingRewards_flattened.sol\":27741:27748  account */\n      dup2\n        /* \"contract/StakingRewards_flattened.sol\":27741:27762  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contract/StakingRewards_flattened.sol\":27737:27891  if (account != address(0)) {... */\n      tag_167\n      jumpi\n        /* \"contract/StakingRewards_flattened.sol\":27797:27812  earned(account) */\n      tag_168\n        /* \"contract/StakingRewards_flattened.sol\":27804:27811  account */\n      dup2\n        /* \"contract/StakingRewards_flattened.sol\":27797:27803  earned */\n      tag_28\n        /* \"contract/StakingRewards_flattened.sol\":27797:27812  earned(account) */\n      jump\t// in\n    tag_168:\n        /* \"contract/StakingRewards_flattened.sol\":27778:27785  rewards */\n      0x0a\n        /* \"contract/StakingRewards_flattened.sol\":27778:27794  rewards[account] */\n      0x00\n        /* \"contract/StakingRewards_flattened.sol\":27786:27793  account */\n      dup4\n        /* \"contract/StakingRewards_flattened.sol\":27778:27794  rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contract/StakingRewards_flattened.sol\":27778:27812  rewards[account] = earned(account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract/StakingRewards_flattened.sol\":27860:27880  rewardPerTokenStored */\n      sload(0x08)\n        /* \"contract/StakingRewards_flattened.sol\":27826:27848  userRewardPerTokenPaid */\n      0x09\n        /* \"contract/StakingRewards_flattened.sol\":27826:27857  userRewardPerTokenPaid[account] */\n      0x00\n        /* \"contract/StakingRewards_flattened.sol\":27849:27856  account */\n      dup4\n        /* \"contract/StakingRewards_flattened.sol\":27826:27857  userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contract/StakingRewards_flattened.sol\":27826:27880  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract/StakingRewards_flattened.sol\":27737:27891  if (account != address(0)) {... */\n    tag_167:\n        /* \"contract/StakingRewards_flattened.sol\":28632:28646  uint256 reward */\n      0x00\n        /* \"contract/StakingRewards_flattened.sol\":28649:28656  rewards */\n      0x0a\n        /* \"contract/StakingRewards_flattened.sol\":28649:28668  rewards[msg.sender] */\n      0x00\n        /* \"contract/StakingRewards_flattened.sol\":28657:28667  msg.sender */\n      caller\n        /* \"contract/StakingRewards_flattened.sol\":28649:28668  rewards[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contract/StakingRewards_flattened.sol\":28632:28668  uint256 reward = rewards[msg.sender] */\n      swap1\n      pop\n        /* \"contract/StakingRewards_flattened.sol\":28691:28692  0 */\n      0x00\n        /* \"contract/StakingRewards_flattened.sol\":28682:28688  reward */\n      dup2\n        /* \"contract/StakingRewards_flattened.sol\":28682:28692  reward > 0 */\n      gt\n        /* \"contract/StakingRewards_flattened.sol\":28678:28850  if (reward > 0) {... */\n      iszero\n      tag_170\n      jumpi\n        /* \"contract/StakingRewards_flattened.sol\":28730:28731  0 */\n      0x00\n        /* \"contract/StakingRewards_flattened.sol\":28708:28715  rewards */\n      0x0a\n        /* \"contract/StakingRewards_flattened.sol\":28708:28727  rewards[msg.sender] */\n      0x00\n        /* \"contract/StakingRewards_flattened.sol\":28716:28726  msg.sender */\n      caller\n        /* \"contract/StakingRewards_flattened.sol\":28708:28727  rewards[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contract/StakingRewards_flattened.sol\":28708:28731  rewards[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract/StakingRewards_flattened.sol\":28745:28790  rewardsToken.safeTransfer(msg.sender, reward) */\n      tag_171\n        /* \"contract/StakingRewards_flattened.sol\":28771:28781  msg.sender */\n      caller\n        /* \"contract/StakingRewards_flattened.sol\":28783:28789  reward */\n      dup3\n        /* \"contract/StakingRewards_flattened.sol\":28745:28757  rewardsToken */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract/StakingRewards_flattened.sol\":28745:28770  rewardsToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_117\n      swap1\n        /* \"contract/StakingRewards_flattened.sol\":28745:28790  rewardsToken.safeTransfer(msg.sender, reward) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_171:\n        /* \"contract/StakingRewards_flattened.sol\":28820:28830  msg.sender */\n      caller\n        /* \"contract/StakingRewards_flattened.sol\":28809:28839  RewardPaid(msg.sender, reward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486\n        /* \"contract/StakingRewards_flattened.sol\":28832:28838  reward */\n      dup3\n        /* \"contract/StakingRewards_flattened.sol\":28809:28839  RewardPaid(msg.sender, reward) */\n      mload(0x40)\n      tag_172\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contract/StakingRewards_flattened.sol\":28678:28850  if (reward > 0) {... */\n    tag_170:\n        /* \"contract/StakingRewards_flattened.sol\":28622:28856  {... */\n      pop\n        /* \"contract/StakingRewards_flattened.sol\":21016:21017  _ */\n      pop\n        /* \"contract/StakingRewards_flattened.sol\":21027:21047  _nonReentrantAfter() */\n      tag_173\n        /* \"contract/StakingRewards_flattened.sol\":21027:21045  _nonReentrantAfter */\n      tag_120\n        /* \"contract/StakingRewards_flattened.sol\":21027:21047  _nonReentrantAfter() */\n      jump\t// in\n    tag_173:\n        /* \"contract/StakingRewards_flattened.sol\":28554:28856  function claimReward() public nonReentrant updateReward(msg.sender) {... */\n      jump\t// out\n        /* \"contract/StakingRewards_flattened.sol\":26485:26514  uint256 public lastUpdateTime */\n    tag_75:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"contract/StakingRewards_flattened.sol\":26304:26330  IERC20 public rewardsToken */\n    tag_78:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contract/StakingRewards_flattened.sol\":26520:26555  uint256 public rewardPerTokenStored */\n    tag_81:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"contract/StakingRewards_flattened.sol\":26376:26403  uint256 public periodFinish */\n    tag_84:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contract/StakingRewards_flattened.sol\":25374:25589  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_88:\n        /* \"contract/StakingRewards_flattened.sol\":24362:24375  _checkOwner() */\n      tag_175\n        /* \"contract/StakingRewards_flattened.sol\":24362:24373  _checkOwner */\n      tag_123\n        /* \"contract/StakingRewards_flattened.sol\":24362:24375  _checkOwner() */\n      jump\t// in\n    tag_175:\n        /* \"contract/StakingRewards_flattened.sol\":25478:25479  0 */\n      0x00\n        /* \"contract/StakingRewards_flattened.sol\":25458:25480  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract/StakingRewards_flattened.sol\":25458:25466  newOwner */\n      dup2\n        /* \"contract/StakingRewards_flattened.sol\":25458:25480  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contract/StakingRewards_flattened.sol\":25454:25545  if (newOwner == address(0)) {... */\n      tag_177\n      jumpi\n        /* \"contract/StakingRewards_flattened.sol\":25531:25532  0 */\n      0x00\n        /* \"contract/StakingRewards_flattened.sol\":25503:25534  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contract/StakingRewards_flattened.sol\":25454:25545  if (newOwner == address(0)) {... */\n    tag_177:\n        /* \"contract/StakingRewards_flattened.sol\":25554:25582  _transferOwnership(newOwner) */\n      tag_179\n        /* \"contract/StakingRewards_flattened.sol\":25573:25581  newOwner */\n      dup2\n        /* \"contract/StakingRewards_flattened.sol\":25554:25572  _transferOwnership */\n      tag_143\n        /* \"contract/StakingRewards_flattened.sol\":25554:25582  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_179:\n        /* \"contract/StakingRewards_flattened.sol\":25374:25589  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contract/StakingRewards_flattened.sol\":29446:29717  function rewardPerToken() internal view returns (uint256) {... */\n    tag_91:\n        /* \"contract/StakingRewards_flattened.sol\":29495:29502  uint256 */\n      0x00\n        /* \"contract/StakingRewards_flattened.sol\":29534:29535  0 */\n      0x00\n        /* \"contract/StakingRewards_flattened.sol\":29518:29530  _totalSupply */\n      sload(0x0b)\n        /* \"contract/StakingRewards_flattened.sol\":29518:29535  _totalSupply == 0 */\n      sub\n        /* \"contract/StakingRewards_flattened.sol\":29514:29589  if (_totalSupply == 0) {... */\n      tag_181\n      jumpi\n        /* \"contract/StakingRewards_flattened.sol\":29558:29578  rewardPerTokenStored */\n      sload(0x08)\n        /* \"contract/StakingRewards_flattened.sol\":29551:29578  return rewardPerTokenStored */\n      swap1\n      pop\n      jump(tag_180)\n        /* \"contract/StakingRewards_flattened.sol\":29514:29589  if (_totalSupply == 0) {... */\n    tag_181:\n        /* \"contract/StakingRewards_flattened.sol\":29698:29710  _totalSupply */\n      sload(0x0b)\n        /* \"contract/StakingRewards_flattened.sol\":29690:29694  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contract/StakingRewards_flattened.sol\":29672:29686  lastUpdateTime */\n      sload(0x07)\n        /* \"contract/StakingRewards_flattened.sol\":29643:29669  lastTimeRewardApplicable() */\n      tag_182\n        /* \"contract/StakingRewards_flattened.sol\":29643:29667  lastTimeRewardApplicable */\n      tag_107\n        /* \"contract/StakingRewards_flattened.sol\":29643:29669  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_182:\n        /* \"contract/StakingRewards_flattened.sol\":29643:29686  lastTimeRewardApplicable() - lastUpdateTime */\n      tag_183\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_183:\n        /* \"contract/StakingRewards_flattened.sol\":29629:29639  rewardRate */\n      sload(0x05)\n        /* \"contract/StakingRewards_flattened.sol\":29629:29687  rewardRate * (lastTimeRewardApplicable() - lastUpdateTime) */\n      tag_184\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_184:\n        /* \"contract/StakingRewards_flattened.sol\":29629:29694  rewardRate * (lastTimeRewardApplicable() - lastUpdateTime) * 1e18 */\n      tag_185\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_185:\n        /* \"contract/StakingRewards_flattened.sol\":29628:29710  (rewardRate * (lastTimeRewardApplicable() - lastUpdateTime) * 1e18) / _totalSupply */\n      tag_186\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_186:\n        /* \"contract/StakingRewards_flattened.sol\":29605:29625  rewardPerTokenStored */\n      sload(0x08)\n        /* \"contract/StakingRewards_flattened.sol\":29605:29710  rewardPerTokenStored + (rewardRate * (lastTimeRewardApplicable() - lastUpdateTime) * 1e18) / _totalSupply */\n      tag_187\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_187:\n        /* \"contract/StakingRewards_flattened.sol\":29598:29710  return rewardPerTokenStored + (rewardRate * (lastTimeRewardApplicable() - lastUpdateTime) * 1e18) / _totalSupply */\n      swap1\n      pop\n        /* \"contract/StakingRewards_flattened.sol\":29446:29717  function rewardPerToken() internal view returns (uint256) {... */\n    tag_180:\n      swap1\n      jump\t// out\n        /* \"contract/StakingRewards_flattened.sol\":21060:21367  function _nonReentrantBefore() private {... */\n    tag_103:\n        /* \"contract/StakingRewards_flattened.sol\":20384:20385  2 */\n      0x02\n        /* \"contract/StakingRewards_flattened.sol\":21187:21194  _status */\n      sload(0x00)\n        /* \"contract/StakingRewards_flattened.sol\":21187:21205  _status == ENTERED */\n      sub\n        /* \"contract/StakingRewards_flattened.sol\":21183:21269  if (_status == ENTERED) {... */\n      tag_189\n      jumpi\n        /* \"contract/StakingRewards_flattened.sol\":21228:21258  ReentrancyGuardReentrantCall() */\n      mload(0x40)\n      0x3ee5aeb500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contract/StakingRewards_flattened.sol\":21183:21269  if (_status == ENTERED) {... */\n    tag_189:\n        /* \"contract/StakingRewards_flattened.sol\":20384:20385  2 */\n      0x02\n        /* \"contract/StakingRewards_flattened.sol\":21343:21350  _status */\n      0x00\n        /* \"contract/StakingRewards_flattened.sol\":21343:21360  _status = ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract/StakingRewards_flattened.sol\":21060:21367  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"contract/StakingRewards_flattened.sol\":29723:29878  function lastTimeRewardApplicable() internal view returns (uint256) {... */\n    tag_107:\n        /* \"contract/StakingRewards_flattened.sol\":29782:29789  uint256 */\n      0x00\n        /* \"contract/StakingRewards_flattened.sol\":29826:29838  periodFinish */\n      sload(0x04)\n        /* \"contract/StakingRewards_flattened.sol\":29808:29823  block.timestamp */\n      timestamp\n        /* \"contract/StakingRewards_flattened.sol\":29808:29838  block.timestamp < periodFinish */\n      lt\n        /* \"contract/StakingRewards_flattened.sol\":29808:29871  block.timestamp < periodFinish ? block.timestamp : periodFinish */\n      tag_191\n      jumpi\n        /* \"contract/StakingRewards_flattened.sol\":29859:29871  periodFinish */\n      sload(0x04)\n        /* \"contract/StakingRewards_flattened.sol\":29808:29871  block.timestamp < periodFinish ? block.timestamp : periodFinish */\n      jump(tag_192)\n    tag_191:\n        /* \"contract/StakingRewards_flattened.sol\":29841:29856  block.timestamp */\n      timestamp\n        /* \"contract/StakingRewards_flattened.sol\":29808:29871  block.timestamp < periodFinish ? block.timestamp : periodFinish */\n    tag_192:\n        /* \"contract/StakingRewards_flattened.sol\":29801:29871  return block.timestamp < periodFinish ? block.timestamp : periodFinish */\n      swap1\n      pop\n        /* \"contract/StakingRewards_flattened.sol\":29723:29878  function lastTimeRewardApplicable() internal view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contract/StakingRewards_flattened.sol\":9599:9759  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_117:\n        /* \"contract/StakingRewards_flattened.sol\":9681:9752  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_194\n        /* \"contract/StakingRewards_flattened.sol\":9701:9706  token */\n      dup4\n        /* \"contract/StakingRewards_flattened.sol\":9723:9728  token */\n      dup5\n        /* \"contract/StakingRewards_flattened.sol\":9723:9737  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contract/StakingRewards_flattened.sol\":9740:9742  to */\n      dup6\n        /* \"contract/StakingRewards_flattened.sol\":9744:9749  value */\n      dup6\n        /* \"contract/StakingRewards_flattened.sol\":9708:9751  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_195\n      swap3\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_195:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contract/StakingRewards_flattened.sol\":9681:9700  _callOptionalReturn */\n      tag_197\n        /* \"contract/StakingRewards_flattened.sol\":9681:9752  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_194:\n        /* \"contract/StakingRewards_flattened.sol\":9599:9759  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contract/StakingRewards_flattened.sol\":21373:21581  function _nonReentrantAfter() private {... */\n    tag_120:\n        /* \"contract/StakingRewards_flattened.sol\":20342:20343  1 */\n      0x01\n        /* \"contract/StakingRewards_flattened.sol\":21553:21560  _status */\n      0x00\n        /* \"contract/StakingRewards_flattened.sol\":21553:21574  _status = NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract/StakingRewards_flattened.sol\":21373:21581  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"contract/StakingRewards_flattened.sol\":24627:24789  function _checkOwner() internal view virtual {... */\n    tag_123:\n        /* \"contract/StakingRewards_flattened.sol\":24697:24709  _msgSender() */\n      tag_200\n        /* \"contract/StakingRewards_flattened.sol\":24697:24707  _msgSender */\n      tag_201\n        /* \"contract/StakingRewards_flattened.sol\":24697:24709  _msgSender() */\n      jump\t// in\n    tag_200:\n        /* \"contract/StakingRewards_flattened.sol\":24686:24709  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract/StakingRewards_flattened.sol\":24686:24693  owner() */\n      tag_202\n        /* \"contract/StakingRewards_flattened.sol\":24686:24691  owner */\n      tag_66\n        /* \"contract/StakingRewards_flattened.sol\":24686:24693  owner() */\n      jump\t// in\n    tag_202:\n        /* \"contract/StakingRewards_flattened.sol\":24686:24709  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contract/StakingRewards_flattened.sol\":24682:24783  if (owner() != _msgSender()) {... */\n      tag_203\n      jumpi\n        /* \"contract/StakingRewards_flattened.sol\":24759:24771  _msgSender() */\n      tag_204\n        /* \"contract/StakingRewards_flattened.sol\":24759:24769  _msgSender */\n      tag_201\n        /* \"contract/StakingRewards_flattened.sol\":24759:24771  _msgSender() */\n      jump\t// in\n    tag_204:\n        /* \"contract/StakingRewards_flattened.sol\":24732:24772  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_205\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_205:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contract/StakingRewards_flattened.sol\":24682:24783  if (owner() != _msgSender()) {... */\n    tag_203:\n        /* \"contract/StakingRewards_flattened.sol\":24627:24789  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"contract/StakingRewards_flattened.sol\":25743:25930  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_143:\n        /* \"contract/StakingRewards_flattened.sol\":25816:25832  address oldOwner */\n      0x00\n        /* \"contract/StakingRewards_flattened.sol\":25835:25841  _owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract/StakingRewards_flattened.sol\":25816:25841  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"contract/StakingRewards_flattened.sol\":25860:25868  newOwner */\n      dup2\n        /* \"contract/StakingRewards_flattened.sol\":25851:25857  _owner */\n      0x01\n      0x00\n        /* \"contract/StakingRewards_flattened.sol\":25851:25868  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contract/StakingRewards_flattened.sol\":25914:25922  newOwner */\n      dup2\n        /* \"contract/StakingRewards_flattened.sol\":25883:25923  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract/StakingRewards_flattened.sol\":25904:25912  oldOwner */\n      dup2\n        /* \"contract/StakingRewards_flattened.sol\":25883:25923  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contract/StakingRewards_flattened.sol\":25806:25930  {... */\n      pop\n        /* \"contract/StakingRewards_flattened.sol\":25743:25930  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contract/StakingRewards_flattened.sol\":9998:10186  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_159:\n        /* \"contract/StakingRewards_flattened.sol\":10098:10179  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_208\n        /* \"contract/StakingRewards_flattened.sol\":10118:10123  token */\n      dup5\n        /* \"contract/StakingRewards_flattened.sol\":10140:10145  token */\n      dup6\n        /* \"contract/StakingRewards_flattened.sol\":10140:10158  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contract/StakingRewards_flattened.sol\":10161:10165  from */\n      dup7\n        /* \"contract/StakingRewards_flattened.sol\":10167:10169  to */\n      dup7\n        /* \"contract/StakingRewards_flattened.sol\":10171:10176  value */\n      dup7\n        /* \"contract/StakingRewards_flattened.sol\":10125:10178  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_209\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_209:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contract/StakingRewards_flattened.sol\":10098:10117  _callOptionalReturn */\n      tag_197\n        /* \"contract/StakingRewards_flattened.sol\":10098:10179  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_208:\n        /* \"contract/StakingRewards_flattened.sol\":9998:10186  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contract/StakingRewards_flattened.sol\":16750:17470  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_197:\n        /* \"contract/StakingRewards_flattened.sol\":16830:16848  uint256 returnSize */\n      0x00\n        /* \"contract/StakingRewards_flattened.sol\":16858:16877  uint256 returnValue */\n      0x00\n        /* \"contract/StakingRewards_flattened.sol\":16996:17000  0x20 */\n      0x20\n        /* \"contract/StakingRewards_flattened.sol\":16993:16994  0 */\n      0x00\n        /* \"contract/StakingRewards_flattened.sol\":16986:16990  data */\n      dup5\n        /* \"contract/StakingRewards_flattened.sol\":16980:16991  mload(data) */\n      mload\n        /* \"contract/StakingRewards_flattened.sol\":16973:16977  0x20 */\n      0x20\n        /* \"contract/StakingRewards_flattened.sol\":16967:16971  data */\n      dup7\n        /* \"contract/StakingRewards_flattened.sol\":16963:16978  add(data, 0x20) */\n      add\n        /* \"contract/StakingRewards_flattened.sol\":16960:16961  0 */\n      0x00\n        /* \"contract/StakingRewards_flattened.sol\":16953:16958  token */\n      dup9\n        /* \"contract/StakingRewards_flattened.sol\":16946:16951  gas() */\n      gas\n        /* \"contract/StakingRewards_flattened.sol\":16941:17001  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"contract/StakingRewards_flattened.sol\":17053:17060  success */\n      dup1\n        /* \"contract/StakingRewards_flattened.sol\":17043:17219  if iszero(success) {... */\n      tag_212\n      jumpi\n        /* \"contract/StakingRewards_flattened.sol\":17097:17101  0x40 */\n      0x40\n        /* \"contract/StakingRewards_flattened.sol\":17091:17102  mload(0x40) */\n      mload\n        /* \"contract/StakingRewards_flattened.sol\":17142:17158  returndatasize() */\n      returndatasize\n        /* \"contract/StakingRewards_flattened.sol\":17139:17140  0 */\n      0x00\n        /* \"contract/StakingRewards_flattened.sol\":17134:17137  ptr */\n      dup3\n        /* \"contract/StakingRewards_flattened.sol\":17119:17159  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"contract/StakingRewards_flattened.sol\":17188:17204  returndatasize() */\n      returndatasize\n        /* \"contract/StakingRewards_flattened.sol\":17183:17186  ptr */\n      dup2\n        /* \"contract/StakingRewards_flattened.sol\":17176:17205  revert(ptr, returndatasize()) */\n      revert\n        /* \"contract/StakingRewards_flattened.sol\":17043:17219  if iszero(success) {... */\n    tag_212:\n        /* \"contract/StakingRewards_flattened.sol\":17246:17262  returndatasize() */\n      returndatasize\n        /* \"contract/StakingRewards_flattened.sol\":17232:17262  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"contract/StakingRewards_flattened.sol\":17296:17297  0 */\n      0x00\n        /* \"contract/StakingRewards_flattened.sol\":17290:17298  mload(0) */\n      mload\n        /* \"contract/StakingRewards_flattened.sol\":17275:17298  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"contract/StakingRewards_flattened.sol\":16912:17308  {... */\n      pop\n        /* \"contract/StakingRewards_flattened.sol\":17336:17337  0 */\n      0x00\n        /* \"contract/StakingRewards_flattened.sol\":17322:17332  returnSize */\n      dup3\n        /* \"contract/StakingRewards_flattened.sol\":17322:17337  returnSize == 0 */\n      eq\n        /* \"contract/StakingRewards_flattened.sol\":17322:17390  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_213\n      jumpi\n        /* \"contract/StakingRewards_flattened.sol\":17389:17390  1 */\n      0x01\n        /* \"contract/StakingRewards_flattened.sol\":17374:17385  returnValue */\n      dup2\n        /* \"contract/StakingRewards_flattened.sol\":17374:17390  returnValue != 1 */\n      eq\n      iszero\n        /* \"contract/StakingRewards_flattened.sol\":17322:17390  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_214)\n    tag_213:\n        /* \"contract/StakingRewards_flattened.sol\":17370:17371  0 */\n      0x00\n        /* \"contract/StakingRewards_flattened.sol\":17348:17353  token */\n      dup5\n        /* \"contract/StakingRewards_flattened.sol\":17340:17366  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"contract/StakingRewards_flattened.sol\":17340:17371  address(token).code.length == 0 */\n      eq\n        /* \"contract/StakingRewards_flattened.sol\":17322:17390  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_214:\n        /* \"contract/StakingRewards_flattened.sol\":17318:17464  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_215\n      jumpi\n        /* \"contract/StakingRewards_flattened.sol\":17446:17451  token */\n      dup4\n        /* \"contract/StakingRewards_flattened.sol\":17413:17453  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_216\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_216:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contract/StakingRewards_flattened.sol\":17318:17464  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_215:\n        /* \"contract/StakingRewards_flattened.sol\":16820:17470  {... */\n      pop\n      pop\n        /* \"contract/StakingRewards_flattened.sol\":16750:17470  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contract/StakingRewards_flattened.sol\":22547:22643  function _msgSender() internal view virtual returns (address) {... */\n    tag_201:\n        /* \"contract/StakingRewards_flattened.sol\":22600:22607  address */\n      0x00\n        /* \"contract/StakingRewards_flattened.sol\":22626:22636  msg.sender */\n      caller\n        /* \"contract/StakingRewards_flattened.sol\":22619:22636  return msg.sender */\n      swap1\n      pop\n        /* \"contract/StakingRewards_flattened.sol\":22547:22643  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_219:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_221:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_222:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_248\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_221\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_223:\n        /* \"#utility.yul\":641:665   */\n      tag_250\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_222\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_251\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_251:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_224:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_253\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_223\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_27:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_255\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_256\n      tag_219\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":917:1036   */\n    tag_255:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_257\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_224\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_225:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_226:\n        /* \"#utility.yul\":1346:1370   */\n      tag_260\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_225\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1605   */\n    tag_30:\n        /* \"#utility.yul\":1476:1480   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1503:1512   */\n      dup3\n        /* \"#utility.yul\":1499:1517   */\n      add\n        /* \"#utility.yul\":1491:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1598   */\n      tag_262\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1584:1593   */\n      dup4\n        /* \"#utility.yul\":1580:1597   */\n      add\n        /* \"#utility.yul\":1571:1577   */\n      dup5\n        /* \"#utility.yul\":1527:1598   */\n      tag_226\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":1383:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1733   */\n    tag_227:\n        /* \"#utility.yul\":1684:1708   */\n      tag_264\n        /* \"#utility.yul\":1702:1707   */\n      dup2\n        /* \"#utility.yul\":1684:1708   */\n      tag_225\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":1677:1682   */\n      dup2\n        /* \"#utility.yul\":1674:1709   */\n      eq\n        /* \"#utility.yul\":1664:1727   */\n      tag_265\n      jumpi\n        /* \"#utility.yul\":1723:1724   */\n      0x00\n        /* \"#utility.yul\":1720:1721   */\n      0x00\n        /* \"#utility.yul\":1713:1725   */\n      revert\n        /* \"#utility.yul\":1664:1727   */\n    tag_265:\n        /* \"#utility.yul\":1611:1733   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1739:1878   */\n    tag_228:\n        /* \"#utility.yul\":1785:1790   */\n      0x00\n        /* \"#utility.yul\":1823:1829   */\n      dup2\n        /* \"#utility.yul\":1810:1830   */\n      calldataload\n        /* \"#utility.yul\":1801:1830   */\n      swap1\n      pop\n        /* \"#utility.yul\":1839:1872   */\n      tag_267\n        /* \"#utility.yul\":1866:1871   */\n      dup2\n        /* \"#utility.yul\":1839:1872   */\n      tag_227\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":1739:1878   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1884:2213   */\n    tag_40:\n        /* \"#utility.yul\":1943:1949   */\n      0x00\n        /* \"#utility.yul\":1992:1994   */\n      0x20\n        /* \"#utility.yul\":1980:1989   */\n      dup3\n        /* \"#utility.yul\":1971:1978   */\n      dup5\n        /* \"#utility.yul\":1967:1990   */\n      sub\n        /* \"#utility.yul\":1963:1995   */\n      slt\n        /* \"#utility.yul\":1960:2079   */\n      iszero\n      tag_269\n      jumpi\n        /* \"#utility.yul\":1998:2077   */\n      tag_270\n      tag_219\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":1960:2079   */\n    tag_269:\n        /* \"#utility.yul\":2118:2119   */\n      0x00\n        /* \"#utility.yul\":2143:2196   */\n      tag_271\n        /* \"#utility.yul\":2188:2195   */\n      dup5\n        /* \"#utility.yul\":2179:2185   */\n      dup3\n        /* \"#utility.yul\":2168:2177   */\n      dup6\n        /* \"#utility.yul\":2164:2186   */\n      add\n        /* \"#utility.yul\":2143:2196   */\n      tag_228\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":2133:2196   */\n      swap2\n      pop\n        /* \"#utility.yul\":2089:2206   */\n      pop\n        /* \"#utility.yul\":1884:2213   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2219:2279   */\n    tag_229:\n        /* \"#utility.yul\":2247:2250   */\n      0x00\n        /* \"#utility.yul\":2268:2273   */\n      dup2\n        /* \"#utility.yul\":2261:2273   */\n      swap1\n      pop\n        /* \"#utility.yul\":2219:2279   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2285:2427   */\n    tag_230:\n        /* \"#utility.yul\":2335:2344   */\n      0x00\n        /* \"#utility.yul\":2368:2421   */\n      tag_274\n        /* \"#utility.yul\":2386:2420   */\n      tag_275\n        /* \"#utility.yul\":2395:2419   */\n      tag_276\n        /* \"#utility.yul\":2413:2418   */\n      dup5\n        /* \"#utility.yul\":2395:2419   */\n      tag_221\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":2386:2420   */\n      tag_229\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":2368:2421   */\n      tag_221\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":2355:2421   */\n      swap1\n      pop\n        /* \"#utility.yul\":2285:2427   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2433:2559   */\n    tag_231:\n        /* \"#utility.yul\":2483:2492   */\n      0x00\n        /* \"#utility.yul\":2516:2553   */\n      tag_278\n        /* \"#utility.yul\":2547:2552   */\n      dup3\n        /* \"#utility.yul\":2516:2553   */\n      tag_230\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":2503:2553   */\n      swap1\n      pop\n        /* \"#utility.yul\":2433:2559   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2565:2704   */\n    tag_232:\n        /* \"#utility.yul\":2628:2637   */\n      0x00\n        /* \"#utility.yul\":2661:2698   */\n      tag_280\n        /* \"#utility.yul\":2692:2697   */\n      dup3\n        /* \"#utility.yul\":2661:2698   */\n      tag_231\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":2648:2698   */\n      swap1\n      pop\n        /* \"#utility.yul\":2565:2704   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2710:2867   */\n    tag_233:\n        /* \"#utility.yul\":2810:2860   */\n      tag_282\n        /* \"#utility.yul\":2854:2859   */\n      dup2\n        /* \"#utility.yul\":2810:2860   */\n      tag_232\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":2805:2808   */\n      dup3\n        /* \"#utility.yul\":2798:2861   */\n      mstore\n        /* \"#utility.yul\":2710:2867   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2873:3121   */\n    tag_57:\n        /* \"#utility.yul\":2979:2983   */\n      0x00\n        /* \"#utility.yul\":3017:3019   */\n      0x20\n        /* \"#utility.yul\":3006:3015   */\n      dup3\n        /* \"#utility.yul\":3002:3020   */\n      add\n        /* \"#utility.yul\":2994:3020   */\n      swap1\n      pop\n        /* \"#utility.yul\":3030:3114   */\n      tag_284\n        /* \"#utility.yul\":3111:3112   */\n      0x00\n        /* \"#utility.yul\":3100:3109   */\n      dup4\n        /* \"#utility.yul\":3096:3113   */\n      add\n        /* \"#utility.yul\":3087:3093   */\n      dup5\n        /* \"#utility.yul\":3030:3114   */\n      tag_233\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":2873:3121   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3127:3245   */\n    tag_234:\n        /* \"#utility.yul\":3214:3238   */\n      tag_286\n        /* \"#utility.yul\":3232:3237   */\n      dup2\n        /* \"#utility.yul\":3214:3238   */\n      tag_222\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":3209:3212   */\n      dup3\n        /* \"#utility.yul\":3202:3239   */\n      mstore\n        /* \"#utility.yul\":3127:3245   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3251:3473   */\n    tag_68:\n        /* \"#utility.yul\":3344:3348   */\n      0x00\n        /* \"#utility.yul\":3382:3384   */\n      0x20\n        /* \"#utility.yul\":3371:3380   */\n      dup3\n        /* \"#utility.yul\":3367:3385   */\n      add\n        /* \"#utility.yul\":3359:3385   */\n      swap1\n      pop\n        /* \"#utility.yul\":3395:3466   */\n      tag_288\n        /* \"#utility.yul\":3463:3464   */\n      0x00\n        /* \"#utility.yul\":3452:3461   */\n      dup4\n        /* \"#utility.yul\":3448:3465   */\n      add\n        /* \"#utility.yul\":3439:3445   */\n      dup5\n        /* \"#utility.yul\":3395:3466   */\n      tag_234\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":3251:3473   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3479:3659   */\n    tag_235:\n        /* \"#utility.yul\":3527:3604   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3524:3525   */\n      0x00\n        /* \"#utility.yul\":3517:3605   */\n      mstore\n        /* \"#utility.yul\":3624:3628   */\n      0x11\n        /* \"#utility.yul\":3621:3622   */\n      0x04\n        /* \"#utility.yul\":3614:3629   */\n      mstore\n        /* \"#utility.yul\":3648:3652   */\n      0x24\n        /* \"#utility.yul\":3645:3646   */\n      0x00\n        /* \"#utility.yul\":3638:3653   */\n      revert\n        /* \"#utility.yul\":3665:3859   */\n    tag_93:\n        /* \"#utility.yul\":3705:3709   */\n      0x00\n        /* \"#utility.yul\":3725:3745   */\n      tag_291\n        /* \"#utility.yul\":3743:3744   */\n      dup3\n        /* \"#utility.yul\":3725:3745   */\n      tag_225\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":3720:3745   */\n      swap2\n      pop\n        /* \"#utility.yul\":3759:3779   */\n      tag_292\n        /* \"#utility.yul\":3777:3778   */\n      dup4\n        /* \"#utility.yul\":3759:3779   */\n      tag_225\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":3754:3779   */\n      swap3\n      pop\n        /* \"#utility.yul\":3803:3804   */\n      dup3\n        /* \"#utility.yul\":3800:3801   */\n      dup3\n        /* \"#utility.yul\":3796:3805   */\n      sub\n        /* \"#utility.yul\":3788:3805   */\n      swap1\n      pop\n        /* \"#utility.yul\":3827:3828   */\n      dup2\n        /* \"#utility.yul\":3821:3825   */\n      dup2\n        /* \"#utility.yul\":3818:3829   */\n      gt\n        /* \"#utility.yul\":3815:3852   */\n      iszero\n      tag_293\n      jumpi\n        /* \"#utility.yul\":3832:3850   */\n      tag_294\n      tag_235\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":3815:3852   */\n    tag_293:\n        /* \"#utility.yul\":3665:3859   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3865:4275   */\n    tag_95:\n        /* \"#utility.yul\":3905:3912   */\n      0x00\n        /* \"#utility.yul\":3928:3948   */\n      tag_296\n        /* \"#utility.yul\":3946:3947   */\n      dup3\n        /* \"#utility.yul\":3928:3948   */\n      tag_225\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":3923:3948   */\n      swap2\n      pop\n        /* \"#utility.yul\":3962:3982   */\n      tag_297\n        /* \"#utility.yul\":3980:3981   */\n      dup4\n        /* \"#utility.yul\":3962:3982   */\n      tag_225\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":3957:3982   */\n      swap3\n      pop\n        /* \"#utility.yul\":4017:4018   */\n      dup3\n        /* \"#utility.yul\":4014:4015   */\n      dup3\n        /* \"#utility.yul\":4010:4019   */\n      mul\n        /* \"#utility.yul\":4039:4069   */\n      tag_298\n        /* \"#utility.yul\":4057:4068   */\n      dup2\n        /* \"#utility.yul\":4039:4069   */\n      tag_225\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":4028:4069   */\n      swap2\n      pop\n        /* \"#utility.yul\":4218:4219   */\n      dup3\n        /* \"#utility.yul\":4209:4216   */\n      dup3\n        /* \"#utility.yul\":4205:4220   */\n      div\n        /* \"#utility.yul\":4202:4203   */\n      dup5\n        /* \"#utility.yul\":4199:4221   */\n      eq\n        /* \"#utility.yul\":4179:4180   */\n      dup4\n        /* \"#utility.yul\":4172:4181   */\n      iszero\n        /* \"#utility.yul\":4152:4235   */\n      or\n        /* \"#utility.yul\":4129:4268   */\n      tag_299\n      jumpi\n        /* \"#utility.yul\":4248:4266   */\n      tag_300\n      tag_235\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":4129:4268   */\n    tag_299:\n        /* \"#utility.yul\":3913:4275   */\n      pop\n        /* \"#utility.yul\":3865:4275   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4281:4461   */\n    tag_236:\n        /* \"#utility.yul\":4329:4406   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4326:4327   */\n      0x00\n        /* \"#utility.yul\":4319:4407   */\n      mstore\n        /* \"#utility.yul\":4426:4430   */\n      0x12\n        /* \"#utility.yul\":4423:4424   */\n      0x04\n        /* \"#utility.yul\":4416:4431   */\n      mstore\n        /* \"#utility.yul\":4450:4454   */\n      0x24\n        /* \"#utility.yul\":4447:4448   */\n      0x00\n        /* \"#utility.yul\":4440:4455   */\n      revert\n        /* \"#utility.yul\":4467:4652   */\n    tag_97:\n        /* \"#utility.yul\":4507:4508   */\n      0x00\n        /* \"#utility.yul\":4524:4544   */\n      tag_303\n        /* \"#utility.yul\":4542:4543   */\n      dup3\n        /* \"#utility.yul\":4524:4544   */\n      tag_225\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":4519:4544   */\n      swap2\n      pop\n        /* \"#utility.yul\":4558:4578   */\n      tag_304\n        /* \"#utility.yul\":4576:4577   */\n      dup4\n        /* \"#utility.yul\":4558:4578   */\n      tag_225\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":4553:4578   */\n      swap3\n      pop\n        /* \"#utility.yul\":4597:4598   */\n      dup3\n        /* \"#utility.yul\":4587:4622   */\n      tag_305\n      jumpi\n        /* \"#utility.yul\":4602:4620   */\n      tag_306\n      tag_236\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":4587:4622   */\n    tag_305:\n        /* \"#utility.yul\":4644:4645   */\n      dup3\n        /* \"#utility.yul\":4641:4642   */\n      dup3\n        /* \"#utility.yul\":4637:4646   */\n      div\n        /* \"#utility.yul\":4632:4646   */\n      swap1\n      pop\n        /* \"#utility.yul\":4467:4652   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4658:4849   */\n    tag_99:\n        /* \"#utility.yul\":4698:4701   */\n      0x00\n        /* \"#utility.yul\":4717:4737   */\n      tag_308\n        /* \"#utility.yul\":4735:4736   */\n      dup3\n        /* \"#utility.yul\":4717:4737   */\n      tag_225\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":4712:4737   */\n      swap2\n      pop\n        /* \"#utility.yul\":4751:4771   */\n      tag_309\n        /* \"#utility.yul\":4769:4770   */\n      dup4\n        /* \"#utility.yul\":4751:4771   */\n      tag_225\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":4746:4771   */\n      swap3\n      pop\n        /* \"#utility.yul\":4794:4795   */\n      dup3\n        /* \"#utility.yul\":4791:4792   */\n      dup3\n        /* \"#utility.yul\":4787:4796   */\n      add\n        /* \"#utility.yul\":4780:4796   */\n      swap1\n      pop\n        /* \"#utility.yul\":4815:4818   */\n      dup1\n        /* \"#utility.yul\":4812:4813   */\n      dup3\n        /* \"#utility.yul\":4809:4819   */\n      gt\n        /* \"#utility.yul\":4806:4842   */\n      iszero\n      tag_310\n      jumpi\n        /* \"#utility.yul\":4822:4840   */\n      tag_311\n      tag_235\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":4806:4842   */\n    tag_310:\n        /* \"#utility.yul\":4658:4849   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4855:5024   */\n    tag_237:\n        /* \"#utility.yul\":4939:4950   */\n      0x00\n        /* \"#utility.yul\":4973:4979   */\n      dup3\n        /* \"#utility.yul\":4968:4971   */\n      dup3\n        /* \"#utility.yul\":4961:4980   */\n      mstore\n        /* \"#utility.yul\":5013:5017   */\n      0x20\n        /* \"#utility.yul\":5008:5011   */\n      dup3\n        /* \"#utility.yul\":5004:5018   */\n      add\n        /* \"#utility.yul\":4989:5018   */\n      swap1\n      pop\n        /* \"#utility.yul\":4855:5024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5030:5197   */\n    tag_238:\n        /* \"#utility.yul\":5170:5189   */\n      0x43616e6e6f742077697468647261772030000000000000000000000000000000\n        /* \"#utility.yul\":5166:5167   */\n      0x00\n        /* \"#utility.yul\":5158:5164   */\n      dup3\n        /* \"#utility.yul\":5154:5168   */\n      add\n        /* \"#utility.yul\":5147:5190   */\n      mstore\n        /* \"#utility.yul\":5030:5197   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5203:5569   */\n    tag_239:\n        /* \"#utility.yul\":5345:5348   */\n      0x00\n        /* \"#utility.yul\":5366:5433   */\n      tag_315\n        /* \"#utility.yul\":5430:5432   */\n      0x11\n        /* \"#utility.yul\":5425:5428   */\n      dup4\n        /* \"#utility.yul\":5366:5433   */\n      tag_237\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":5359:5433   */\n      swap2\n      pop\n        /* \"#utility.yul\":5442:5535   */\n      tag_316\n        /* \"#utility.yul\":5531:5534   */\n      dup3\n        /* \"#utility.yul\":5442:5535   */\n      tag_238\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":5560:5562   */\n      0x20\n        /* \"#utility.yul\":5555:5558   */\n      dup3\n        /* \"#utility.yul\":5551:5563   */\n      add\n        /* \"#utility.yul\":5544:5563   */\n      swap1\n      pop\n        /* \"#utility.yul\":5203:5569   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5575:5994   */\n    tag_113:\n        /* \"#utility.yul\":5741:5745   */\n      0x00\n        /* \"#utility.yul\":5779:5781   */\n      0x20\n        /* \"#utility.yul\":5768:5777   */\n      dup3\n        /* \"#utility.yul\":5764:5782   */\n      add\n        /* \"#utility.yul\":5756:5782   */\n      swap1\n      pop\n        /* \"#utility.yul\":5828:5837   */\n      dup2\n        /* \"#utility.yul\":5822:5826   */\n      dup2\n        /* \"#utility.yul\":5818:5838   */\n      sub\n        /* \"#utility.yul\":5814:5815   */\n      0x00\n        /* \"#utility.yul\":5803:5812   */\n      dup4\n        /* \"#utility.yul\":5799:5816   */\n      add\n        /* \"#utility.yul\":5792:5839   */\n      mstore\n        /* \"#utility.yul\":5856:5987   */\n      tag_318\n        /* \"#utility.yul\":5982:5986   */\n      dup2\n        /* \"#utility.yul\":5856:5987   */\n      tag_239\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":5848:5987   */\n      swap1\n      pop\n        /* \"#utility.yul\":5575:5994   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6000:6164   */\n    tag_240:\n        /* \"#utility.yul\":6140:6156   */\n      0x43616e6e6f74207374616b652030000000000000000000000000000000000000\n        /* \"#utility.yul\":6136:6137   */\n      0x00\n        /* \"#utility.yul\":6128:6134   */\n      dup3\n        /* \"#utility.yul\":6124:6138   */\n      add\n        /* \"#utility.yul\":6117:6157   */\n      mstore\n        /* \"#utility.yul\":6000:6164   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6170:6536   */\n    tag_241:\n        /* \"#utility.yul\":6312:6315   */\n      0x00\n        /* \"#utility.yul\":6333:6400   */\n      tag_321\n        /* \"#utility.yul\":6397:6399   */\n      0x0e\n        /* \"#utility.yul\":6392:6395   */\n      dup4\n        /* \"#utility.yul\":6333:6400   */\n      tag_237\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":6326:6400   */\n      swap2\n      pop\n        /* \"#utility.yul\":6409:6502   */\n      tag_322\n        /* \"#utility.yul\":6498:6501   */\n      dup3\n        /* \"#utility.yul\":6409:6502   */\n      tag_240\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":6527:6529   */\n      0x20\n        /* \"#utility.yul\":6522:6525   */\n      dup3\n        /* \"#utility.yul\":6518:6530   */\n      add\n        /* \"#utility.yul\":6511:6530   */\n      swap1\n      pop\n        /* \"#utility.yul\":6170:6536   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6542:6961   */\n    tag_155:\n        /* \"#utility.yul\":6708:6712   */\n      0x00\n        /* \"#utility.yul\":6746:6748   */\n      0x20\n        /* \"#utility.yul\":6735:6744   */\n      dup3\n        /* \"#utility.yul\":6731:6749   */\n      add\n        /* \"#utility.yul\":6723:6749   */\n      swap1\n      pop\n        /* \"#utility.yul\":6795:6804   */\n      dup2\n        /* \"#utility.yul\":6789:6793   */\n      dup2\n        /* \"#utility.yul\":6785:6805   */\n      sub\n        /* \"#utility.yul\":6781:6782   */\n      0x00\n        /* \"#utility.yul\":6770:6779   */\n      dup4\n        /* \"#utility.yul\":6766:6783   */\n      add\n        /* \"#utility.yul\":6759:6806   */\n      mstore\n        /* \"#utility.yul\":6823:6954   */\n      tag_324\n        /* \"#utility.yul\":6949:6953   */\n      dup2\n        /* \"#utility.yul\":6823:6954   */\n      tag_241\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":6815:6954   */\n      swap1\n      pop\n        /* \"#utility.yul\":6542:6961   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6967:7299   */\n    tag_196:\n        /* \"#utility.yul\":7088:7092   */\n      0x00\n        /* \"#utility.yul\":7126:7128   */\n      0x40\n        /* \"#utility.yul\":7115:7124   */\n      dup3\n        /* \"#utility.yul\":7111:7129   */\n      add\n        /* \"#utility.yul\":7103:7129   */\n      swap1\n      pop\n        /* \"#utility.yul\":7139:7210   */\n      tag_326\n        /* \"#utility.yul\":7207:7208   */\n      0x00\n        /* \"#utility.yul\":7196:7205   */\n      dup4\n        /* \"#utility.yul\":7192:7209   */\n      add\n        /* \"#utility.yul\":7183:7189   */\n      dup6\n        /* \"#utility.yul\":7139:7210   */\n      tag_234\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":7220:7292   */\n      tag_327\n        /* \"#utility.yul\":7288:7290   */\n      0x20\n        /* \"#utility.yul\":7277:7286   */\n      dup4\n        /* \"#utility.yul\":7273:7291   */\n      add\n        /* \"#utility.yul\":7264:7270   */\n      dup5\n        /* \"#utility.yul\":7220:7292   */\n      tag_226\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":6967:7299   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7305:7747   */\n    tag_210:\n        /* \"#utility.yul\":7454:7458   */\n      0x00\n        /* \"#utility.yul\":7492:7494   */\n      0x60\n        /* \"#utility.yul\":7481:7490   */\n      dup3\n        /* \"#utility.yul\":7477:7495   */\n      add\n        /* \"#utility.yul\":7469:7495   */\n      swap1\n      pop\n        /* \"#utility.yul\":7505:7576   */\n      tag_329\n        /* \"#utility.yul\":7573:7574   */\n      0x00\n        /* \"#utility.yul\":7562:7571   */\n      dup4\n        /* \"#utility.yul\":7558:7575   */\n      add\n        /* \"#utility.yul\":7549:7555   */\n      dup7\n        /* \"#utility.yul\":7505:7576   */\n      tag_234\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":7586:7658   */\n      tag_330\n        /* \"#utility.yul\":7654:7656   */\n      0x20\n        /* \"#utility.yul\":7643:7652   */\n      dup4\n        /* \"#utility.yul\":7639:7657   */\n      add\n        /* \"#utility.yul\":7630:7636   */\n      dup6\n        /* \"#utility.yul\":7586:7658   */\n      tag_234\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":7668:7740   */\n      tag_331\n        /* \"#utility.yul\":7736:7738   */\n      0x40\n        /* \"#utility.yul\":7725:7734   */\n      dup4\n        /* \"#utility.yul\":7721:7739   */\n      add\n        /* \"#utility.yul\":7712:7718   */\n      dup5\n        /* \"#utility.yul\":7668:7740   */\n      tag_226\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":7305:7747   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212207671f37add904e6b4c0494d6f0ef025ff99abcb4a2a049b2031bfe5f051c685864736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_647": {
									"entryPoint": null,
									"id": 647,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_771": {
									"entryPoint": null,
									"id": 771,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_951": {
									"entryPoint": null,
									"id": 951,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_867": {
									"entryPoint": 327,
									"id": 867,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 596,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 616,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 678,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 693,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 557,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 526,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 522,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 574,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1707:1",
										"nodeType": "YulBlock",
										"src": "0:1707:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "379:81:1",
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nativeSrc": "389:65:1",
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:1",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nativeSrc": "400:54:1",
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:1",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:1",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nativeSrc": "511:51:1",
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nativeSrc": "521:35:1",
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nativeSrc": "532:24:1",
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:1",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:1",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nativeSrc": "611:79:1",
													"nodeType": "YulBlock",
													"src": "611:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:1",
																"nodeType": "YulBlock",
																"src": "668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:1",
																					"nodeType": "YulLiteral",
																					"src": "677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:1",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			"nativeSrc": "670:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:1"
																		},
																		"nativeSrc": "670:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:1"
																				},
																				"nativeSrc": "641:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:1"
																		},
																		"nativeSrc": "631:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:1"
																},
																"nativeSrc": "624:43:1",
																"nodeType": "YulFunctionCall",
																"src": "624:43:1"
															},
															"nativeSrc": "621:63:1",
															"nodeType": "YulIf",
															"src": "621:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:1",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "568:122:1"
											},
											{
												"body": {
													"nativeSrc": "759:80:1",
													"nodeType": "YulBlock",
													"src": "759:80:1",
													"statements": [
														{
															"nativeSrc": "769:22:1",
															"nodeType": "YulAssignment",
															"src": "769:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:1"
																},
																"nativeSrc": "778:13:1",
																"nodeType": "YulFunctionCall",
																"src": "778:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:1"
																},
																"nativeSrc": "800:33:1",
																"nodeType": "YulFunctionCall",
																"src": "800:33:1"
															},
															"nativeSrc": "800:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:1",
														"nodeType": "YulTypedName",
														"src": "737:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:1",
														"nodeType": "YulTypedName",
														"src": "745:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:1",
														"nodeType": "YulTypedName",
														"src": "753:5:1",
														"type": ""
													}
												],
												"src": "696:143:1"
											},
											{
												"body": {
													"nativeSrc": "939:413:1",
													"nodeType": "YulBlock",
													"src": "939:413:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "985:83:1",
																"nodeType": "YulBlock",
																"src": "985:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "987:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:1"
																			},
																			"nativeSrc": "987:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:1"
																		},
																		"nativeSrc": "987:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "960:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "969:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "956:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:1"
																		},
																		"nativeSrc": "956:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "981:2:1",
																		"nodeType": "YulLiteral",
																		"src": "981:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "952:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:1"
																},
																"nativeSrc": "952:32:1",
																"nodeType": "YulFunctionCall",
																"src": "952:32:1"
															},
															"nativeSrc": "949:119:1",
															"nodeType": "YulIf",
															"src": "949:119:1"
														},
														{
															"nativeSrc": "1078:128:1",
															"nodeType": "YulBlock",
															"src": "1078:128:1",
															"statements": [
																{
																	"nativeSrc": "1093:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1107:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1097:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1122:74:1",
																	"nodeType": "YulAssignment",
																	"src": "1122:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1168:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1179:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1164:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:1"
																				},
																				"nativeSrc": "1164:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1188:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1132:31:1",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:1"
																		},
																		"nativeSrc": "1132:64:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1122:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1216:129:1",
															"nodeType": "YulBlock",
															"src": "1216:129:1",
															"statements": [
																{
																	"nativeSrc": "1231:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1245:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1235:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1261:74:1",
																	"nodeType": "YulAssignment",
																	"src": "1261:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1307:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1318:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1303:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:1"
																				},
																				"nativeSrc": "1303:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1327:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1271:31:1",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:1"
																		},
																		"nativeSrc": "1271:64:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1261:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "845:507:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "901:9:1",
														"nodeType": "YulTypedName",
														"src": "901:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "912:7:1",
														"nodeType": "YulTypedName",
														"src": "912:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "924:6:1",
														"nodeType": "YulTypedName",
														"src": "924:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "932:6:1",
														"nodeType": "YulTypedName",
														"src": "932:6:1",
														"type": ""
													}
												],
												"src": "845:507:1"
											},
											{
												"body": {
													"nativeSrc": "1423:53:1",
													"nodeType": "YulBlock",
													"src": "1423:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1440:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1440:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1463:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1463:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1445:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "1445:17:1"
																		},
																		"nativeSrc": "1445:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1445:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1433:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1433:6:1"
																},
																"nativeSrc": "1433:37:1",
																"nodeType": "YulFunctionCall",
																"src": "1433:37:1"
															},
															"nativeSrc": "1433:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "1433:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1358:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1411:5:1",
														"nodeType": "YulTypedName",
														"src": "1411:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1418:3:1",
														"nodeType": "YulTypedName",
														"src": "1418:3:1",
														"type": ""
													}
												],
												"src": "1358:118:1"
											},
											{
												"body": {
													"nativeSrc": "1580:124:1",
													"nodeType": "YulBlock",
													"src": "1580:124:1",
													"statements": [
														{
															"nativeSrc": "1590:26:1",
															"nodeType": "YulAssignment",
															"src": "1590:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1602:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1602:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1613:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1613:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1598:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1598:3:1"
																},
																"nativeSrc": "1598:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1598:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1590:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1590:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1670:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1670:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1683:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1683:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1694:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1694:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1679:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1679:3:1"
																		},
																		"nativeSrc": "1679:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1679:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1626:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "1626:43:1"
																},
																"nativeSrc": "1626:71:1",
																"nodeType": "YulFunctionCall",
																"src": "1626:71:1"
															},
															"nativeSrc": "1626:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "1626:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1482:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1552:9:1",
														"nodeType": "YulTypedName",
														"src": "1552:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1564:6:1",
														"nodeType": "YulTypedName",
														"src": "1564:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1575:4:1",
														"nodeType": "YulTypedName",
														"src": "1575:4:1",
														"type": ""
													}
												],
												"src": "1482:222:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405262093a80600655348015610016575f5ffd5b506040516118ef3803806118ef83398181016040528101906100389190610268565b3360015f819055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100b0575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100a791906102b5565b60405180910390fd5b6100bf8161014760201b60201c565b508160025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506102ce565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102378261020e565b9050919050565b6102478161022d565b8114610251575f5ffd5b50565b5f815190506102628161023e565b92915050565b5f5f6040838503121561027e5761027d61020a565b5b5f61028b85828601610254565b925050602061029c85828601610254565b9150509250929050565b6102af8161022d565b82525050565b5f6020820190506102c85f8301846102a6565b92915050565b611614806102db5f395ff3fe608060405234801561000f575f5ffd5b506004361061011e575f3560e01c80637b0a47ee116100ab578063c8f33c911161006f578063c8f33c91146102e0578063d1af0c7d146102fe578063df136d651461031c578063ebe2b12b1461033a578063f2fde38b146103585761011e565b80637b0a47ee1461024e5780638b8763471461026c5780638da5cb5b1461029c578063a694fc3a146102ba578063b88a802f146102d65761011e565b8063386a9525116100f2578063386a9525146101bc5780633c6b16ab146101da57806370a08231146101f6578063715018a61461022657806372f702f3146102305761011e565b80628cc262146101225780630700037d1461015257806318160ddd146101825780632e1a7d4d146101a0575b5f5ffd5b61013c60048036038101906101379190611224565b610374565b6040516101499190611267565b60405180910390f35b61016c60048036038101906101679190611224565b61046f565b6040516101799190611267565b60405180910390f35b61018a610484565b6040516101979190611267565b60405180910390f35b6101ba60048036038101906101b591906112aa565b61048d565b005b6101c46106c7565b6040516101d19190611267565b60405180910390f35b6101f460048036038101906101ef91906112aa565b6106cd565b005b610210600480360381019061020b9190611224565b610839565b60405161021d9190611267565b60405180910390f35b61022e61087f565b005b610238610892565b6040516102459190611330565b60405180910390f35b6102566108b7565b6040516102639190611267565b60405180910390f35b61028660048036038101906102819190611224565b6108bd565b6040516102939190611267565b60405180910390f35b6102a46108d2565b6040516102b19190611358565b60405180910390f35b6102d460048036038101906102cf91906112aa565b6108fa565b005b6102de610b36565b005b6102e8610d4f565b6040516102f59190611267565b60405180910390f35b610306610d55565b6040516103139190611330565b60405180910390f35b610324610d7a565b6040516103319190611267565b60405180910390f35b610342610d80565b60405161034f9190611267565b60405180910390f35b610372600480360381019061036d9190611224565b610d86565b005b5f600a5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054670de0b6b3a764000060095f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610402610e0a565b61040c919061139e565b600c5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461045491906113d1565b61045e919061143f565b610468919061146f565b9050919050565b600a602052805f5260405f205f915090505481565b5f600b54905090565b610495610e73565b3361049e610e0a565b6008819055506104ac610eb7565b6007819055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610574576104ee81610374565b600a5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555060085460095f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b5f82116105b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ad906114fc565b60405180910390fd5b81600b5f8282546105c7919061139e565b9250508190555081600c5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461061a919061139e565b9250508190555061066d338360025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610ed09092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5836040516106b39190611267565b60405180910390a2506106c4610f4f565b50565b60065481565b6106d5610f58565b5f6106de610e0a565b6008819055506106ec610eb7565b6007819055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146107b45761072e81610374565b600a5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555060085460095f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b60045442106107d657600654826107cb919061143f565b60058190555061081a565b5f426004546107e5919061139e565b90505f600554826107f691906113d1565b90506006548185610807919061146f565b610811919061143f565b60058190555050505b426007819055506006544261082f919061146f565b6004819055505050565b5f600c5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610887610f58565b6108905f610fdf565b565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60055481565b6009602052805f5260405f205f915090505481565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610902610e73565b3361090b610e0a565b600881905550610919610eb7565b6007819055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146109e15761095b81610374565b600a5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555060085460095f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b5f8211610a23576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1a90611564565b60405180910390fd5b81600b5f828254610a34919061146f565b9250508190555081600c5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610a87919061146f565b92505081905550610adc33308460025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166110a2909392919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d83604051610b229190611267565b60405180910390a250610b33610f4f565b50565b610b3e610e73565b33610b47610e0a565b600881905550610b55610eb7565b6007819055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610c1d57610b9781610374565b600a5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555060085460095f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b5f600a5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f811115610d43575f600a5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550610cf4338260035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610ed09092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e048682604051610d3a9190611267565b60405180910390a25b5050610d4d610f4f565b565b60075481565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60085481565b60045481565b610d8e610f58565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610dfe575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610df59190611358565b60405180910390fd5b610e0781610fdf565b50565b5f5f600b5403610e1e576008549050610e70565b600b54670de0b6b3a7640000600754610e35610eb7565b610e3f919061139e565b600554610e4c91906113d1565b610e5691906113d1565b610e60919061143f565b600854610e6d919061146f565b90505b90565b60025f5403610eae576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60025f81905550565b5f6004544210610ec957600454610ecb565b425b905090565b610f4a838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610f03929190611582565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611124565b505050565b60015f81905550565b610f606111bf565b73ffffffffffffffffffffffffffffffffffffffff16610f7e6108d2565b73ffffffffffffffffffffffffffffffffffffffff1614610fdd57610fa16111bf565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610fd49190611358565b60405180910390fd5b565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61111e848573ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040516024016110d7939291906115a9565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611124565b50505050565b5f5f60205f8451602086015f885af180611143576040513d5f823e3d81fd5b3d92505f519150505f821461115c576001811415611177565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b156111b957836040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016111b09190611358565b60405180910390fd5b50505050565b5f33905090565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6111f3826111ca565b9050919050565b611203816111e9565b811461120d575f5ffd5b50565b5f8135905061121e816111fa565b92915050565b5f60208284031215611239576112386111c6565b5b5f61124684828501611210565b91505092915050565b5f819050919050565b6112618161124f565b82525050565b5f60208201905061127a5f830184611258565b92915050565b6112898161124f565b8114611293575f5ffd5b50565b5f813590506112a481611280565b92915050565b5f602082840312156112bf576112be6111c6565b5b5f6112cc84828501611296565b91505092915050565b5f819050919050565b5f6112f86112f36112ee846111ca565b6112d5565b6111ca565b9050919050565b5f611309826112de565b9050919050565b5f61131a826112ff565b9050919050565b61132a81611310565b82525050565b5f6020820190506113435f830184611321565b92915050565b611352816111e9565b82525050565b5f60208201905061136b5f830184611349565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6113a88261124f565b91506113b38361124f565b92508282039050818111156113cb576113ca611371565b5b92915050565b5f6113db8261124f565b91506113e68361124f565b92508282026113f48161124f565b9150828204841483151761140b5761140a611371565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6114498261124f565b91506114548361124f565b92508261146457611463611412565b5b828204905092915050565b5f6114798261124f565b91506114848361124f565b925082820190508082111561149c5761149b611371565b5b92915050565b5f82825260208201905092915050565b7f43616e6e6f7420776974686472617720300000000000000000000000000000005f82015250565b5f6114e66011836114a2565b91506114f1826114b2565b602082019050919050565b5f6020820190508181035f830152611513816114da565b9050919050565b7f43616e6e6f74207374616b6520300000000000000000000000000000000000005f82015250565b5f61154e600e836114a2565b91506115598261151a565b602082019050919050565b5f6020820190508181035f83015261157b81611542565b9050919050565b5f6040820190506115955f830185611349565b6115a26020830184611258565b9392505050565b5f6060820190506115bc5f830186611349565b6115c96020830185611349565b6115d66040830184611258565b94935050505056fea26469706673582212207671f37add904e6b4c0494d6f0ef025ff99abcb4a2a049b2031bfe5f051c685864736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH3 0x93A80 PUSH1 0x6 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x16 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x18EF CODESIZE SUB DUP1 PUSH2 0x18EF DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x38 SWAP2 SWAP1 PUSH2 0x268 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB0 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA7 SWAP2 SWAP1 PUSH2 0x2B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBF DUP2 PUSH2 0x147 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP2 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x2CE JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x237 DUP3 PUSH2 0x20E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x247 DUP2 PUSH2 0x22D JUMP JUMPDEST DUP2 EQ PUSH2 0x251 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x262 DUP2 PUSH2 0x23E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x27E JUMPI PUSH2 0x27D PUSH2 0x20A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x28B DUP6 DUP3 DUP7 ADD PUSH2 0x254 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x29C DUP6 DUP3 DUP7 ADD PUSH2 0x254 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AF DUP2 PUSH2 0x22D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C8 PUSH0 DUP4 ADD DUP5 PUSH2 0x2A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1614 DUP1 PUSH2 0x2DB PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11E JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7B0A47EE GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xC8F33C91 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xC8F33C91 EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0xDF136D65 EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0xEBE2B12B EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x358 JUMPI PUSH2 0x11E JUMP JUMPDEST DUP1 PUSH4 0x7B0A47EE EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x8B876347 EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0xB88A802F EQ PUSH2 0x2D6 JUMPI PUSH2 0x11E JUMP JUMPDEST DUP1 PUSH4 0x386A9525 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x386A9525 EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x3C6B16AB EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x230 JUMPI PUSH2 0x11E JUMP JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x700037D EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1A0 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x1224 JUMP JUMPDEST PUSH2 0x374 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x1267 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x1224 JUMP JUMPDEST PUSH2 0x46F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0x1267 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18A PUSH2 0x484 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x1267 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0x12AA JUMP JUMPDEST PUSH2 0x48D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C4 PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0x1267 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EF SWAP2 SWAP1 PUSH2 0x12AA JUMP JUMPDEST PUSH2 0x6CD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x210 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x1224 JUMP JUMPDEST PUSH2 0x839 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x1267 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22E PUSH2 0x87F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x238 PUSH2 0x892 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x1330 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x256 PUSH2 0x8B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x1267 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x286 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x281 SWAP2 SWAP1 PUSH2 0x1224 JUMP JUMPDEST PUSH2 0x8BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x293 SWAP2 SWAP1 PUSH2 0x1267 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A4 PUSH2 0x8D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B1 SWAP2 SWAP1 PUSH2 0x1358 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CF SWAP2 SWAP1 PUSH2 0x12AA JUMP JUMPDEST PUSH2 0x8FA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DE PUSH2 0xB36 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E8 PUSH2 0xD4F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0x1267 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x306 PUSH2 0xD55 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x1330 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x324 PUSH2 0xD7A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x331 SWAP2 SWAP1 PUSH2 0x1267 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x342 PUSH2 0xD80 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34F SWAP2 SWAP1 PUSH2 0x1267 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x372 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36D SWAP2 SWAP1 PUSH2 0x1224 JUMP JUMPDEST PUSH2 0xD86 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH1 0xA PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH1 0x9 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x402 PUSH2 0xE0A JUMP JUMPDEST PUSH2 0x40C SWAP2 SWAP1 PUSH2 0x139E JUMP JUMPDEST PUSH1 0xC PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x454 SWAP2 SWAP1 PUSH2 0x13D1 JUMP JUMPDEST PUSH2 0x45E SWAP2 SWAP1 PUSH2 0x143F JUMP JUMPDEST PUSH2 0x468 SWAP2 SWAP1 PUSH2 0x146F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0xB SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x495 PUSH2 0xE73 JUMP JUMPDEST CALLER PUSH2 0x49E PUSH2 0xE0A JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0x4AC PUSH2 0xEB7 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x574 JUMPI PUSH2 0x4EE DUP2 PUSH2 0x374 JUMP JUMPDEST PUSH1 0xA PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x8 SLOAD PUSH1 0x9 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 DUP3 GT PUSH2 0x5B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5AD SWAP1 PUSH2 0x14FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0xB PUSH0 DUP3 DUP3 SLOAD PUSH2 0x5C7 SWAP2 SWAP1 PUSH2 0x139E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xC PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x61A SWAP2 SWAP1 PUSH2 0x139E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x66D CALLER DUP4 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xED0 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x6B3 SWAP2 SWAP1 PUSH2 0x1267 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x6C4 PUSH2 0xF4F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x6D5 PUSH2 0xF58 JUMP JUMPDEST PUSH0 PUSH2 0x6DE PUSH2 0xE0A JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0x6EC PUSH2 0xEB7 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7B4 JUMPI PUSH2 0x72E DUP2 PUSH2 0x374 JUMP JUMPDEST PUSH1 0xA PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x8 SLOAD PUSH1 0x9 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x4 SLOAD TIMESTAMP LT PUSH2 0x7D6 JUMPI PUSH1 0x6 SLOAD DUP3 PUSH2 0x7CB SWAP2 SWAP1 PUSH2 0x143F JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH2 0x81A JUMP JUMPDEST PUSH0 TIMESTAMP PUSH1 0x4 SLOAD PUSH2 0x7E5 SWAP2 SWAP1 PUSH2 0x139E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x5 SLOAD DUP3 PUSH2 0x7F6 SWAP2 SWAP1 PUSH2 0x13D1 JUMP JUMPDEST SWAP1 POP PUSH1 0x6 SLOAD DUP2 DUP6 PUSH2 0x807 SWAP2 SWAP1 PUSH2 0x146F JUMP JUMPDEST PUSH2 0x811 SWAP2 SWAP1 PUSH2 0x143F JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP POP JUMPDEST TIMESTAMP PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x6 SLOAD TIMESTAMP PUSH2 0x82F SWAP2 SWAP1 PUSH2 0x146F JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x887 PUSH2 0xF58 JUMP JUMPDEST PUSH2 0x890 PUSH0 PUSH2 0xFDF JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x902 PUSH2 0xE73 JUMP JUMPDEST CALLER PUSH2 0x90B PUSH2 0xE0A JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0x919 PUSH2 0xEB7 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9E1 JUMPI PUSH2 0x95B DUP2 PUSH2 0x374 JUMP JUMPDEST PUSH1 0xA PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x8 SLOAD PUSH1 0x9 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 DUP3 GT PUSH2 0xA23 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA1A SWAP1 PUSH2 0x1564 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0xB PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA34 SWAP2 SWAP1 PUSH2 0x146F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xC PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA87 SWAP2 SWAP1 PUSH2 0x146F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xADC CALLER ADDRESS DUP5 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x10A2 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP4 PUSH1 0x40 MLOAD PUSH2 0xB22 SWAP2 SWAP1 PUSH2 0x1267 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0xB33 PUSH2 0xF4F JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xB3E PUSH2 0xE73 JUMP JUMPDEST CALLER PUSH2 0xB47 PUSH2 0xE0A JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0xB55 PUSH2 0xEB7 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC1D JUMPI PUSH2 0xB97 DUP2 PUSH2 0x374 JUMP JUMPDEST PUSH1 0xA PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x8 SLOAD PUSH1 0x9 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH1 0xA PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0xD43 JUMPI PUSH0 PUSH1 0xA PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xCF4 CALLER DUP3 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xED0 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 DUP3 PUSH1 0x40 MLOAD PUSH2 0xD3A SWAP2 SWAP1 PUSH2 0x1267 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP PUSH2 0xD4D PUSH2 0xF4F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xD8E PUSH2 0xF58 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDFE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF5 SWAP2 SWAP1 PUSH2 0x1358 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE07 DUP2 PUSH2 0xFDF JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0xB SLOAD SUB PUSH2 0xE1E JUMPI PUSH1 0x8 SLOAD SWAP1 POP PUSH2 0xE70 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH8 0xDE0B6B3A7640000 PUSH1 0x7 SLOAD PUSH2 0xE35 PUSH2 0xEB7 JUMP JUMPDEST PUSH2 0xE3F SWAP2 SWAP1 PUSH2 0x139E JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0xE4C SWAP2 SWAP1 PUSH2 0x13D1 JUMP JUMPDEST PUSH2 0xE56 SWAP2 SWAP1 PUSH2 0x13D1 JUMP JUMPDEST PUSH2 0xE60 SWAP2 SWAP1 PUSH2 0x143F JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0xE6D SWAP2 SWAP1 PUSH2 0x146F JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0xEAE JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0x4 SLOAD TIMESTAMP LT PUSH2 0xEC9 JUMPI PUSH1 0x4 SLOAD PUSH2 0xECB JUMP JUMPDEST TIMESTAMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xF4A DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xF03 SWAP3 SWAP2 SWAP1 PUSH2 0x1582 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1124 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xF60 PUSH2 0x11BF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF7E PUSH2 0x8D2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFDD JUMPI PUSH2 0xFA1 PUSH2 0x11BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFD4 SWAP2 SWAP1 PUSH2 0x1358 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x111E DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x10D7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1124 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x1143 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x115C JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x1177 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x11B9 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11B0 SWAP2 SWAP1 PUSH2 0x1358 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x11F3 DUP3 PUSH2 0x11CA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1203 DUP2 PUSH2 0x11E9 JUMP JUMPDEST DUP2 EQ PUSH2 0x120D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x121E DUP2 PUSH2 0x11FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1239 JUMPI PUSH2 0x1238 PUSH2 0x11C6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1246 DUP5 DUP3 DUP6 ADD PUSH2 0x1210 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1261 DUP2 PUSH2 0x124F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x127A PUSH0 DUP4 ADD DUP5 PUSH2 0x1258 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1289 DUP2 PUSH2 0x124F JUMP JUMPDEST DUP2 EQ PUSH2 0x1293 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12A4 DUP2 PUSH2 0x1280 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12BF JUMPI PUSH2 0x12BE PUSH2 0x11C6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12CC DUP5 DUP3 DUP6 ADD PUSH2 0x1296 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x12F8 PUSH2 0x12F3 PUSH2 0x12EE DUP5 PUSH2 0x11CA JUMP JUMPDEST PUSH2 0x12D5 JUMP JUMPDEST PUSH2 0x11CA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1309 DUP3 PUSH2 0x12DE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x131A DUP3 PUSH2 0x12FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x132A DUP2 PUSH2 0x1310 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1343 PUSH0 DUP4 ADD DUP5 PUSH2 0x1321 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1352 DUP2 PUSH2 0x11E9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x136B PUSH0 DUP4 ADD DUP5 PUSH2 0x1349 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x13A8 DUP3 PUSH2 0x124F JUMP JUMPDEST SWAP2 POP PUSH2 0x13B3 DUP4 PUSH2 0x124F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x13CB JUMPI PUSH2 0x13CA PUSH2 0x1371 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x13DB DUP3 PUSH2 0x124F JUMP JUMPDEST SWAP2 POP PUSH2 0x13E6 DUP4 PUSH2 0x124F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x13F4 DUP2 PUSH2 0x124F JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x140B JUMPI PUSH2 0x140A PUSH2 0x1371 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1449 DUP3 PUSH2 0x124F JUMP JUMPDEST SWAP2 POP PUSH2 0x1454 DUP4 PUSH2 0x124F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1464 JUMPI PUSH2 0x1463 PUSH2 0x1412 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1479 DUP3 PUSH2 0x124F JUMP JUMPDEST SWAP2 POP PUSH2 0x1484 DUP4 PUSH2 0x124F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x149C JUMPI PUSH2 0x149B PUSH2 0x1371 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F742077697468647261772030000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14E6 PUSH1 0x11 DUP4 PUSH2 0x14A2 JUMP JUMPDEST SWAP2 POP PUSH2 0x14F1 DUP3 PUSH2 0x14B2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1513 DUP2 PUSH2 0x14DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207374616B652030000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x154E PUSH1 0xE DUP4 PUSH2 0x14A2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1559 DUP3 PUSH2 0x151A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x157B DUP2 PUSH2 0x1542 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1595 PUSH0 DUP4 ADD DUP6 PUSH2 0x1349 JUMP JUMPDEST PUSH2 0x15A2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1258 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x15BC PUSH0 DUP4 ADD DUP7 PUSH2 0x1349 JUMP JUMPDEST PUSH2 0x15C9 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1349 JUMP JUMPDEST PUSH2 0x15D6 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1258 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0x71F37ADD904E6B4C0494D6F0EF025FF99ABCB4A2A049B2 SUB SHL INVALID PUSH0 SDIV SHR PUSH9 0x5864736F6C63430008 0x1E STOP CALLER ",
							"sourceMap": "26150:3730:0:-:0;;;26473:6;26440:39;;26936:177;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;27002:10;20342:1;20546:7;:21;;;;24128:1;24104:26;;:12;:26;;;24100:95;;24181:1;24153:31;;;;;;;;;;;:::i;:::-;;;;;;;;24100:95;24204:32;24223:12;24204:18;;;:32;;:::i;:::-;24056:187;27046:13:::1;27024:12;;:36;;;;;;;;;;;;;;;;;;27092:13;27070:12;;:36;;;;;;;;;;;;;;;;;;26936:177:::0;;26150:3730;;25743:187;25816:16;25835:6;;;;;;;;;;;25816:25;;25860:8;25851:6;;:17;;;;;;;;;;;;;;;;;;25914:8;25883:40;;25904:8;25883:40;;;;;;;;;;;;25806:124;25743:187;:::o;88:117:1:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:118::-;1445:24;1463:5;1445:24;:::i;:::-;1440:3;1433:37;1358:118;;:::o;1482:222::-;1575:4;1613:2;1602:9;1598:18;1590:26;;1626:71;1694:1;1683:9;1679:17;1670:6;1626:71;:::i;:::-;1482:222;;;;:::o;26150:3730:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_584": {
									"entryPoint": 4388,
									"id": 584,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_805": {
									"entryPoint": 3928,
									"id": 805,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_705": {
									"entryPoint": 4543,
									"id": 705,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_682": {
									"entryPoint": 3919,
									"id": 682,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_674": {
									"entryPoint": 3699,
									"id": 674,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_867": {
									"entryPoint": 4063,
									"id": 867,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@balanceOf_971": {
									"entryPoint": 2105,
									"id": 971,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@claimReward_1171": {
									"entryPoint": 2870,
									"id": 1171,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@earned_998": {
									"entryPoint": 884,
									"id": 998,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@lastTimeRewardApplicable_1275": {
									"entryPoint": 3767,
									"id": 1275,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@lastUpdateTime_893": {
									"entryPoint": 3407,
									"id": 893,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@notifyRewardAmount_1232": {
									"entryPoint": 1741,
									"id": 1232,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_788": {
									"entryPoint": 2258,
									"id": 788,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@periodFinish_886": {
									"entryPoint": 3456,
									"id": 886,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_819": {
									"entryPoint": 2175,
									"id": 819,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardPerTokenStored_895": {
									"entryPoint": 3450,
									"id": 895,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardPerToken_1260": {
									"entryPoint": 3594,
									"id": 1260,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@rewardRate_888": {
									"entryPoint": 2231,
									"id": 888,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardsDuration_891": {
									"entryPoint": 1735,
									"id": 891,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardsToken_884": {
									"entryPoint": 3413,
									"id": 884,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewards_903": {
									"entryPoint": 1135,
									"id": 903,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_234": {
									"entryPoint": 4258,
									"id": 234,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_207": {
									"entryPoint": 3792,
									"id": 207,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@stake_1084": {
									"entryPoint": 2298,
									"id": 1084,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakingToken_881": {
									"entryPoint": 2194,
									"id": 881,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_959": {
									"entryPoint": 1156,
									"id": 959,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferOwnership_847": {
									"entryPoint": 3462,
									"id": 847,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@userRewardPerTokenPaid_899": {
									"entryPoint": 2237,
									"id": 899,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_1128": {
									"entryPoint": 1165,
									"id": 1128,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 4624,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4758,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4644,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4778,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4937,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack": {
									"entryPoint": 4897,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5442,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5338,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4696,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4952,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5545,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5506,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed": {
									"entryPoint": 4912,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5476,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5372,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4711,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5282,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5231,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5183,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5073,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5022,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4585,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4554,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4687,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$77_to_t_address": {
									"entryPoint": 4880,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 4863,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 4830,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 4821,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4977,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 5138,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4550,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab": {
									"entryPoint": 5402,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0": {
									"entryPoint": 5298,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4602,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4736,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7750:1",
										"nodeType": "YulBlock",
										"src": "0:7750:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "379:81:1",
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nativeSrc": "389:65:1",
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:1",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nativeSrc": "400:54:1",
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:1",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:1",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nativeSrc": "511:51:1",
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nativeSrc": "521:35:1",
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nativeSrc": "532:24:1",
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:1",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:1",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nativeSrc": "611:79:1",
													"nodeType": "YulBlock",
													"src": "611:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:1",
																"nodeType": "YulBlock",
																"src": "668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:1",
																					"nodeType": "YulLiteral",
																					"src": "677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:1",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			"nativeSrc": "670:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:1"
																		},
																		"nativeSrc": "670:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:1"
																				},
																				"nativeSrc": "641:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:1"
																		},
																		"nativeSrc": "631:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:1"
																},
																"nativeSrc": "624:43:1",
																"nodeType": "YulFunctionCall",
																"src": "624:43:1"
															},
															"nativeSrc": "621:63:1",
															"nodeType": "YulIf",
															"src": "621:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:1",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "568:122:1"
											},
											{
												"body": {
													"nativeSrc": "748:87:1",
													"nodeType": "YulBlock",
													"src": "748:87:1",
													"statements": [
														{
															"nativeSrc": "758:29:1",
															"nodeType": "YulAssignment",
															"src": "758:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:1"
																},
																"nativeSrc": "767:20:1",
																"nodeType": "YulFunctionCall",
																"src": "767:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:1"
																},
																"nativeSrc": "796:33:1",
																"nodeType": "YulFunctionCall",
																"src": "796:33:1"
															},
															"nativeSrc": "796:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:1",
														"nodeType": "YulTypedName",
														"src": "726:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:1",
														"nodeType": "YulTypedName",
														"src": "734:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:1",
														"nodeType": "YulTypedName",
														"src": "742:5:1",
														"type": ""
													}
												],
												"src": "696:139:1"
											},
											{
												"body": {
													"nativeSrc": "907:263:1",
													"nodeType": "YulBlock",
													"src": "907:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:1",
																"nodeType": "YulBlock",
																"src": "953:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:1"
																			},
																			"nativeSrc": "955:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:1"
																		},
																		"nativeSrc": "955:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:1"
																		},
																		"nativeSrc": "924:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:1",
																		"nodeType": "YulLiteral",
																		"src": "949:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:1"
																},
																"nativeSrc": "920:32:1",
																"nodeType": "YulFunctionCall",
																"src": "920:32:1"
															},
															"nativeSrc": "917:119:1",
															"nodeType": "YulIf",
															"src": "917:119:1"
														},
														{
															"nativeSrc": "1046:117:1",
															"nodeType": "YulBlock",
															"src": "1046:117:1",
															"statements": [
																{
																	"nativeSrc": "1061:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:1",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:1"
																				},
																				"nativeSrc": "1121:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:1"
																		},
																		"nativeSrc": "1100:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:1",
														"nodeType": "YulTypedName",
														"src": "877:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:1",
														"nodeType": "YulTypedName",
														"src": "888:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:1",
														"nodeType": "YulTypedName",
														"src": "900:6:1",
														"type": ""
													}
												],
												"src": "841:329:1"
											},
											{
												"body": {
													"nativeSrc": "1221:32:1",
													"nodeType": "YulBlock",
													"src": "1221:32:1",
													"statements": [
														{
															"nativeSrc": "1231:16:1",
															"nodeType": "YulAssignment",
															"src": "1231:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "1242:5:1",
																"nodeType": "YulIdentifier",
																"src": "1242:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1231:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1176:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1203:5:1",
														"nodeType": "YulTypedName",
														"src": "1203:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1213:7:1",
														"nodeType": "YulTypedName",
														"src": "1213:7:1",
														"type": ""
													}
												],
												"src": "1176:77:1"
											},
											{
												"body": {
													"nativeSrc": "1324:53:1",
													"nodeType": "YulBlock",
													"src": "1324:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1341:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1364:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1346:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:1"
																		},
																		"nativeSrc": "1346:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:1"
																},
																"nativeSrc": "1334:37:1",
																"nodeType": "YulFunctionCall",
																"src": "1334:37:1"
															},
															"nativeSrc": "1334:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1259:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1312:5:1",
														"nodeType": "YulTypedName",
														"src": "1312:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1319:3:1",
														"nodeType": "YulTypedName",
														"src": "1319:3:1",
														"type": ""
													}
												],
												"src": "1259:118:1"
											},
											{
												"body": {
													"nativeSrc": "1481:124:1",
													"nodeType": "YulBlock",
													"src": "1481:124:1",
													"statements": [
														{
															"nativeSrc": "1491:26:1",
															"nodeType": "YulAssignment",
															"src": "1491:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1503:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1514:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1499:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:1"
																},
																"nativeSrc": "1499:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1499:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1491:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1571:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1584:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1584:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1595:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1595:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1580:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:1"
																		},
																		"nativeSrc": "1580:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1580:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1527:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "1527:43:1"
																},
																"nativeSrc": "1527:71:1",
																"nodeType": "YulFunctionCall",
																"src": "1527:71:1"
															},
															"nativeSrc": "1527:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "1527:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1383:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1453:9:1",
														"nodeType": "YulTypedName",
														"src": "1453:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1465:6:1",
														"nodeType": "YulTypedName",
														"src": "1465:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1476:4:1",
														"nodeType": "YulTypedName",
														"src": "1476:4:1",
														"type": ""
													}
												],
												"src": "1383:222:1"
											},
											{
												"body": {
													"nativeSrc": "1654:79:1",
													"nodeType": "YulBlock",
													"src": "1654:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1711:16:1",
																"nodeType": "YulBlock",
																"src": "1711:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1720:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1720:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1723:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1723:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1713:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:1"
																			},
																			"nativeSrc": "1713:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1713:12:1"
																		},
																		"nativeSrc": "1713:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1713:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1677:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1677:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1702:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1702:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1684:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "1684:17:1"
																				},
																				"nativeSrc": "1684:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1684:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1674:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1674:2:1"
																		},
																		"nativeSrc": "1674:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1674:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1667:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:1"
																},
																"nativeSrc": "1667:43:1",
																"nodeType": "YulFunctionCall",
																"src": "1667:43:1"
															},
															"nativeSrc": "1664:63:1",
															"nodeType": "YulIf",
															"src": "1664:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1611:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1647:5:1",
														"nodeType": "YulTypedName",
														"src": "1647:5:1",
														"type": ""
													}
												],
												"src": "1611:122:1"
											},
											{
												"body": {
													"nativeSrc": "1791:87:1",
													"nodeType": "YulBlock",
													"src": "1791:87:1",
													"statements": [
														{
															"nativeSrc": "1801:29:1",
															"nodeType": "YulAssignment",
															"src": "1801:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1823:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1823:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1810:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1810:12:1"
																},
																"nativeSrc": "1810:20:1",
																"nodeType": "YulFunctionCall",
																"src": "1810:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1801:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1801:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1866:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1866:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1839:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "1839:26:1"
																},
																"nativeSrc": "1839:33:1",
																"nodeType": "YulFunctionCall",
																"src": "1839:33:1"
															},
															"nativeSrc": "1839:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "1839:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1739:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1769:6:1",
														"nodeType": "YulTypedName",
														"src": "1769:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1777:3:1",
														"nodeType": "YulTypedName",
														"src": "1777:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1785:5:1",
														"nodeType": "YulTypedName",
														"src": "1785:5:1",
														"type": ""
													}
												],
												"src": "1739:139:1"
											},
											{
												"body": {
													"nativeSrc": "1950:263:1",
													"nodeType": "YulBlock",
													"src": "1950:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1996:83:1",
																"nodeType": "YulBlock",
																"src": "1996:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1998:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "1998:77:1"
																			},
																			"nativeSrc": "1998:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1998:79:1"
																		},
																		"nativeSrc": "1998:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1998:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1971:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1971:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1980:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1980:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1967:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1967:3:1"
																		},
																		"nativeSrc": "1967:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1967:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1992:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1992:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1963:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1963:3:1"
																},
																"nativeSrc": "1963:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1963:32:1"
															},
															"nativeSrc": "1960:119:1",
															"nodeType": "YulIf",
															"src": "1960:119:1"
														},
														{
															"nativeSrc": "2089:117:1",
															"nodeType": "YulBlock",
															"src": "2089:117:1",
															"statements": [
																{
																	"nativeSrc": "2104:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2104:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2118:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2118:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2108:6:1",
																			"nodeType": "YulTypedName",
																			"src": "2108:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2133:63:1",
																	"nodeType": "YulAssignment",
																	"src": "2133:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2168:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "2168:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2179:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2179:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2164:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2164:3:1"
																				},
																				"nativeSrc": "2164:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2164:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2188:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2188:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2143:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "2143:20:1"
																		},
																		"nativeSrc": "2143:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2143:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2133:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2133:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1884:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1920:9:1",
														"nodeType": "YulTypedName",
														"src": "1920:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1931:7:1",
														"nodeType": "YulTypedName",
														"src": "1931:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1943:6:1",
														"nodeType": "YulTypedName",
														"src": "1943:6:1",
														"type": ""
													}
												],
												"src": "1884:329:1"
											},
											{
												"body": {
													"nativeSrc": "2251:28:1",
													"nodeType": "YulBlock",
													"src": "2251:28:1",
													"statements": [
														{
															"nativeSrc": "2261:12:1",
															"nodeType": "YulAssignment",
															"src": "2261:12:1",
															"value": {
																"name": "value",
																"nativeSrc": "2268:5:1",
																"nodeType": "YulIdentifier",
																"src": "2268:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2261:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2261:3:1"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2219:60:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2237:5:1",
														"nodeType": "YulTypedName",
														"src": "2237:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2247:3:1",
														"nodeType": "YulTypedName",
														"src": "2247:3:1",
														"type": ""
													}
												],
												"src": "2219:60:1"
											},
											{
												"body": {
													"nativeSrc": "2345:82:1",
													"nodeType": "YulBlock",
													"src": "2345:82:1",
													"statements": [
														{
															"nativeSrc": "2355:66:1",
															"nodeType": "YulAssignment",
															"src": "2355:66:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2413:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "2413:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "2395:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "2395:17:1"
																				},
																				"nativeSrc": "2395:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2395:24:1"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "2386:8:1",
																			"nodeType": "YulIdentifier",
																			"src": "2386:8:1"
																		},
																		"nativeSrc": "2386:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2386:34:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2368:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "2368:17:1"
																},
																"nativeSrc": "2368:53:1",
																"nodeType": "YulFunctionCall",
																"src": "2368:53:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2355:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "2355:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "2285:142:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2325:5:1",
														"nodeType": "YulTypedName",
														"src": "2325:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2335:9:1",
														"nodeType": "YulTypedName",
														"src": "2335:9:1",
														"type": ""
													}
												],
												"src": "2285:142:1"
											},
											{
												"body": {
													"nativeSrc": "2493:66:1",
													"nodeType": "YulBlock",
													"src": "2493:66:1",
													"statements": [
														{
															"nativeSrc": "2503:50:1",
															"nodeType": "YulAssignment",
															"src": "2503:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2547:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2547:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "2516:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "2516:30:1"
																},
																"nativeSrc": "2516:37:1",
																"nodeType": "YulFunctionCall",
																"src": "2516:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2503:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "2503:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "2433:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2473:5:1",
														"nodeType": "YulTypedName",
														"src": "2473:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2483:9:1",
														"nodeType": "YulTypedName",
														"src": "2483:9:1",
														"type": ""
													}
												],
												"src": "2433:126:1"
											},
											{
												"body": {
													"nativeSrc": "2638:66:1",
													"nodeType": "YulBlock",
													"src": "2638:66:1",
													"statements": [
														{
															"nativeSrc": "2648:50:1",
															"nodeType": "YulAssignment",
															"src": "2648:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2692:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2692:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "2661:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "2661:30:1"
																},
																"nativeSrc": "2661:37:1",
																"nodeType": "YulFunctionCall",
																"src": "2661:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2648:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "2648:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$77_to_t_address",
												"nativeSrc": "2565:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2618:5:1",
														"nodeType": "YulTypedName",
														"src": "2618:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2628:9:1",
														"nodeType": "YulTypedName",
														"src": "2628:9:1",
														"type": ""
													}
												],
												"src": "2565:139:1"
											},
											{
												"body": {
													"nativeSrc": "2788:79:1",
													"nodeType": "YulBlock",
													"src": "2788:79:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2805:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2805:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2854:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2854:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$77_to_t_address",
																			"nativeSrc": "2810:43:1",
																			"nodeType": "YulIdentifier",
																			"src": "2810:43:1"
																		},
																		"nativeSrc": "2810:50:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2810:50:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2798:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2798:6:1"
																},
																"nativeSrc": "2798:63:1",
																"nodeType": "YulFunctionCall",
																"src": "2798:63:1"
															},
															"nativeSrc": "2798:63:1",
															"nodeType": "YulExpressionStatement",
															"src": "2798:63:1"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
												"nativeSrc": "2710:157:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2776:5:1",
														"nodeType": "YulTypedName",
														"src": "2776:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2783:3:1",
														"nodeType": "YulTypedName",
														"src": "2783:3:1",
														"type": ""
													}
												],
												"src": "2710:157:1"
											},
											{
												"body": {
													"nativeSrc": "2984:137:1",
													"nodeType": "YulBlock",
													"src": "2984:137:1",
													"statements": [
														{
															"nativeSrc": "2994:26:1",
															"nodeType": "YulAssignment",
															"src": "2994:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3006:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3006:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3017:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3017:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3002:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3002:3:1"
																},
																"nativeSrc": "3002:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3002:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2994:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2994:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3087:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3087:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3100:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3100:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3111:1:1",
																				"nodeType": "YulLiteral",
																				"src": "3111:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3096:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3096:3:1"
																		},
																		"nativeSrc": "3096:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3096:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
																	"nativeSrc": "3030:56:1",
																	"nodeType": "YulIdentifier",
																	"src": "3030:56:1"
																},
																"nativeSrc": "3030:84:1",
																"nodeType": "YulFunctionCall",
																"src": "3030:84:1"
															},
															"nativeSrc": "3030:84:1",
															"nodeType": "YulExpressionStatement",
															"src": "3030:84:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed",
												"nativeSrc": "2873:248:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2956:9:1",
														"nodeType": "YulTypedName",
														"src": "2956:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2968:6:1",
														"nodeType": "YulTypedName",
														"src": "2968:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2979:4:1",
														"nodeType": "YulTypedName",
														"src": "2979:4:1",
														"type": ""
													}
												],
												"src": "2873:248:1"
											},
											{
												"body": {
													"nativeSrc": "3192:53:1",
													"nodeType": "YulBlock",
													"src": "3192:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3209:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3209:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3232:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3232:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3214:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "3214:17:1"
																		},
																		"nativeSrc": "3214:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3214:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3202:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3202:6:1"
																},
																"nativeSrc": "3202:37:1",
																"nodeType": "YulFunctionCall",
																"src": "3202:37:1"
															},
															"nativeSrc": "3202:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "3202:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3127:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3180:5:1",
														"nodeType": "YulTypedName",
														"src": "3180:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3187:3:1",
														"nodeType": "YulTypedName",
														"src": "3187:3:1",
														"type": ""
													}
												],
												"src": "3127:118:1"
											},
											{
												"body": {
													"nativeSrc": "3349:124:1",
													"nodeType": "YulBlock",
													"src": "3349:124:1",
													"statements": [
														{
															"nativeSrc": "3359:26:1",
															"nodeType": "YulAssignment",
															"src": "3359:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3371:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3371:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3382:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3382:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3367:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3367:3:1"
																},
																"nativeSrc": "3367:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3367:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3359:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3359:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3439:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3439:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3452:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3452:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3463:1:1",
																				"nodeType": "YulLiteral",
																				"src": "3463:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3448:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3448:3:1"
																		},
																		"nativeSrc": "3448:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3448:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3395:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "3395:43:1"
																},
																"nativeSrc": "3395:71:1",
																"nodeType": "YulFunctionCall",
																"src": "3395:71:1"
															},
															"nativeSrc": "3395:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "3395:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3251:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3321:9:1",
														"nodeType": "YulTypedName",
														"src": "3321:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3333:6:1",
														"nodeType": "YulTypedName",
														"src": "3333:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3344:4:1",
														"nodeType": "YulTypedName",
														"src": "3344:4:1",
														"type": ""
													}
												],
												"src": "3251:222:1"
											},
											{
												"body": {
													"nativeSrc": "3507:152:1",
													"nodeType": "YulBlock",
													"src": "3507:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3524:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3524:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3527:77:1",
																		"nodeType": "YulLiteral",
																		"src": "3527:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3517:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3517:6:1"
																},
																"nativeSrc": "3517:88:1",
																"nodeType": "YulFunctionCall",
																"src": "3517:88:1"
															},
															"nativeSrc": "3517:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "3517:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3621:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3621:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3624:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3624:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3614:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3614:6:1"
																},
																"nativeSrc": "3614:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3614:15:1"
															},
															"nativeSrc": "3614:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "3614:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3645:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3645:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3648:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3648:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3638:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3638:6:1"
																},
																"nativeSrc": "3638:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3638:15:1"
															},
															"nativeSrc": "3638:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "3638:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "3479:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "3479:180:1"
											},
											{
												"body": {
													"nativeSrc": "3710:149:1",
													"nodeType": "YulBlock",
													"src": "3710:149:1",
													"statements": [
														{
															"nativeSrc": "3720:25:1",
															"nodeType": "YulAssignment",
															"src": "3720:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3743:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3743:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3725:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "3725:17:1"
																},
																"nativeSrc": "3725:20:1",
																"nodeType": "YulFunctionCall",
																"src": "3725:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "3720:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "3720:1:1"
																}
															]
														},
														{
															"nativeSrc": "3754:25:1",
															"nodeType": "YulAssignment",
															"src": "3754:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3777:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3777:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3759:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "3759:17:1"
																},
																"nativeSrc": "3759:20:1",
																"nodeType": "YulFunctionCall",
																"src": "3759:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "3754:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "3754:1:1"
																}
															]
														},
														{
															"nativeSrc": "3788:17:1",
															"nodeType": "YulAssignment",
															"src": "3788:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3800:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3800:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3803:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3803:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "3796:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3796:3:1"
																},
																"nativeSrc": "3796:9:1",
																"nodeType": "YulFunctionCall",
																"src": "3796:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "3788:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3788:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3830:22:1",
																"nodeType": "YulBlock",
																"src": "3830:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3832:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "3832:16:1"
																			},
																			"nativeSrc": "3832:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3832:18:1"
																		},
																		"nativeSrc": "3832:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3832:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "3821:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3821:4:1"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "3827:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3827:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3818:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3818:2:1"
																},
																"nativeSrc": "3818:11:1",
																"nodeType": "YulFunctionCall",
																"src": "3818:11:1"
															},
															"nativeSrc": "3815:37:1",
															"nodeType": "YulIf",
															"src": "3815:37:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "3665:194:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3696:1:1",
														"nodeType": "YulTypedName",
														"src": "3696:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3699:1:1",
														"nodeType": "YulTypedName",
														"src": "3699:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "3705:4:1",
														"nodeType": "YulTypedName",
														"src": "3705:4:1",
														"type": ""
													}
												],
												"src": "3665:194:1"
											},
											{
												"body": {
													"nativeSrc": "3913:362:1",
													"nodeType": "YulBlock",
													"src": "3913:362:1",
													"statements": [
														{
															"nativeSrc": "3923:25:1",
															"nodeType": "YulAssignment",
															"src": "3923:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3946:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3946:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3928:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "3928:17:1"
																},
																"nativeSrc": "3928:20:1",
																"nodeType": "YulFunctionCall",
																"src": "3928:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "3923:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "3923:1:1"
																}
															]
														},
														{
															"nativeSrc": "3957:25:1",
															"nodeType": "YulAssignment",
															"src": "3957:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3980:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3980:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3962:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "3962:17:1"
																},
																"nativeSrc": "3962:20:1",
																"nodeType": "YulFunctionCall",
																"src": "3962:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "3957:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "3957:1:1"
																}
															]
														},
														{
															"nativeSrc": "3991:28:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3991:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4014:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4014:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4017:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4017:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4010:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4010:3:1"
																},
																"nativeSrc": "4010:9:1",
																"nodeType": "YulFunctionCall",
																"src": "4010:9:1"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "3995:11:1",
																	"nodeType": "YulTypedName",
																	"src": "3995:11:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4028:41:1",
															"nodeType": "YulAssignment",
															"src": "4028:41:1",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "4057:11:1",
																		"nodeType": "YulIdentifier",
																		"src": "4057:11:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4039:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "4039:17:1"
																},
																"nativeSrc": "4039:30:1",
																"nodeType": "YulFunctionCall",
																"src": "4039:30:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "4028:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "4028:7:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4246:22:1",
																"nodeType": "YulBlock",
																"src": "4246:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4248:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "4248:16:1"
																			},
																			"nativeSrc": "4248:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4248:18:1"
																		},
																		"nativeSrc": "4248:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4248:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "4179:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "4179:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4172:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "4172:6:1"
																				},
																				"nativeSrc": "4172:9:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4172:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "4202:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "4202:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "4209:7:1",
																								"nodeType": "YulIdentifier",
																								"src": "4209:7:1"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "4218:1:1",
																								"nodeType": "YulIdentifier",
																								"src": "4218:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "4205:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "4205:3:1"
																						},
																						"nativeSrc": "4205:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "4205:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "4199:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "4199:2:1"
																				},
																				"nativeSrc": "4199:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4199:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "4152:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "4152:2:1"
																		},
																		"nativeSrc": "4152:83:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4152:83:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4132:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4132:6:1"
																},
																"nativeSrc": "4132:113:1",
																"nodeType": "YulFunctionCall",
																"src": "4132:113:1"
															},
															"nativeSrc": "4129:139:1",
															"nodeType": "YulIf",
															"src": "4129:139:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "3865:410:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3896:1:1",
														"nodeType": "YulTypedName",
														"src": "3896:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3899:1:1",
														"nodeType": "YulTypedName",
														"src": "3899:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "3905:7:1",
														"nodeType": "YulTypedName",
														"src": "3905:7:1",
														"type": ""
													}
												],
												"src": "3865:410:1"
											},
											{
												"body": {
													"nativeSrc": "4309:152:1",
													"nodeType": "YulBlock",
													"src": "4309:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4326:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4326:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4329:77:1",
																		"nodeType": "YulLiteral",
																		"src": "4329:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4319:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4319:6:1"
																},
																"nativeSrc": "4319:88:1",
																"nodeType": "YulFunctionCall",
																"src": "4319:88:1"
															},
															"nativeSrc": "4319:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "4319:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4423:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4423:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4426:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4426:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4416:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4416:6:1"
																},
																"nativeSrc": "4416:15:1",
																"nodeType": "YulFunctionCall",
																"src": "4416:15:1"
															},
															"nativeSrc": "4416:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "4416:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4447:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4447:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4450:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4450:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4440:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4440:6:1"
																},
																"nativeSrc": "4440:15:1",
																"nodeType": "YulFunctionCall",
																"src": "4440:15:1"
															},
															"nativeSrc": "4440:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "4440:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "4281:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "4281:180:1"
											},
											{
												"body": {
													"nativeSrc": "4509:143:1",
													"nodeType": "YulBlock",
													"src": "4509:143:1",
													"statements": [
														{
															"nativeSrc": "4519:25:1",
															"nodeType": "YulAssignment",
															"src": "4519:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4542:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4542:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4524:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "4524:17:1"
																},
																"nativeSrc": "4524:20:1",
																"nodeType": "YulFunctionCall",
																"src": "4524:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4519:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "4519:1:1"
																}
															]
														},
														{
															"nativeSrc": "4553:25:1",
															"nodeType": "YulAssignment",
															"src": "4553:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4576:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4576:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4558:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "4558:17:1"
																},
																"nativeSrc": "4558:20:1",
																"nodeType": "YulFunctionCall",
																"src": "4558:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4553:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "4553:1:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4600:22:1",
																"nodeType": "YulBlock",
																"src": "4600:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "4602:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "4602:16:1"
																			},
																			"nativeSrc": "4602:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4602:18:1"
																		},
																		"nativeSrc": "4602:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4602:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4597:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4597:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4590:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4590:6:1"
																},
																"nativeSrc": "4590:9:1",
																"nodeType": "YulFunctionCall",
																"src": "4590:9:1"
															},
															"nativeSrc": "4587:35:1",
															"nodeType": "YulIf",
															"src": "4587:35:1"
														},
														{
															"nativeSrc": "4632:14:1",
															"nodeType": "YulAssignment",
															"src": "4632:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4641:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4641:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4644:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4644:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4637:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4637:3:1"
																},
																"nativeSrc": "4637:9:1",
																"nodeType": "YulFunctionCall",
																"src": "4637:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "4632:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "4632:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "4467:185:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4498:1:1",
														"nodeType": "YulTypedName",
														"src": "4498:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4501:1:1",
														"nodeType": "YulTypedName",
														"src": "4501:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "4507:1:1",
														"nodeType": "YulTypedName",
														"src": "4507:1:1",
														"type": ""
													}
												],
												"src": "4467:185:1"
											},
											{
												"body": {
													"nativeSrc": "4702:147:1",
													"nodeType": "YulBlock",
													"src": "4702:147:1",
													"statements": [
														{
															"nativeSrc": "4712:25:1",
															"nodeType": "YulAssignment",
															"src": "4712:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4735:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4735:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4717:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "4717:17:1"
																},
																"nativeSrc": "4717:20:1",
																"nodeType": "YulFunctionCall",
																"src": "4717:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4712:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "4712:1:1"
																}
															]
														},
														{
															"nativeSrc": "4746:25:1",
															"nodeType": "YulAssignment",
															"src": "4746:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4769:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4769:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4751:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "4751:17:1"
																},
																"nativeSrc": "4751:20:1",
																"nodeType": "YulFunctionCall",
																"src": "4751:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4746:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "4746:1:1"
																}
															]
														},
														{
															"nativeSrc": "4780:16:1",
															"nodeType": "YulAssignment",
															"src": "4780:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4791:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4791:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4794:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4794:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4787:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4787:3:1"
																},
																"nativeSrc": "4787:9:1",
																"nodeType": "YulFunctionCall",
																"src": "4787:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4780:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4780:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4820:22:1",
																"nodeType": "YulBlock",
																"src": "4820:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4822:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "4822:16:1"
																			},
																			"nativeSrc": "4822:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4822:18:1"
																		},
																		"nativeSrc": "4822:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4822:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4812:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4812:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4815:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4815:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4809:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4809:2:1"
																},
																"nativeSrc": "4809:10:1",
																"nodeType": "YulFunctionCall",
																"src": "4809:10:1"
															},
															"nativeSrc": "4806:36:1",
															"nodeType": "YulIf",
															"src": "4806:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4658:191:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4689:1:1",
														"nodeType": "YulTypedName",
														"src": "4689:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4692:1:1",
														"nodeType": "YulTypedName",
														"src": "4692:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4698:3:1",
														"nodeType": "YulTypedName",
														"src": "4698:3:1",
														"type": ""
													}
												],
												"src": "4658:191:1"
											},
											{
												"body": {
													"nativeSrc": "4951:73:1",
													"nodeType": "YulBlock",
													"src": "4951:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4968:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4968:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4973:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4973:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4961:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4961:6:1"
																},
																"nativeSrc": "4961:19:1",
																"nodeType": "YulFunctionCall",
																"src": "4961:19:1"
															},
															"nativeSrc": "4961:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "4961:19:1"
														},
														{
															"nativeSrc": "4989:29:1",
															"nodeType": "YulAssignment",
															"src": "4989:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5008:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5008:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5013:4:1",
																		"nodeType": "YulLiteral",
																		"src": "5013:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5004:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5004:3:1"
																},
																"nativeSrc": "5004:14:1",
																"nodeType": "YulFunctionCall",
																"src": "5004:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "4989:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "4989:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "4855:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4923:3:1",
														"nodeType": "YulTypedName",
														"src": "4923:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4928:6:1",
														"nodeType": "YulTypedName",
														"src": "4928:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "4939:11:1",
														"nodeType": "YulTypedName",
														"src": "4939:11:1",
														"type": ""
													}
												],
												"src": "4855:169:1"
											},
											{
												"body": {
													"nativeSrc": "5136:61:1",
													"nodeType": "YulBlock",
													"src": "5136:61:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5158:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5158:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5166:1:1",
																				"nodeType": "YulLiteral",
																				"src": "5166:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5154:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5154:3:1"
																		},
																		"nativeSrc": "5154:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5154:14:1"
																	},
																	{
																		"hexValue": "43616e6e6f742077697468647261772030",
																		"kind": "string",
																		"nativeSrc": "5170:19:1",
																		"nodeType": "YulLiteral",
																		"src": "5170:19:1",
																		"type": "",
																		"value": "Cannot withdraw 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5147:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5147:6:1"
																},
																"nativeSrc": "5147:43:1",
																"nodeType": "YulFunctionCall",
																"src": "5147:43:1"
															},
															"nativeSrc": "5147:43:1",
															"nodeType": "YulExpressionStatement",
															"src": "5147:43:1"
														}
													]
												},
												"name": "store_literal_in_memory_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0",
												"nativeSrc": "5030:167:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5128:6:1",
														"nodeType": "YulTypedName",
														"src": "5128:6:1",
														"type": ""
													}
												],
												"src": "5030:167:1"
											},
											{
												"body": {
													"nativeSrc": "5349:220:1",
													"nodeType": "YulBlock",
													"src": "5349:220:1",
													"statements": [
														{
															"nativeSrc": "5359:74:1",
															"nodeType": "YulAssignment",
															"src": "5359:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5425:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5425:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5430:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5430:2:1",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5366:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "5366:58:1"
																},
																"nativeSrc": "5366:67:1",
																"nodeType": "YulFunctionCall",
																"src": "5366:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5359:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5359:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5531:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5531:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0",
																	"nativeSrc": "5442:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "5442:88:1"
																},
																"nativeSrc": "5442:93:1",
																"nodeType": "YulFunctionCall",
																"src": "5442:93:1"
															},
															"nativeSrc": "5442:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "5442:93:1"
														},
														{
															"nativeSrc": "5544:19:1",
															"nodeType": "YulAssignment",
															"src": "5544:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5555:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5555:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5560:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5560:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5551:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5551:3:1"
																},
																"nativeSrc": "5551:12:1",
																"nodeType": "YulFunctionCall",
																"src": "5551:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5544:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5544:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5203:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5337:3:1",
														"nodeType": "YulTypedName",
														"src": "5337:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5345:3:1",
														"nodeType": "YulTypedName",
														"src": "5345:3:1",
														"type": ""
													}
												],
												"src": "5203:366:1"
											},
											{
												"body": {
													"nativeSrc": "5746:248:1",
													"nodeType": "YulBlock",
													"src": "5746:248:1",
													"statements": [
														{
															"nativeSrc": "5756:26:1",
															"nodeType": "YulAssignment",
															"src": "5756:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5768:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5768:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5779:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5779:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5764:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5764:3:1"
																},
																"nativeSrc": "5764:18:1",
																"nodeType": "YulFunctionCall",
																"src": "5764:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5756:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5756:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5803:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5803:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5814:1:1",
																				"nodeType": "YulLiteral",
																				"src": "5814:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5799:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5799:3:1"
																		},
																		"nativeSrc": "5799:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5799:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5822:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "5822:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5828:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5828:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5818:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5818:3:1"
																		},
																		"nativeSrc": "5818:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5818:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5792:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5792:6:1"
																},
																"nativeSrc": "5792:47:1",
																"nodeType": "YulFunctionCall",
																"src": "5792:47:1"
															},
															"nativeSrc": "5792:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "5792:47:1"
														},
														{
															"nativeSrc": "5848:139:1",
															"nodeType": "YulAssignment",
															"src": "5848:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5982:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "5982:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5856:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "5856:124:1"
																},
																"nativeSrc": "5856:131:1",
																"nodeType": "YulFunctionCall",
																"src": "5856:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5848:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5848:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5575:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5726:9:1",
														"nodeType": "YulTypedName",
														"src": "5726:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5741:4:1",
														"nodeType": "YulTypedName",
														"src": "5741:4:1",
														"type": ""
													}
												],
												"src": "5575:419:1"
											},
											{
												"body": {
													"nativeSrc": "6106:58:1",
													"nodeType": "YulBlock",
													"src": "6106:58:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6128:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6128:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6136:1:1",
																				"nodeType": "YulLiteral",
																				"src": "6136:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6124:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6124:3:1"
																		},
																		"nativeSrc": "6124:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6124:14:1"
																	},
																	{
																		"hexValue": "43616e6e6f74207374616b652030",
																		"kind": "string",
																		"nativeSrc": "6140:16:1",
																		"nodeType": "YulLiteral",
																		"src": "6140:16:1",
																		"type": "",
																		"value": "Cannot stake 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6117:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6117:6:1"
																},
																"nativeSrc": "6117:40:1",
																"nodeType": "YulFunctionCall",
																"src": "6117:40:1"
															},
															"nativeSrc": "6117:40:1",
															"nodeType": "YulExpressionStatement",
															"src": "6117:40:1"
														}
													]
												},
												"name": "store_literal_in_memory_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
												"nativeSrc": "6000:164:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6098:6:1",
														"nodeType": "YulTypedName",
														"src": "6098:6:1",
														"type": ""
													}
												],
												"src": "6000:164:1"
											},
											{
												"body": {
													"nativeSrc": "6316:220:1",
													"nodeType": "YulBlock",
													"src": "6316:220:1",
													"statements": [
														{
															"nativeSrc": "6326:74:1",
															"nodeType": "YulAssignment",
															"src": "6326:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6392:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6392:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6397:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6397:2:1",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6333:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "6333:58:1"
																},
																"nativeSrc": "6333:67:1",
																"nodeType": "YulFunctionCall",
																"src": "6333:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6326:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6326:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6498:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6498:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
																	"nativeSrc": "6409:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "6409:88:1"
																},
																"nativeSrc": "6409:93:1",
																"nodeType": "YulFunctionCall",
																"src": "6409:93:1"
															},
															"nativeSrc": "6409:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "6409:93:1"
														},
														{
															"nativeSrc": "6511:19:1",
															"nodeType": "YulAssignment",
															"src": "6511:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6522:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6522:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6527:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6527:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6518:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6518:3:1"
																},
																"nativeSrc": "6518:12:1",
																"nodeType": "YulFunctionCall",
																"src": "6518:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6511:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6511:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6170:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6304:3:1",
														"nodeType": "YulTypedName",
														"src": "6304:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6312:3:1",
														"nodeType": "YulTypedName",
														"src": "6312:3:1",
														"type": ""
													}
												],
												"src": "6170:366:1"
											},
											{
												"body": {
													"nativeSrc": "6713:248:1",
													"nodeType": "YulBlock",
													"src": "6713:248:1",
													"statements": [
														{
															"nativeSrc": "6723:26:1",
															"nodeType": "YulAssignment",
															"src": "6723:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6735:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6735:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6746:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6746:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6731:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6731:3:1"
																},
																"nativeSrc": "6731:18:1",
																"nodeType": "YulFunctionCall",
																"src": "6731:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6723:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6723:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6770:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6770:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6781:1:1",
																				"nodeType": "YulLiteral",
																				"src": "6781:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6766:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6766:3:1"
																		},
																		"nativeSrc": "6766:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6766:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6789:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "6789:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6795:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6795:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6785:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6785:3:1"
																		},
																		"nativeSrc": "6785:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6785:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6759:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6759:6:1"
																},
																"nativeSrc": "6759:47:1",
																"nodeType": "YulFunctionCall",
																"src": "6759:47:1"
															},
															"nativeSrc": "6759:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "6759:47:1"
														},
														{
															"nativeSrc": "6815:139:1",
															"nodeType": "YulAssignment",
															"src": "6815:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6949:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "6949:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6823:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "6823:124:1"
																},
																"nativeSrc": "6823:131:1",
																"nodeType": "YulFunctionCall",
																"src": "6823:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6815:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6815:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6542:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6693:9:1",
														"nodeType": "YulTypedName",
														"src": "6693:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6708:4:1",
														"nodeType": "YulTypedName",
														"src": "6708:4:1",
														"type": ""
													}
												],
												"src": "6542:419:1"
											},
											{
												"body": {
													"nativeSrc": "7093:206:1",
													"nodeType": "YulBlock",
													"src": "7093:206:1",
													"statements": [
														{
															"nativeSrc": "7103:26:1",
															"nodeType": "YulAssignment",
															"src": "7103:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7115:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7115:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7126:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7126:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7111:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7111:3:1"
																},
																"nativeSrc": "7111:18:1",
																"nodeType": "YulFunctionCall",
																"src": "7111:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7103:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7103:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7183:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7183:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7196:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7196:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7207:1:1",
																				"nodeType": "YulLiteral",
																				"src": "7207:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7192:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7192:3:1"
																		},
																		"nativeSrc": "7192:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7192:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7139:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "7139:43:1"
																},
																"nativeSrc": "7139:71:1",
																"nodeType": "YulFunctionCall",
																"src": "7139:71:1"
															},
															"nativeSrc": "7139:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "7139:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7264:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7264:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7277:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7277:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7288:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7288:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7273:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7273:3:1"
																		},
																		"nativeSrc": "7273:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7273:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7220:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "7220:43:1"
																},
																"nativeSrc": "7220:72:1",
																"nodeType": "YulFunctionCall",
																"src": "7220:72:1"
															},
															"nativeSrc": "7220:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "7220:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "6967:332:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7057:9:1",
														"nodeType": "YulTypedName",
														"src": "7057:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7069:6:1",
														"nodeType": "YulTypedName",
														"src": "7069:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7077:6:1",
														"nodeType": "YulTypedName",
														"src": "7077:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7088:4:1",
														"nodeType": "YulTypedName",
														"src": "7088:4:1",
														"type": ""
													}
												],
												"src": "6967:332:1"
											},
											{
												"body": {
													"nativeSrc": "7459:288:1",
													"nodeType": "YulBlock",
													"src": "7459:288:1",
													"statements": [
														{
															"nativeSrc": "7469:26:1",
															"nodeType": "YulAssignment",
															"src": "7469:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7481:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7481:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7492:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7492:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7477:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7477:3:1"
																},
																"nativeSrc": "7477:18:1",
																"nodeType": "YulFunctionCall",
																"src": "7477:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7469:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7469:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7549:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7549:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7562:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7562:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7573:1:1",
																				"nodeType": "YulLiteral",
																				"src": "7573:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7558:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7558:3:1"
																		},
																		"nativeSrc": "7558:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7558:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7505:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "7505:43:1"
																},
																"nativeSrc": "7505:71:1",
																"nodeType": "YulFunctionCall",
																"src": "7505:71:1"
															},
															"nativeSrc": "7505:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "7505:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7630:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7630:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7643:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7643:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7654:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7654:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7639:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7639:3:1"
																		},
																		"nativeSrc": "7639:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7639:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7586:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "7586:43:1"
																},
																"nativeSrc": "7586:72:1",
																"nodeType": "YulFunctionCall",
																"src": "7586:72:1"
															},
															"nativeSrc": "7586:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "7586:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7712:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7712:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7725:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7725:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7736:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7736:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7721:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7721:3:1"
																		},
																		"nativeSrc": "7721:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7721:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7668:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "7668:43:1"
																},
																"nativeSrc": "7668:72:1",
																"nodeType": "YulFunctionCall",
																"src": "7668:72:1"
															},
															"nativeSrc": "7668:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "7668:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "7305:442:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7415:9:1",
														"nodeType": "YulTypedName",
														"src": "7415:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7427:6:1",
														"nodeType": "YulTypedName",
														"src": "7427:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7435:6:1",
														"nodeType": "YulTypedName",
														"src": "7435:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7443:6:1",
														"nodeType": "YulTypedName",
														"src": "7443:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7454:4:1",
														"nodeType": "YulTypedName",
														"src": "7454:4:1",
														"type": ""
													}
												],
												"src": "7305:442:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$77_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$77_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot withdraw 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot stake 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506004361061011e575f3560e01c80637b0a47ee116100ab578063c8f33c911161006f578063c8f33c91146102e0578063d1af0c7d146102fe578063df136d651461031c578063ebe2b12b1461033a578063f2fde38b146103585761011e565b80637b0a47ee1461024e5780638b8763471461026c5780638da5cb5b1461029c578063a694fc3a146102ba578063b88a802f146102d65761011e565b8063386a9525116100f2578063386a9525146101bc5780633c6b16ab146101da57806370a08231146101f6578063715018a61461022657806372f702f3146102305761011e565b80628cc262146101225780630700037d1461015257806318160ddd146101825780632e1a7d4d146101a0575b5f5ffd5b61013c60048036038101906101379190611224565b610374565b6040516101499190611267565b60405180910390f35b61016c60048036038101906101679190611224565b61046f565b6040516101799190611267565b60405180910390f35b61018a610484565b6040516101979190611267565b60405180910390f35b6101ba60048036038101906101b591906112aa565b61048d565b005b6101c46106c7565b6040516101d19190611267565b60405180910390f35b6101f460048036038101906101ef91906112aa565b6106cd565b005b610210600480360381019061020b9190611224565b610839565b60405161021d9190611267565b60405180910390f35b61022e61087f565b005b610238610892565b6040516102459190611330565b60405180910390f35b6102566108b7565b6040516102639190611267565b60405180910390f35b61028660048036038101906102819190611224565b6108bd565b6040516102939190611267565b60405180910390f35b6102a46108d2565b6040516102b19190611358565b60405180910390f35b6102d460048036038101906102cf91906112aa565b6108fa565b005b6102de610b36565b005b6102e8610d4f565b6040516102f59190611267565b60405180910390f35b610306610d55565b6040516103139190611330565b60405180910390f35b610324610d7a565b6040516103319190611267565b60405180910390f35b610342610d80565b60405161034f9190611267565b60405180910390f35b610372600480360381019061036d9190611224565b610d86565b005b5f600a5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054670de0b6b3a764000060095f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610402610e0a565b61040c919061139e565b600c5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461045491906113d1565b61045e919061143f565b610468919061146f565b9050919050565b600a602052805f5260405f205f915090505481565b5f600b54905090565b610495610e73565b3361049e610e0a565b6008819055506104ac610eb7565b6007819055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610574576104ee81610374565b600a5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555060085460095f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b5f82116105b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ad906114fc565b60405180910390fd5b81600b5f8282546105c7919061139e565b9250508190555081600c5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461061a919061139e565b9250508190555061066d338360025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610ed09092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5836040516106b39190611267565b60405180910390a2506106c4610f4f565b50565b60065481565b6106d5610f58565b5f6106de610e0a565b6008819055506106ec610eb7565b6007819055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146107b45761072e81610374565b600a5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555060085460095f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b60045442106107d657600654826107cb919061143f565b60058190555061081a565b5f426004546107e5919061139e565b90505f600554826107f691906113d1565b90506006548185610807919061146f565b610811919061143f565b60058190555050505b426007819055506006544261082f919061146f565b6004819055505050565b5f600c5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610887610f58565b6108905f610fdf565b565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60055481565b6009602052805f5260405f205f915090505481565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610902610e73565b3361090b610e0a565b600881905550610919610eb7565b6007819055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146109e15761095b81610374565b600a5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555060085460095f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b5f8211610a23576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1a90611564565b60405180910390fd5b81600b5f828254610a34919061146f565b9250508190555081600c5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610a87919061146f565b92505081905550610adc33308460025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166110a2909392919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d83604051610b229190611267565b60405180910390a250610b33610f4f565b50565b610b3e610e73565b33610b47610e0a565b600881905550610b55610eb7565b6007819055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610c1d57610b9781610374565b600a5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555060085460095f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b5f600a5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f811115610d43575f600a5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550610cf4338260035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610ed09092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e048682604051610d3a9190611267565b60405180910390a25b5050610d4d610f4f565b565b60075481565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60085481565b60045481565b610d8e610f58565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610dfe575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610df59190611358565b60405180910390fd5b610e0781610fdf565b50565b5f5f600b5403610e1e576008549050610e70565b600b54670de0b6b3a7640000600754610e35610eb7565b610e3f919061139e565b600554610e4c91906113d1565b610e5691906113d1565b610e60919061143f565b600854610e6d919061146f565b90505b90565b60025f5403610eae576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60025f81905550565b5f6004544210610ec957600454610ecb565b425b905090565b610f4a838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610f03929190611582565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611124565b505050565b60015f81905550565b610f606111bf565b73ffffffffffffffffffffffffffffffffffffffff16610f7e6108d2565b73ffffffffffffffffffffffffffffffffffffffff1614610fdd57610fa16111bf565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610fd49190611358565b60405180910390fd5b565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61111e848573ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040516024016110d7939291906115a9565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611124565b50505050565b5f5f60205f8451602086015f885af180611143576040513d5f823e3d81fd5b3d92505f519150505f821461115c576001811415611177565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b156111b957836040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016111b09190611358565b60405180910390fd5b50505050565b5f33905090565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6111f3826111ca565b9050919050565b611203816111e9565b811461120d575f5ffd5b50565b5f8135905061121e816111fa565b92915050565b5f60208284031215611239576112386111c6565b5b5f61124684828501611210565b91505092915050565b5f819050919050565b6112618161124f565b82525050565b5f60208201905061127a5f830184611258565b92915050565b6112898161124f565b8114611293575f5ffd5b50565b5f813590506112a481611280565b92915050565b5f602082840312156112bf576112be6111c6565b5b5f6112cc84828501611296565b91505092915050565b5f819050919050565b5f6112f86112f36112ee846111ca565b6112d5565b6111ca565b9050919050565b5f611309826112de565b9050919050565b5f61131a826112ff565b9050919050565b61132a81611310565b82525050565b5f6020820190506113435f830184611321565b92915050565b611352816111e9565b82525050565b5f60208201905061136b5f830184611349565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6113a88261124f565b91506113b38361124f565b92508282039050818111156113cb576113ca611371565b5b92915050565b5f6113db8261124f565b91506113e68361124f565b92508282026113f48161124f565b9150828204841483151761140b5761140a611371565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6114498261124f565b91506114548361124f565b92508261146457611463611412565b5b828204905092915050565b5f6114798261124f565b91506114848361124f565b925082820190508082111561149c5761149b611371565b5b92915050565b5f82825260208201905092915050565b7f43616e6e6f7420776974686472617720300000000000000000000000000000005f82015250565b5f6114e66011836114a2565b91506114f1826114b2565b602082019050919050565b5f6020820190508181035f830152611513816114da565b9050919050565b7f43616e6e6f74207374616b6520300000000000000000000000000000000000005f82015250565b5f61154e600e836114a2565b91506115598261151a565b602082019050919050565b5f6020820190508181035f83015261157b81611542565b9050919050565b5f6040820190506115955f830185611349565b6115a26020830184611258565b9392505050565b5f6060820190506115bc5f830186611349565b6115c96020830185611349565b6115d66040830184611258565b94935050505056fea26469706673582212207671f37add904e6b4c0494d6f0ef025ff99abcb4a2a049b2031bfe5f051c685864736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11E JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7B0A47EE GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xC8F33C91 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xC8F33C91 EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0xDF136D65 EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0xEBE2B12B EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x358 JUMPI PUSH2 0x11E JUMP JUMPDEST DUP1 PUSH4 0x7B0A47EE EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x8B876347 EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0xB88A802F EQ PUSH2 0x2D6 JUMPI PUSH2 0x11E JUMP JUMPDEST DUP1 PUSH4 0x386A9525 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x386A9525 EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x3C6B16AB EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x230 JUMPI PUSH2 0x11E JUMP JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x700037D EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1A0 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x1224 JUMP JUMPDEST PUSH2 0x374 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x1267 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x1224 JUMP JUMPDEST PUSH2 0x46F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0x1267 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18A PUSH2 0x484 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x1267 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0x12AA JUMP JUMPDEST PUSH2 0x48D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C4 PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0x1267 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EF SWAP2 SWAP1 PUSH2 0x12AA JUMP JUMPDEST PUSH2 0x6CD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x210 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x1224 JUMP JUMPDEST PUSH2 0x839 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x1267 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22E PUSH2 0x87F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x238 PUSH2 0x892 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x1330 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x256 PUSH2 0x8B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x1267 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x286 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x281 SWAP2 SWAP1 PUSH2 0x1224 JUMP JUMPDEST PUSH2 0x8BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x293 SWAP2 SWAP1 PUSH2 0x1267 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A4 PUSH2 0x8D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B1 SWAP2 SWAP1 PUSH2 0x1358 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CF SWAP2 SWAP1 PUSH2 0x12AA JUMP JUMPDEST PUSH2 0x8FA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DE PUSH2 0xB36 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E8 PUSH2 0xD4F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0x1267 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x306 PUSH2 0xD55 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x1330 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x324 PUSH2 0xD7A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x331 SWAP2 SWAP1 PUSH2 0x1267 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x342 PUSH2 0xD80 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34F SWAP2 SWAP1 PUSH2 0x1267 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x372 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36D SWAP2 SWAP1 PUSH2 0x1224 JUMP JUMPDEST PUSH2 0xD86 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH1 0xA PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH1 0x9 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x402 PUSH2 0xE0A JUMP JUMPDEST PUSH2 0x40C SWAP2 SWAP1 PUSH2 0x139E JUMP JUMPDEST PUSH1 0xC PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x454 SWAP2 SWAP1 PUSH2 0x13D1 JUMP JUMPDEST PUSH2 0x45E SWAP2 SWAP1 PUSH2 0x143F JUMP JUMPDEST PUSH2 0x468 SWAP2 SWAP1 PUSH2 0x146F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0xB SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x495 PUSH2 0xE73 JUMP JUMPDEST CALLER PUSH2 0x49E PUSH2 0xE0A JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0x4AC PUSH2 0xEB7 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x574 JUMPI PUSH2 0x4EE DUP2 PUSH2 0x374 JUMP JUMPDEST PUSH1 0xA PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x8 SLOAD PUSH1 0x9 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 DUP3 GT PUSH2 0x5B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5AD SWAP1 PUSH2 0x14FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0xB PUSH0 DUP3 DUP3 SLOAD PUSH2 0x5C7 SWAP2 SWAP1 PUSH2 0x139E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xC PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x61A SWAP2 SWAP1 PUSH2 0x139E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x66D CALLER DUP4 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xED0 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x6B3 SWAP2 SWAP1 PUSH2 0x1267 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x6C4 PUSH2 0xF4F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x6D5 PUSH2 0xF58 JUMP JUMPDEST PUSH0 PUSH2 0x6DE PUSH2 0xE0A JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0x6EC PUSH2 0xEB7 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7B4 JUMPI PUSH2 0x72E DUP2 PUSH2 0x374 JUMP JUMPDEST PUSH1 0xA PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x8 SLOAD PUSH1 0x9 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x4 SLOAD TIMESTAMP LT PUSH2 0x7D6 JUMPI PUSH1 0x6 SLOAD DUP3 PUSH2 0x7CB SWAP2 SWAP1 PUSH2 0x143F JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH2 0x81A JUMP JUMPDEST PUSH0 TIMESTAMP PUSH1 0x4 SLOAD PUSH2 0x7E5 SWAP2 SWAP1 PUSH2 0x139E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x5 SLOAD DUP3 PUSH2 0x7F6 SWAP2 SWAP1 PUSH2 0x13D1 JUMP JUMPDEST SWAP1 POP PUSH1 0x6 SLOAD DUP2 DUP6 PUSH2 0x807 SWAP2 SWAP1 PUSH2 0x146F JUMP JUMPDEST PUSH2 0x811 SWAP2 SWAP1 PUSH2 0x143F JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP POP JUMPDEST TIMESTAMP PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x6 SLOAD TIMESTAMP PUSH2 0x82F SWAP2 SWAP1 PUSH2 0x146F JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x887 PUSH2 0xF58 JUMP JUMPDEST PUSH2 0x890 PUSH0 PUSH2 0xFDF JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x902 PUSH2 0xE73 JUMP JUMPDEST CALLER PUSH2 0x90B PUSH2 0xE0A JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0x919 PUSH2 0xEB7 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9E1 JUMPI PUSH2 0x95B DUP2 PUSH2 0x374 JUMP JUMPDEST PUSH1 0xA PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x8 SLOAD PUSH1 0x9 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 DUP3 GT PUSH2 0xA23 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA1A SWAP1 PUSH2 0x1564 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0xB PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA34 SWAP2 SWAP1 PUSH2 0x146F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xC PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA87 SWAP2 SWAP1 PUSH2 0x146F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xADC CALLER ADDRESS DUP5 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x10A2 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP4 PUSH1 0x40 MLOAD PUSH2 0xB22 SWAP2 SWAP1 PUSH2 0x1267 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0xB33 PUSH2 0xF4F JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xB3E PUSH2 0xE73 JUMP JUMPDEST CALLER PUSH2 0xB47 PUSH2 0xE0A JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0xB55 PUSH2 0xEB7 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC1D JUMPI PUSH2 0xB97 DUP2 PUSH2 0x374 JUMP JUMPDEST PUSH1 0xA PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x8 SLOAD PUSH1 0x9 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH1 0xA PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0xD43 JUMPI PUSH0 PUSH1 0xA PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xCF4 CALLER DUP3 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xED0 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 DUP3 PUSH1 0x40 MLOAD PUSH2 0xD3A SWAP2 SWAP1 PUSH2 0x1267 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP PUSH2 0xD4D PUSH2 0xF4F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xD8E PUSH2 0xF58 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDFE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF5 SWAP2 SWAP1 PUSH2 0x1358 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE07 DUP2 PUSH2 0xFDF JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0xB SLOAD SUB PUSH2 0xE1E JUMPI PUSH1 0x8 SLOAD SWAP1 POP PUSH2 0xE70 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH8 0xDE0B6B3A7640000 PUSH1 0x7 SLOAD PUSH2 0xE35 PUSH2 0xEB7 JUMP JUMPDEST PUSH2 0xE3F SWAP2 SWAP1 PUSH2 0x139E JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0xE4C SWAP2 SWAP1 PUSH2 0x13D1 JUMP JUMPDEST PUSH2 0xE56 SWAP2 SWAP1 PUSH2 0x13D1 JUMP JUMPDEST PUSH2 0xE60 SWAP2 SWAP1 PUSH2 0x143F JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0xE6D SWAP2 SWAP1 PUSH2 0x146F JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0xEAE JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0x4 SLOAD TIMESTAMP LT PUSH2 0xEC9 JUMPI PUSH1 0x4 SLOAD PUSH2 0xECB JUMP JUMPDEST TIMESTAMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xF4A DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xF03 SWAP3 SWAP2 SWAP1 PUSH2 0x1582 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1124 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xF60 PUSH2 0x11BF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF7E PUSH2 0x8D2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFDD JUMPI PUSH2 0xFA1 PUSH2 0x11BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFD4 SWAP2 SWAP1 PUSH2 0x1358 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x111E DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x10D7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1124 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x1143 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x115C JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x1177 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x11B9 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11B0 SWAP2 SWAP1 PUSH2 0x1358 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x11F3 DUP3 PUSH2 0x11CA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1203 DUP2 PUSH2 0x11E9 JUMP JUMPDEST DUP2 EQ PUSH2 0x120D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x121E DUP2 PUSH2 0x11FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1239 JUMPI PUSH2 0x1238 PUSH2 0x11C6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1246 DUP5 DUP3 DUP6 ADD PUSH2 0x1210 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1261 DUP2 PUSH2 0x124F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x127A PUSH0 DUP4 ADD DUP5 PUSH2 0x1258 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1289 DUP2 PUSH2 0x124F JUMP JUMPDEST DUP2 EQ PUSH2 0x1293 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12A4 DUP2 PUSH2 0x1280 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12BF JUMPI PUSH2 0x12BE PUSH2 0x11C6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12CC DUP5 DUP3 DUP6 ADD PUSH2 0x1296 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x12F8 PUSH2 0x12F3 PUSH2 0x12EE DUP5 PUSH2 0x11CA JUMP JUMPDEST PUSH2 0x12D5 JUMP JUMPDEST PUSH2 0x11CA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1309 DUP3 PUSH2 0x12DE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x131A DUP3 PUSH2 0x12FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x132A DUP2 PUSH2 0x1310 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1343 PUSH0 DUP4 ADD DUP5 PUSH2 0x1321 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1352 DUP2 PUSH2 0x11E9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x136B PUSH0 DUP4 ADD DUP5 PUSH2 0x1349 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x13A8 DUP3 PUSH2 0x124F JUMP JUMPDEST SWAP2 POP PUSH2 0x13B3 DUP4 PUSH2 0x124F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x13CB JUMPI PUSH2 0x13CA PUSH2 0x1371 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x13DB DUP3 PUSH2 0x124F JUMP JUMPDEST SWAP2 POP PUSH2 0x13E6 DUP4 PUSH2 0x124F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x13F4 DUP2 PUSH2 0x124F JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x140B JUMPI PUSH2 0x140A PUSH2 0x1371 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1449 DUP3 PUSH2 0x124F JUMP JUMPDEST SWAP2 POP PUSH2 0x1454 DUP4 PUSH2 0x124F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1464 JUMPI PUSH2 0x1463 PUSH2 0x1412 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1479 DUP3 PUSH2 0x124F JUMP JUMPDEST SWAP2 POP PUSH2 0x1484 DUP4 PUSH2 0x124F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x149C JUMPI PUSH2 0x149B PUSH2 0x1371 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F742077697468647261772030000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14E6 PUSH1 0x11 DUP4 PUSH2 0x14A2 JUMP JUMPDEST SWAP2 POP PUSH2 0x14F1 DUP3 PUSH2 0x14B2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1513 DUP2 PUSH2 0x14DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207374616B652030000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x154E PUSH1 0xE DUP4 PUSH2 0x14A2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1559 DUP3 PUSH2 0x151A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x157B DUP2 PUSH2 0x1542 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1595 PUSH0 DUP4 ADD DUP6 PUSH2 0x1349 JUMP JUMPDEST PUSH2 0x15A2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1258 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x15BC PUSH0 DUP4 ADD DUP7 PUSH2 0x1349 JUMP JUMPDEST PUSH2 0x15C9 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1349 JUMP JUMPDEST PUSH2 0x15D6 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1258 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0x71F37ADD904E6B4C0494D6F0EF025FF99ABCB4A2A049B2 SUB SHL INVALID PUSH0 SDIV SHR PUSH9 0x5864736F6C63430008 0x1E STOP CALLER ",
							"sourceMap": "26150:3730:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27366:188;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;26625:42;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;27149:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;28240:308;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;26440:39;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;28892:503;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;27246:110;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;25124:101;;;:::i;:::-;;26241:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;26409:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;26562:57;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;24469:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;27914:320;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;28554:302;;;:::i;:::-;;26485:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;26304:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;26520:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;26376:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;25374:215;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;27366:188;27420:7;27531;:16;27539:7;27531:16;;;;;;;;;;;;;;;;27524:4;27488:22;:31;27511:7;27488:31;;;;;;;;;;;;;;;;27469:16;:14;:16::i;:::-;:50;;;;:::i;:::-;27447:9;:18;27457:7;27447:18;;;;;;;;;;;;;;;;:73;;;;:::i;:::-;27446:82;;;;:::i;:::-;:101;;;;:::i;:::-;27439:108;;27366:188;;;:::o;26625:42::-;;;;;;;;;;;;;;;;;:::o;27149:91::-;27195:7;27221:12;;27214:19;;27149:91;:::o;28240:308::-;20985:21;:19;:21::i;:::-;28307:10:::1;27658:16;:14;:16::i;:::-;27635:20;:39;;;;27701:26;:24;:26::i;:::-;27684:14;:43;;;;27760:1;27741:21;;:7;:21;;;27737:154;;27797:15;27804:7;27797:6;:15::i;:::-;27778:7;:16;27786:7;27778:16;;;;;;;;;;;;;;;:34;;;;27860:20;;27826:22;:31;27849:7;27826:31;;;;;;;;;;;;;;;:54;;;;27737:154;28346:1:::2;28337:6;:10;28329:40;;;;;;;;;;;;:::i;:::-;;;;;;;;;28395:6;28379:12;;:22;;;;;;;:::i;:::-;;;;;;;;28436:6;28411:9;:21;28421:10;28411:21;;;;;;;;;;;;;;;;:31;;;;;;;:::i;:::-;;;;;;;;28452:45;28478:10;28490:6;28452:12;;;;;;;;;;;:25;;;;:45;;;;;:::i;:::-;28522:10;28512:29;;;28534:6;28512:29;;;;;;:::i;:::-;;;;;;;;21016:1:::1;21027:20:::0;:18;:20::i;:::-;28240:308;:::o;26440:39::-;;;;:::o;28892:503::-;24362:13;:11;:13::i;:::-;28976:1:::1;27658:16;:14;:16::i;:::-;27635:20;:39;;;;27701:26;:24;:26::i;:::-;27684:14;:43;;;;27760:1;27741:21;;:7;:21;;;27737:154;;27797:15;27804:7;27797:6;:15::i;:::-;27778:7;:16;27786:7;27778:16;;;;;;;;;;;;;;;:34;;;;27860:20;;27826:22;:31;27849:7;27826:31;;;;;;;;;;;;;;;:54;;;;27737:154;29013:12:::2;;28994:15;:31;28990:299;;29063:15;;29054:6;:24;;;;:::i;:::-;29041:10;:37;;;;28990:299;;;29109:17;29144:15;29129:12;;:30;;;;:::i;:::-;29109:50;;29173:16;29204:10;;29192:9;:22;;;;:::i;:::-;29173:41;;29263:15;;29251:8;29242:6;:17;;;;:::i;:::-;29241:37;;;;:::i;:::-;29228:10;:50;;;;29095:194;;28990:299;29315:15;29298:14;:32;;;;29373:15;;29355;:33;;;;:::i;:::-;29340:12;:48;;;;24385:1:::1;28892:503:::0;:::o;27246:110::-;27305:7;27331:9;:18;27341:7;27331:18;;;;;;;;;;;;;;;;27324:25;;27246:110;;;:::o;25124:101::-;24362:13;:11;:13::i;:::-;25188:30:::1;25215:1;25188:18;:30::i;:::-;25124:101::o:0;26241:26::-;;;;;;;;;;;;;:::o;26409:25::-;;;;:::o;26562:57::-;;;;;;;;;;;;;;;;;:::o;24469:85::-;24515:7;24541:6;;;;;;;;;;;24534:13;;24469:85;:::o;27914:320::-;20985:21;:19;:21::i;:::-;27980:10:::1;27658:16;:14;:16::i;:::-;27635:20;:39;;;;27701:26;:24;:26::i;:::-;27684:14;:43;;;;27760:1;27741:21;;:7;:21;;;27737:154;;27797:15;27804:7;27797:6;:15::i;:::-;27778:7;:16;27786:7;27778:16;;;;;;;;;;;;;;;:34;;;;27860:20;;27826:22;:31;27849:7;27826:31;;;;;;;;;;;;;;;:54;;;;27737:154;28019:1:::2;28010:6;:10;28002:37;;;;;;;;;;;;:::i;:::-;;;;;;;;;28065:6;28049:12;;:22;;;;;;;:::i;:::-;;;;;;;;28106:6;28081:9;:21;28091:10;28081:21;;;;;;;;;;;;;;;;:31;;;;;;;:::i;:::-;;;;;;;;28122:64;28152:10;28172:4;28179:6;28122:12;;;;;;;;;;;:29;;;;:64;;;;;;:::i;:::-;28208:10;28201:26;;;28220:6;28201:26;;;;;;:::i;:::-;;;;;;;;21016:1:::1;21027:20:::0;:18;:20::i;:::-;27914:320;:::o;28554:302::-;20985:21;:19;:21::i;:::-;28610:10:::1;27658:16;:14;:16::i;:::-;27635:20;:39;;;;27701:26;:24;:26::i;:::-;27684:14;:43;;;;27760:1;27741:21;;:7;:21;;;27737:154;;27797:15;27804:7;27797:6;:15::i;:::-;27778:7;:16;27786:7;27778:16;;;;;;;;;;;;;;;:34;;;;27860:20;;27826:22;:31;27849:7;27826:31;;;;;;;;;;;;;;;:54;;;;27737:154;28632:14:::2;28649:7;:19;28657:10;28649:19;;;;;;;;;;;;;;;;28632:36;;28691:1;28682:6;:10;28678:172;;;28730:1;28708:7;:19;28716:10;28708:19;;;;;;;;;;;;;;;:23;;;;28745:45;28771:10;28783:6;28745:12;;;;;;;;;;;:25;;;;:45;;;;;:::i;:::-;28820:10;28809:30;;;28832:6;28809:30;;;;;;:::i;:::-;;;;;;;;28678:172;28622:234;21016:1:::1;21027:20:::0;:18;:20::i;:::-;28554:302::o;26485:29::-;;;;:::o;26304:26::-;;;;;;;;;;;;;:::o;26520:35::-;;;;:::o;26376:27::-;;;;:::o;25374:215::-;24362:13;:11;:13::i;:::-;25478:1:::1;25458:22;;:8;:22;;::::0;25454:91:::1;;25531:1;25503:31;;;;;;;;;;;:::i;:::-;;;;;;;;25454:91;25554:28;25573:8;25554:18;:28::i;:::-;25374:215:::0;:::o;29446:271::-;29495:7;29534:1;29518:12;;:17;29514:75;;29558:20;;29551:27;;;;29514:75;29698:12;;29690:4;29672:14;;29643:26;:24;:26::i;:::-;:43;;;;:::i;:::-;29629:10;;:58;;;;:::i;:::-;:65;;;;:::i;:::-;29628:82;;;;:::i;:::-;29605:20;;:105;;;;:::i;:::-;29598:112;;29446:271;;:::o;21060:307::-;20384:1;21187:7;;:18;21183:86;;21228:30;;;;;;;;;;;;;;21183:86;20384:1;21343:7;:17;;;;21060:307::o;29723:155::-;29782:7;29826:12;;29808:15;:30;:63;;29859:12;;29808:63;;;29841:15;29808:63;29801:70;;29723:155;:::o;9599:160::-;9681:71;9701:5;9723;:14;;;9740:2;9744:5;9708:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9681:19;:71::i;:::-;9599:160;;;:::o;21373:208::-;20342:1;21553:7;:21;;;;21373:208::o;24627:162::-;24697:12;:10;:12::i;:::-;24686:23;;:7;:5;:7::i;:::-;:23;;;24682:101;;24759:12;:10;:12::i;:::-;24732:40;;;;;;;;;;;:::i;:::-;;;;;;;;24682:101;24627:162::o;25743:187::-;25816:16;25835:6;;;;;;;;;;;25816:25;;25860:8;25851:6;;:17;;;;;;;;;;;;;;;;;;25914:8;25883:40;;25904:8;25883:40;;;;;;;;;;;;25806:124;25743:187;:::o;9998:188::-;10098:81;10118:5;10140;:18;;;10161:4;10167:2;10171:5;10125:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10098:19;:81::i;:::-;9998:188;;;;:::o;16750:720::-;16830:18;16858:19;16996:4;16993:1;16986:4;16980:11;16973:4;16967;16963:15;16960:1;16953:5;16946;16941:60;17053:7;17043:176;;17097:4;17091:11;17142:16;17139:1;17134:3;17119:40;17188:16;17183:3;17176:29;17043:176;17246:16;17232:30;;17296:1;17290:8;17275:23;;16912:396;17336:1;17322:10;:15;:68;;17389:1;17374:11;:16;;17322:68;;;17370:1;17348:5;17340:26;;;:31;17322:68;17318:146;;;17446:5;17413:40;;;;;;;;;;;:::i;:::-;;;;;;;;17318:146;16820:650;;16750:720;;:::o;22547:96::-;22600:7;22626:10;22619:17;;22547:96;:::o;88:117:1:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:329::-;1943:6;1992:2;1980:9;1971:7;1967:23;1963:32;1960:119;;;1998:79;;:::i;:::-;1960:119;2118:1;2143:53;2188:7;2179:6;2168:9;2164:22;2143:53;:::i;:::-;2133:63;;2089:117;1884:329;;;;:::o;2219:60::-;2247:3;2268:5;2261:12;;2219:60;;;:::o;2285:142::-;2335:9;2368:53;2386:34;2395:24;2413:5;2395:24;:::i;:::-;2386:34;:::i;:::-;2368:53;:::i;:::-;2355:66;;2285:142;;;:::o;2433:126::-;2483:9;2516:37;2547:5;2516:37;:::i;:::-;2503:50;;2433:126;;;:::o;2565:139::-;2628:9;2661:37;2692:5;2661:37;:::i;:::-;2648:50;;2565:139;;;:::o;2710:157::-;2810:50;2854:5;2810:50;:::i;:::-;2805:3;2798:63;2710:157;;:::o;2873:248::-;2979:4;3017:2;3006:9;3002:18;2994:26;;3030:84;3111:1;3100:9;3096:17;3087:6;3030:84;:::i;:::-;2873:248;;;;:::o;3127:118::-;3214:24;3232:5;3214:24;:::i;:::-;3209:3;3202:37;3127:118;;:::o;3251:222::-;3344:4;3382:2;3371:9;3367:18;3359:26;;3395:71;3463:1;3452:9;3448:17;3439:6;3395:71;:::i;:::-;3251:222;;;;:::o;3479:180::-;3527:77;3524:1;3517:88;3624:4;3621:1;3614:15;3648:4;3645:1;3638:15;3665:194;3705:4;3725:20;3743:1;3725:20;:::i;:::-;3720:25;;3759:20;3777:1;3759:20;:::i;:::-;3754:25;;3803:1;3800;3796:9;3788:17;;3827:1;3821:4;3818:11;3815:37;;;3832:18;;:::i;:::-;3815:37;3665:194;;;;:::o;3865:410::-;3905:7;3928:20;3946:1;3928:20;:::i;:::-;3923:25;;3962:20;3980:1;3962:20;:::i;:::-;3957:25;;4017:1;4014;4010:9;4039:30;4057:11;4039:30;:::i;:::-;4028:41;;4218:1;4209:7;4205:15;4202:1;4199:22;4179:1;4172:9;4152:83;4129:139;;4248:18;;:::i;:::-;4129:139;3913:362;3865:410;;;;:::o;4281:180::-;4329:77;4326:1;4319:88;4426:4;4423:1;4416:15;4450:4;4447:1;4440:15;4467:185;4507:1;4524:20;4542:1;4524:20;:::i;:::-;4519:25;;4558:20;4576:1;4558:20;:::i;:::-;4553:25;;4597:1;4587:35;;4602:18;;:::i;:::-;4587:35;4644:1;4641;4637:9;4632:14;;4467:185;;;;:::o;4658:191::-;4698:3;4717:20;4735:1;4717:20;:::i;:::-;4712:25;;4751:20;4769:1;4751:20;:::i;:::-;4746:25;;4794:1;4791;4787:9;4780:16;;4815:3;4812:1;4809:10;4806:36;;;4822:18;;:::i;:::-;4806:36;4658:191;;;;:::o;4855:169::-;4939:11;4973:6;4968:3;4961:19;5013:4;5008:3;5004:14;4989:29;;4855:169;;;;:::o;5030:167::-;5170:19;5166:1;5158:6;5154:14;5147:43;5030:167;:::o;5203:366::-;5345:3;5366:67;5430:2;5425:3;5366:67;:::i;:::-;5359:74;;5442:93;5531:3;5442:93;:::i;:::-;5560:2;5555:3;5551:12;5544:19;;5203:366;;;:::o;5575:419::-;5741:4;5779:2;5768:9;5764:18;5756:26;;5828:9;5822:4;5818:20;5814:1;5803:9;5799:17;5792:47;5856:131;5982:4;5856:131;:::i;:::-;5848:139;;5575:419;;;:::o;6000:164::-;6140:16;6136:1;6128:6;6124:14;6117:40;6000:164;:::o;6170:366::-;6312:3;6333:67;6397:2;6392:3;6333:67;:::i;:::-;6326:74;;6409:93;6498:3;6409:93;:::i;:::-;6527:2;6522:3;6518:12;6511:19;;6170:366;;;:::o;6542:419::-;6708:4;6746:2;6735:9;6731:18;6723:26;;6795:9;6789:4;6785:20;6781:1;6770:9;6766:17;6759:47;6823:131;6949:4;6823:131;:::i;:::-;6815:139;;6542:419;;;:::o;6967:332::-;7088:4;7126:2;7115:9;7111:18;7103:26;;7139:71;7207:1;7196:9;7192:17;7183:6;7139:71;:::i;:::-;7220:72;7288:2;7277:9;7273:18;7264:6;7220:72;:::i;:::-;6967:332;;;;;:::o;7305:442::-;7454:4;7492:2;7481:9;7477:18;7469:26;;7505:71;7573:1;7562:9;7558:17;7549:6;7505:71;:::i;:::-;7586:72;7654:2;7643:9;7639:18;7630:6;7586:72;:::i;:::-;7668;7736:2;7725:9;7721:18;7712:6;7668:72;:::i;:::-;7305:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1130400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address)": "2896",
								"claimReward()": "infinite",
								"earned(address)": "infinite",
								"lastUpdateTime()": "2447",
								"notifyRewardAmount(uint256)": "infinite",
								"owner()": "2582",
								"periodFinish()": "2513",
								"renounceOwnership()": "infinite",
								"rewardPerTokenStored()": "2491",
								"rewardRate()": "2448",
								"rewards(address)": "2848",
								"rewardsDuration()": "2448",
								"rewardsToken()": "infinite",
								"stake(uint256)": "infinite",
								"stakingToken()": "infinite",
								"totalSupply()": "2500",
								"transferOwnership(address)": "infinite",
								"userRewardPerTokenPaid(address)": "2847",
								"withdraw(uint256)": "infinite"
							},
							"internal": {
								"lastTimeRewardApplicable()": "4255",
								"rewardPerToken()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 26150,
									"end": 29880,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 26150,
									"end": 29880,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 26150,
									"end": 29880,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26473,
									"end": 26479,
									"name": "PUSH",
									"source": 0,
									"value": "93A80"
								},
								{
									"begin": 26440,
									"end": 26479,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 26440,
									"end": 26479,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 26936,
									"end": 27113,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 26936,
									"end": 27113,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26936,
									"end": 27113,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26936,
									"end": 27113,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26936,
									"end": 27113,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26936,
									"end": 27113,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26936,
									"end": 27113,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26936,
									"end": 27113,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 26936,
									"end": 27113,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26936,
									"end": 27113,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26936,
									"end": 27113,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26936,
									"end": 27113,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 26936,
									"end": 27113,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 26936,
									"end": 27113,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 26936,
									"end": 27113,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 26936,
									"end": 27113,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 26936,
									"end": 27113,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26936,
									"end": 27113,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 26936,
									"end": 27113,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 26936,
									"end": 27113,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 26936,
									"end": 27113,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26936,
									"end": 27113,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26936,
									"end": 27113,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 26936,
									"end": 27113,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 26936,
									"end": 27113,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26936,
									"end": 27113,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26936,
									"end": 27113,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 26936,
									"end": 27113,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 26936,
									"end": 27113,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 26936,
									"end": 27113,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 26936,
									"end": 27113,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 26936,
									"end": 27113,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 26936,
									"end": 27113,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 26936,
									"end": 27113,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 26936,
									"end": 27113,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27002,
									"end": 27012,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 20342,
									"end": 20343,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 20546,
									"end": 20553,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 20546,
									"end": 20567,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20546,
									"end": 20567,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20546,
									"end": 20567,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 20546,
									"end": 20567,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24128,
									"end": 24129,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24104,
									"end": 24130,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24104,
									"end": 24130,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24104,
									"end": 24116,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24104,
									"end": 24130,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24104,
									"end": 24130,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24104,
									"end": 24130,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 24100,
									"end": 24195,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 24100,
									"end": 24195,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 24181,
									"end": 24182,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24153,
									"end": 24184,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24153,
									"end": 24184,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24153,
									"end": 24184,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24153,
									"end": 24184,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24153,
									"end": 24184,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24153,
									"end": 24184,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 24153,
									"end": 24184,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24153,
									"end": 24184,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 24153,
									"end": 24184,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 24153,
									"end": 24184,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24153,
									"end": 24184,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 24153,
									"end": 24184,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 24153,
									"end": 24184,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 24153,
									"end": 24184,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24153,
									"end": 24184,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24153,
									"end": 24184,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24153,
									"end": 24184,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24153,
									"end": 24184,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 24153,
									"end": 24184,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 24153,
									"end": 24184,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24153,
									"end": 24184,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 24100,
									"end": 24195,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 24100,
									"end": 24195,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24204,
									"end": 24236,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 24223,
									"end": 24235,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24204,
									"end": 24222,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 24204,
									"end": 24222,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 24204,
									"end": 24222,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 24204,
									"end": 24236,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 24204,
									"end": 24236,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 24204,
									"end": 24236,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 24204,
									"end": 24236,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 24204,
									"end": 24236,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24056,
									"end": 24243,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27046,
									"end": 27059,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27024,
									"end": 27036,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 27024,
									"end": 27036,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27024,
									"end": 27060,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 27024,
									"end": 27060,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 27024,
									"end": 27060,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27024,
									"end": 27060,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 27024,
									"end": 27060,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27024,
									"end": 27060,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 27024,
									"end": 27060,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 27024,
									"end": 27060,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 27024,
									"end": 27060,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 27024,
									"end": 27060,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27024,
									"end": 27060,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 27024,
									"end": 27060,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 27024,
									"end": 27060,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 27024,
									"end": 27060,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 27024,
									"end": 27060,
									"modifierDepth": 1,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 27024,
									"end": 27060,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27024,
									"end": 27060,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 27024,
									"end": 27060,
									"modifierDepth": 1,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27092,
									"end": 27105,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27070,
									"end": 27082,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 27070,
									"end": 27082,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27070,
									"end": 27106,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 27070,
									"end": 27106,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 27070,
									"end": 27106,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27070,
									"end": 27106,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 27070,
									"end": 27106,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27070,
									"end": 27106,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 27070,
									"end": 27106,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 27070,
									"end": 27106,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 27070,
									"end": 27106,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 27070,
									"end": 27106,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27070,
									"end": 27106,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 27070,
									"end": 27106,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 27070,
									"end": 27106,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 27070,
									"end": 27106,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 27070,
									"end": 27106,
									"modifierDepth": 1,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 27070,
									"end": 27106,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27070,
									"end": 27106,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 27070,
									"end": 27106,
									"modifierDepth": 1,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26936,
									"end": 27113,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26936,
									"end": 27113,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26150,
									"end": 29880,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 26150,
									"end": 29880,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 25743,
									"end": 25930,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 25743,
									"end": 25930,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25816,
									"end": 25832,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25835,
									"end": 25841,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25835,
									"end": 25841,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25835,
									"end": 25841,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25835,
									"end": 25841,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 25835,
									"end": 25841,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25835,
									"end": 25841,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 25835,
									"end": 25841,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 25835,
									"end": 25841,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25835,
									"end": 25841,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 25835,
									"end": 25841,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 25835,
									"end": 25841,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 25816,
									"end": 25841,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25816,
									"end": 25841,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25860,
									"end": 25868,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25851,
									"end": 25857,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25851,
									"end": 25857,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25851,
									"end": 25868,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 25851,
									"end": 25868,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 25851,
									"end": 25868,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25851,
									"end": 25868,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 25851,
									"end": 25868,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25851,
									"end": 25868,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 25851,
									"end": 25868,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 25851,
									"end": 25868,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 25851,
									"end": 25868,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 25851,
									"end": 25868,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25851,
									"end": 25868,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 25851,
									"end": 25868,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 25851,
									"end": 25868,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 25851,
									"end": 25868,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 25851,
									"end": 25868,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 25851,
									"end": 25868,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25851,
									"end": 25868,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 25851,
									"end": 25868,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25914,
									"end": 25922,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25883,
									"end": 25923,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 25883,
									"end": 25923,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 25904,
									"end": 25912,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25883,
									"end": 25923,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 25883,
									"end": 25923,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 25883,
									"end": 25923,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 25883,
									"end": 25923,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25883,
									"end": 25923,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 25883,
									"end": 25923,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25883,
									"end": 25923,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 25883,
									"end": 25923,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25883,
									"end": 25923,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 25883,
									"end": 25923,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 25883,
									"end": 25923,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25883,
									"end": 25923,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 25806,
									"end": 25930,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25743,
									"end": 25930,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25743,
									"end": 25930,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1463,
									"end": 1468,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 1445,
									"end": 1469,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1440,
									"end": 1443,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1433,
									"end": 1470,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 1476,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1575,
									"end": 1579,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1613,
									"end": 1615,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1602,
									"end": 1611,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1598,
									"end": 1616,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1590,
									"end": 1616,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1590,
									"end": 1616,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 1694,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1683,
									"end": 1692,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1696,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1670,
									"end": 1676,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1626,
									"end": 1697,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1482,
									"end": 1704,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 26150,
									"end": 29880,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 26150,
									"end": 29880,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26150,
									"end": 29880,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26150,
									"end": 29880,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26150,
									"end": 29880,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26150,
									"end": 29880,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26150,
									"end": 29880,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 26150,
									"end": 29880,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26150,
									"end": 29880,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207671f37add904e6b4c0494d6f0ef025ff99abcb4a2a049b2031bfe5f051c685864736f6c634300081e0033",
									".code": [
										{
											"begin": 26150,
											"end": 29880,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "PUSH",
											"source": 0,
											"value": "7B0A47EE"
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "PUSH",
											"source": 0,
											"value": "C8F33C91"
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "PUSH",
											"source": 0,
											"value": "C8F33C91"
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "PUSH",
											"source": 0,
											"value": "D1AF0C7D"
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "PUSH",
											"source": 0,
											"value": "DF136D65"
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "PUSH",
											"source": 0,
											"value": "EBE2B12B"
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "PUSH",
											"source": 0,
											"value": "7B0A47EE"
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "PUSH",
											"source": 0,
											"value": "8B876347"
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "PUSH",
											"source": 0,
											"value": "A694FC3A"
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "PUSH",
											"source": 0,
											"value": "B88A802F"
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "PUSH",
											"source": 0,
											"value": "386A9525"
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "PUSH",
											"source": 0,
											"value": "386A9525"
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "PUSH",
											"source": 0,
											"value": "3C6B16AB"
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "PUSH",
											"source": 0,
											"value": "72F702F3"
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "PUSH",
											"source": 0,
											"value": "8CC262"
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "PUSH",
											"source": 0,
											"value": "700037D"
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "PUSH",
											"source": 0,
											"value": "2E1A7D4D"
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26150,
											"end": 29880,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27366,
											"end": 27554,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 27366,
											"end": 27554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27366,
											"end": 27554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 27366,
											"end": 27554,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27366,
											"end": 27554,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27366,
											"end": 27554,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27366,
											"end": 27554,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27366,
											"end": 27554,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27366,
											"end": 27554,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27366,
											"end": 27554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27366,
											"end": 27554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 27366,
											"end": 27554,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27366,
											"end": 27554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27366,
											"end": 27554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 27366,
											"end": 27554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27366,
											"end": 27554,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 27366,
											"end": 27554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27366,
											"end": 27554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 27366,
											"end": 27554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27366,
											"end": 27554,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 27366,
											"end": 27554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27366,
											"end": 27554,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27366,
											"end": 27554,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27366,
											"end": 27554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 27366,
											"end": 27554,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27366,
											"end": 27554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27366,
											"end": 27554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 27366,
											"end": 27554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27366,
											"end": 27554,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 27366,
											"end": 27554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27366,
											"end": 27554,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27366,
											"end": 27554,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27366,
											"end": 27554,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27366,
											"end": 27554,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27366,
											"end": 27554,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27366,
											"end": 27554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27366,
											"end": 27554,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 26625,
											"end": 26667,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26625,
											"end": 26667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26625,
											"end": 26667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 26625,
											"end": 26667,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26625,
											"end": 26667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26625,
											"end": 26667,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26625,
											"end": 26667,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26625,
											"end": 26667,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26625,
											"end": 26667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26625,
											"end": 26667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26625,
											"end": 26667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 26625,
											"end": 26667,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26625,
											"end": 26667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26625,
											"end": 26667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 26625,
											"end": 26667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26625,
											"end": 26667,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 26625,
											"end": 26667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26625,
											"end": 26667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 26625,
											"end": 26667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26625,
											"end": 26667,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 26625,
											"end": 26667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26625,
											"end": 26667,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26625,
											"end": 26667,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26625,
											"end": 26667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 26625,
											"end": 26667,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26625,
											"end": 26667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26625,
											"end": 26667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 26625,
											"end": 26667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26625,
											"end": 26667,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 26625,
											"end": 26667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26625,
											"end": 26667,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26625,
											"end": 26667,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26625,
											"end": 26667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26625,
											"end": 26667,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26625,
											"end": 26667,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26625,
											"end": 26667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26625,
											"end": 26667,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 27149,
											"end": 27240,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 27149,
											"end": 27240,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27149,
											"end": 27240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 27149,
											"end": 27240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 27149,
											"end": 27240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27149,
											"end": 27240,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 27149,
											"end": 27240,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27149,
											"end": 27240,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27149,
											"end": 27240,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27149,
											"end": 27240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 27149,
											"end": 27240,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27149,
											"end": 27240,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27149,
											"end": 27240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 27149,
											"end": 27240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27149,
											"end": 27240,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 27149,
											"end": 27240,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27149,
											"end": 27240,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27149,
											"end": 27240,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27149,
											"end": 27240,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27149,
											"end": 27240,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27149,
											"end": 27240,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27149,
											"end": 27240,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27149,
											"end": 27240,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 28240,
											"end": 28548,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 28240,
											"end": 28548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28240,
											"end": 28548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 28240,
											"end": 28548,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28240,
											"end": 28548,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28240,
											"end": 28548,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28240,
											"end": 28548,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28240,
											"end": 28548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28240,
											"end": 28548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28240,
											"end": 28548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28240,
											"end": 28548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 28240,
											"end": 28548,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28240,
											"end": 28548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28240,
											"end": 28548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28240,
											"end": 28548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28240,
											"end": 28548,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 28240,
											"end": 28548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28240,
											"end": 28548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 28240,
											"end": 28548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28240,
											"end": 28548,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 28240,
											"end": 28548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28240,
											"end": 28548,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 26440,
											"end": 26479,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 26440,
											"end": 26479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26440,
											"end": 26479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 26440,
											"end": 26479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 26440,
											"end": 26479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26440,
											"end": 26479,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 26440,
											"end": 26479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26440,
											"end": 26479,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26440,
											"end": 26479,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26440,
											"end": 26479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 26440,
											"end": 26479,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26440,
											"end": 26479,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26440,
											"end": 26479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 26440,
											"end": 26479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26440,
											"end": 26479,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 26440,
											"end": 26479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26440,
											"end": 26479,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26440,
											"end": 26479,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26440,
											"end": 26479,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26440,
											"end": 26479,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26440,
											"end": 26479,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26440,
											"end": 26479,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26440,
											"end": 26479,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 28892,
											"end": 29395,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 28892,
											"end": 29395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28892,
											"end": 29395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 28892,
											"end": 29395,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28892,
											"end": 29395,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28892,
											"end": 29395,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28892,
											"end": 29395,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28892,
											"end": 29395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28892,
											"end": 29395,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28892,
											"end": 29395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28892,
											"end": 29395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 28892,
											"end": 29395,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28892,
											"end": 29395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28892,
											"end": 29395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28892,
											"end": 29395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28892,
											"end": 29395,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 28892,
											"end": 29395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28892,
											"end": 29395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 28892,
											"end": 29395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28892,
											"end": 29395,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 28892,
											"end": 29395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28892,
											"end": 29395,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 27246,
											"end": 27356,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 27246,
											"end": 27356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27246,
											"end": 27356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 27246,
											"end": 27356,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27246,
											"end": 27356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27246,
											"end": 27356,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27246,
											"end": 27356,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27246,
											"end": 27356,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27246,
											"end": 27356,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27246,
											"end": 27356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27246,
											"end": 27356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 27246,
											"end": 27356,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27246,
											"end": 27356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27246,
											"end": 27356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 27246,
											"end": 27356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27246,
											"end": 27356,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 27246,
											"end": 27356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27246,
											"end": 27356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 27246,
											"end": 27356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27246,
											"end": 27356,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 27246,
											"end": 27356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27246,
											"end": 27356,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27246,
											"end": 27356,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27246,
											"end": 27356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 27246,
											"end": 27356,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27246,
											"end": 27356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27246,
											"end": 27356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 27246,
											"end": 27356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27246,
											"end": 27356,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 27246,
											"end": 27356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27246,
											"end": 27356,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27246,
											"end": 27356,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27246,
											"end": 27356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27246,
											"end": 27356,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27246,
											"end": 27356,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27246,
											"end": 27356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27246,
											"end": 27356,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 25124,
											"end": 25225,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 25124,
											"end": 25225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25124,
											"end": 25225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 25124,
											"end": 25225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 25124,
											"end": 25225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25124,
											"end": 25225,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 25124,
											"end": 25225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25124,
											"end": 25225,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 26241,
											"end": 26267,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 26241,
											"end": 26267,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26241,
											"end": 26267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 26241,
											"end": 26267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 26241,
											"end": 26267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26241,
											"end": 26267,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 26241,
											"end": 26267,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26241,
											"end": 26267,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26241,
											"end": 26267,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26241,
											"end": 26267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 26241,
											"end": 26267,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26241,
											"end": 26267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26241,
											"end": 26267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 26241,
											"end": 26267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26241,
											"end": 26267,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 26241,
											"end": 26267,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26241,
											"end": 26267,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26241,
											"end": 26267,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26241,
											"end": 26267,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26241,
											"end": 26267,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26241,
											"end": 26267,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26241,
											"end": 26267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26241,
											"end": 26267,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 26409,
											"end": 26434,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 26409,
											"end": 26434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26409,
											"end": 26434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 26409,
											"end": 26434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 26409,
											"end": 26434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26409,
											"end": 26434,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 26409,
											"end": 26434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26409,
											"end": 26434,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26409,
											"end": 26434,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26409,
											"end": 26434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 26409,
											"end": 26434,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26409,
											"end": 26434,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26409,
											"end": 26434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 26409,
											"end": 26434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26409,
											"end": 26434,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 26409,
											"end": 26434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26409,
											"end": 26434,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26409,
											"end": 26434,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26409,
											"end": 26434,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26409,
											"end": 26434,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26409,
											"end": 26434,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26409,
											"end": 26434,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26409,
											"end": 26434,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 26562,
											"end": 26619,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 26562,
											"end": 26619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26562,
											"end": 26619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 26562,
											"end": 26619,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26562,
											"end": 26619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26562,
											"end": 26619,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26562,
											"end": 26619,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26562,
											"end": 26619,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26562,
											"end": 26619,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26562,
											"end": 26619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26562,
											"end": 26619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 26562,
											"end": 26619,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26562,
											"end": 26619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26562,
											"end": 26619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 26562,
											"end": 26619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26562,
											"end": 26619,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 26562,
											"end": 26619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26562,
											"end": 26619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 26562,
											"end": 26619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26562,
											"end": 26619,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 26562,
											"end": 26619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26562,
											"end": 26619,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26562,
											"end": 26619,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26562,
											"end": 26619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 26562,
											"end": 26619,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26562,
											"end": 26619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26562,
											"end": 26619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 26562,
											"end": 26619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26562,
											"end": 26619,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 26562,
											"end": 26619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26562,
											"end": 26619,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26562,
											"end": 26619,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26562,
											"end": 26619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26562,
											"end": 26619,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26562,
											"end": 26619,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26562,
											"end": 26619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26562,
											"end": 26619,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 24469,
											"end": 24554,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 24469,
											"end": 24554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24469,
											"end": 24554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 24469,
											"end": 24554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 24469,
											"end": 24554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24469,
											"end": 24554,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 24469,
											"end": 24554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24469,
											"end": 24554,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24469,
											"end": 24554,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24469,
											"end": 24554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 24469,
											"end": 24554,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24469,
											"end": 24554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24469,
											"end": 24554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 24469,
											"end": 24554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24469,
											"end": 24554,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 24469,
											"end": 24554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24469,
											"end": 24554,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24469,
											"end": 24554,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24469,
											"end": 24554,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24469,
											"end": 24554,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24469,
											"end": 24554,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24469,
											"end": 24554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24469,
											"end": 24554,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 27914,
											"end": 28234,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 27914,
											"end": 28234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27914,
											"end": 28234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 27914,
											"end": 28234,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27914,
											"end": 28234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27914,
											"end": 28234,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27914,
											"end": 28234,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27914,
											"end": 28234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27914,
											"end": 28234,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27914,
											"end": 28234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27914,
											"end": 28234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 27914,
											"end": 28234,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27914,
											"end": 28234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27914,
											"end": 28234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27914,
											"end": 28234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27914,
											"end": 28234,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 27914,
											"end": 28234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27914,
											"end": 28234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 27914,
											"end": 28234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27914,
											"end": 28234,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 27914,
											"end": 28234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27914,
											"end": 28234,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 28554,
											"end": 28856,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 28554,
											"end": 28856,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28554,
											"end": 28856,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 28554,
											"end": 28856,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 28554,
											"end": 28856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28554,
											"end": 28856,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 28554,
											"end": 28856,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28554,
											"end": 28856,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 26485,
											"end": 26514,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 26485,
											"end": 26514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26485,
											"end": 26514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 26485,
											"end": 26514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 26485,
											"end": 26514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26485,
											"end": 26514,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 26485,
											"end": 26514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26485,
											"end": 26514,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26485,
											"end": 26514,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26485,
											"end": 26514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 26485,
											"end": 26514,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26485,
											"end": 26514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26485,
											"end": 26514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 26485,
											"end": 26514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26485,
											"end": 26514,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 26485,
											"end": 26514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26485,
											"end": 26514,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26485,
											"end": 26514,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26485,
											"end": 26514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26485,
											"end": 26514,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26485,
											"end": 26514,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26485,
											"end": 26514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26485,
											"end": 26514,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 26304,
											"end": 26330,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 26304,
											"end": 26330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26304,
											"end": 26330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 26304,
											"end": 26330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 26304,
											"end": 26330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26304,
											"end": 26330,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 26304,
											"end": 26330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26304,
											"end": 26330,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26304,
											"end": 26330,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26304,
											"end": 26330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 26304,
											"end": 26330,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26304,
											"end": 26330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26304,
											"end": 26330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 26304,
											"end": 26330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26304,
											"end": 26330,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 26304,
											"end": 26330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26304,
											"end": 26330,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26304,
											"end": 26330,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26304,
											"end": 26330,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26304,
											"end": 26330,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26304,
											"end": 26330,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26304,
											"end": 26330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26304,
											"end": 26330,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 26520,
											"end": 26555,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 26520,
											"end": 26555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26520,
											"end": 26555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 26520,
											"end": 26555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 26520,
											"end": 26555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26520,
											"end": 26555,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 26520,
											"end": 26555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26520,
											"end": 26555,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26520,
											"end": 26555,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26520,
											"end": 26555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 26520,
											"end": 26555,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26520,
											"end": 26555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26520,
											"end": 26555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 26520,
											"end": 26555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26520,
											"end": 26555,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 26520,
											"end": 26555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26520,
											"end": 26555,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26520,
											"end": 26555,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26520,
											"end": 26555,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26520,
											"end": 26555,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26520,
											"end": 26555,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26520,
											"end": 26555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26520,
											"end": 26555,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 26376,
											"end": 26403,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26376,
											"end": 26403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26376,
											"end": 26403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 26376,
											"end": 26403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 26376,
											"end": 26403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26376,
											"end": 26403,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 26376,
											"end": 26403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26376,
											"end": 26403,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26376,
											"end": 26403,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26376,
											"end": 26403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 26376,
											"end": 26403,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26376,
											"end": 26403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26376,
											"end": 26403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 26376,
											"end": 26403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26376,
											"end": 26403,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 26376,
											"end": 26403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26376,
											"end": 26403,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26376,
											"end": 26403,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26376,
											"end": 26403,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26376,
											"end": 26403,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26376,
											"end": 26403,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26376,
											"end": 26403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26376,
											"end": 26403,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 25374,
											"end": 25589,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 25374,
											"end": 25589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25374,
											"end": 25589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 25374,
											"end": 25589,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25374,
											"end": 25589,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25374,
											"end": 25589,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25374,
											"end": 25589,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25374,
											"end": 25589,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25374,
											"end": 25589,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25374,
											"end": 25589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25374,
											"end": 25589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 25374,
											"end": 25589,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25374,
											"end": 25589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25374,
											"end": 25589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 25374,
											"end": 25589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25374,
											"end": 25589,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 25374,
											"end": 25589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25374,
											"end": 25589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 25374,
											"end": 25589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25374,
											"end": 25589,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 25374,
											"end": 25589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25374,
											"end": 25589,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 27366,
											"end": 27554,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 27366,
											"end": 27554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27420,
											"end": 27427,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27531,
											"end": 27538,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 27531,
											"end": 27547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27539,
											"end": 27546,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27531,
											"end": 27547,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27531,
											"end": 27547,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27531,
											"end": 27547,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27531,
											"end": 27547,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27531,
											"end": 27547,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27531,
											"end": 27547,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27531,
											"end": 27547,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27531,
											"end": 27547,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27531,
											"end": 27547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27531,
											"end": 27547,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27531,
											"end": 27547,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27531,
											"end": 27547,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27531,
											"end": 27547,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27531,
											"end": 27547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27531,
											"end": 27547,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27531,
											"end": 27547,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27524,
											"end": 27528,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 27488,
											"end": 27510,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 27488,
											"end": 27519,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27511,
											"end": 27518,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27488,
											"end": 27519,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27488,
											"end": 27519,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27488,
											"end": 27519,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27488,
											"end": 27519,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27488,
											"end": 27519,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27488,
											"end": 27519,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27488,
											"end": 27519,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27488,
											"end": 27519,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27488,
											"end": 27519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27488,
											"end": 27519,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27488,
											"end": 27519,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27488,
											"end": 27519,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27488,
											"end": 27519,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27488,
											"end": 27519,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27488,
											"end": 27519,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27488,
											"end": 27519,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27469,
											"end": 27485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 27469,
											"end": 27483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 27469,
											"end": 27485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27469,
											"end": 27485,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 27469,
											"end": 27485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27469,
											"end": 27519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 27469,
											"end": 27519,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27469,
											"end": 27519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27469,
											"end": 27519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 27469,
											"end": 27519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27469,
											"end": 27519,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 27469,
											"end": 27519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27447,
											"end": 27456,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 27447,
											"end": 27465,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27457,
											"end": 27464,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 27447,
											"end": 27465,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27447,
											"end": 27465,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27447,
											"end": 27465,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27447,
											"end": 27465,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27447,
											"end": 27465,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27447,
											"end": 27465,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27447,
											"end": 27465,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27447,
											"end": 27465,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27447,
											"end": 27465,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27447,
											"end": 27465,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27447,
											"end": 27465,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27447,
											"end": 27465,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27447,
											"end": 27465,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27447,
											"end": 27465,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27447,
											"end": 27465,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27447,
											"end": 27465,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27447,
											"end": 27520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 27447,
											"end": 27520,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27447,
											"end": 27520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27447,
											"end": 27520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 27447,
											"end": 27520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27447,
											"end": 27520,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 27447,
											"end": 27520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27446,
											"end": 27528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 27446,
											"end": 27528,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27446,
											"end": 27528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27446,
											"end": 27528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 27446,
											"end": 27528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27446,
											"end": 27528,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 27446,
											"end": 27528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27446,
											"end": 27547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 27446,
											"end": 27547,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27446,
											"end": 27547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27446,
											"end": 27547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 27446,
											"end": 27547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27446,
											"end": 27547,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 27446,
											"end": 27547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27439,
											"end": 27547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27439,
											"end": 27547,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27366,
											"end": 27554,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27366,
											"end": 27554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27366,
											"end": 27554,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27366,
											"end": 27554,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26625,
											"end": 26667,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 26625,
											"end": 26667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26625,
											"end": 26667,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 26625,
											"end": 26667,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26625,
											"end": 26667,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26625,
											"end": 26667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26625,
											"end": 26667,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26625,
											"end": 26667,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26625,
											"end": 26667,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26625,
											"end": 26667,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26625,
											"end": 26667,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26625,
											"end": 26667,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26625,
											"end": 26667,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26625,
											"end": 26667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26625,
											"end": 26667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26625,
											"end": 26667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26625,
											"end": 26667,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26625,
											"end": 26667,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26625,
											"end": 26667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27149,
											"end": 27240,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 27149,
											"end": 27240,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27195,
											"end": 27202,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27221,
											"end": 27233,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 27221,
											"end": 27233,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27214,
											"end": 27233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27214,
											"end": 27233,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27149,
											"end": 27240,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27149,
											"end": 27240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28240,
											"end": 28548,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 28240,
											"end": 28548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20985,
											"end": 21006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 20985,
											"end": 21004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 20985,
											"end": 21006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20985,
											"end": 21006,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 20985,
											"end": 21006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28307,
											"end": 28317,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27658,
											"end": 27674,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 27658,
											"end": 27672,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 27658,
											"end": 27674,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27658,
											"end": 27674,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 27658,
											"end": 27674,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27635,
											"end": 27655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 27635,
											"end": 27674,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27635,
											"end": 27674,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27635,
											"end": 27674,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27635,
											"end": 27674,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27701,
											"end": 27727,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 27701,
											"end": 27725,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 27701,
											"end": 27727,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27701,
											"end": 27727,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 27701,
											"end": 27727,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27684,
											"end": 27698,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 27684,
											"end": 27727,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27684,
											"end": 27727,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27684,
											"end": 27727,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27684,
											"end": 27727,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 27761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27741,
											"end": 27762,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27741,
											"end": 27762,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27741,
											"end": 27748,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27741,
											"end": 27762,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27741,
											"end": 27762,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27741,
											"end": 27762,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27737,
											"end": 27891,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 27737,
											"end": 27891,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27797,
											"end": 27812,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 27804,
											"end": 27811,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27797,
											"end": 27803,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 27797,
											"end": 27812,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27797,
											"end": 27812,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 27797,
											"end": 27812,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27778,
											"end": 27785,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 27778,
											"end": 27794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27786,
											"end": 27793,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27778,
											"end": 27794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27778,
											"end": 27794,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27778,
											"end": 27794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27778,
											"end": 27794,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27778,
											"end": 27794,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27778,
											"end": 27794,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27778,
											"end": 27794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27778,
											"end": 27794,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27778,
											"end": 27794,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27778,
											"end": 27794,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27778,
											"end": 27794,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27778,
											"end": 27794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27778,
											"end": 27794,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27778,
											"end": 27794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27778,
											"end": 27794,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27778,
											"end": 27812,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27778,
											"end": 27812,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27778,
											"end": 27812,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27778,
											"end": 27812,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27860,
											"end": 27880,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 27860,
											"end": 27880,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27826,
											"end": 27848,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 27826,
											"end": 27857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27849,
											"end": 27856,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27826,
											"end": 27857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27826,
											"end": 27857,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27826,
											"end": 27857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27826,
											"end": 27857,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27826,
											"end": 27857,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27826,
											"end": 27857,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27826,
											"end": 27857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27826,
											"end": 27857,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27826,
											"end": 27857,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27826,
											"end": 27857,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27826,
											"end": 27857,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27826,
											"end": 27857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27826,
											"end": 27857,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27826,
											"end": 27857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27826,
											"end": 27857,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27826,
											"end": 27880,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27826,
											"end": 27880,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27826,
											"end": 27880,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27826,
											"end": 27880,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27737,
											"end": 27891,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 27737,
											"end": 27891,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28346,
											"end": 28347,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28337,
											"end": 28343,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28337,
											"end": 28347,
											"modifierDepth": 2,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28329,
											"end": 28369,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 28329,
											"end": 28369,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28329,
											"end": 28369,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28329,
											"end": 28369,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28329,
											"end": 28369,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28329,
											"end": 28369,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28329,
											"end": 28369,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28329,
											"end": 28369,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28329,
											"end": 28369,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28329,
											"end": 28369,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 28329,
											"end": 28369,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28329,
											"end": 28369,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 28329,
											"end": 28369,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28329,
											"end": 28369,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 28329,
											"end": 28369,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28329,
											"end": 28369,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28329,
											"end": 28369,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28329,
											"end": 28369,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28329,
											"end": 28369,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28329,
											"end": 28369,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28329,
											"end": 28369,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28329,
											"end": 28369,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28329,
											"end": 28369,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 28329,
											"end": 28369,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28395,
											"end": 28401,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28379,
											"end": 28391,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 28379,
											"end": 28391,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28379,
											"end": 28401,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28379,
											"end": 28401,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28379,
											"end": 28401,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28379,
											"end": 28401,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 28379,
											"end": 28401,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28379,
											"end": 28401,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28379,
											"end": 28401,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 28379,
											"end": 28401,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28379,
											"end": 28401,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 28379,
											"end": 28401,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28379,
											"end": 28401,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28379,
											"end": 28401,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28379,
											"end": 28401,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28379,
											"end": 28401,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28379,
											"end": 28401,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28379,
											"end": 28401,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28379,
											"end": 28401,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28436,
											"end": 28442,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28411,
											"end": 28420,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 28411,
											"end": 28432,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28421,
											"end": 28431,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28411,
											"end": 28432,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28411,
											"end": 28432,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28411,
											"end": 28432,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28411,
											"end": 28432,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28411,
											"end": 28432,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28411,
											"end": 28432,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28411,
											"end": 28432,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28411,
											"end": 28432,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28411,
											"end": 28432,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28411,
											"end": 28432,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28411,
											"end": 28432,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28411,
											"end": 28432,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28411,
											"end": 28432,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28411,
											"end": 28432,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28411,
											"end": 28432,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28411,
											"end": 28432,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28411,
											"end": 28442,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28411,
											"end": 28442,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28411,
											"end": 28442,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28411,
											"end": 28442,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 28411,
											"end": 28442,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28411,
											"end": 28442,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28411,
											"end": 28442,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 28411,
											"end": 28442,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28411,
											"end": 28442,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 28411,
											"end": 28442,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28411,
											"end": 28442,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28411,
											"end": 28442,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28411,
											"end": 28442,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28411,
											"end": 28442,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28411,
											"end": 28442,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28411,
											"end": 28442,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28411,
											"end": 28442,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28452,
											"end": 28497,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 28478,
											"end": 28488,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28490,
											"end": 28496,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28452,
											"end": 28464,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28452,
											"end": 28464,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28452,
											"end": 28464,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28452,
											"end": 28464,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28452,
											"end": 28464,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28452,
											"end": 28464,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 28452,
											"end": 28464,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 28452,
											"end": 28464,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28452,
											"end": 28464,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 28452,
											"end": 28464,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28452,
											"end": 28464,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28452,
											"end": 28477,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28452,
											"end": 28477,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28452,
											"end": 28477,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 28452,
											"end": 28477,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28452,
											"end": 28497,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28452,
											"end": 28497,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28452,
											"end": 28497,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28452,
											"end": 28497,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 28452,
											"end": 28497,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28452,
											"end": 28497,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28452,
											"end": 28497,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 28452,
											"end": 28497,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28522,
											"end": 28532,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28512,
											"end": 28541,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28512,
											"end": 28541,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28512,
											"end": 28541,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5"
										},
										{
											"begin": 28534,
											"end": 28540,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28512,
											"end": 28541,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28512,
											"end": 28541,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28512,
											"end": 28541,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 28512,
											"end": 28541,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28512,
											"end": 28541,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28512,
											"end": 28541,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 28512,
											"end": 28541,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28512,
											"end": 28541,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 28512,
											"end": 28541,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28512,
											"end": 28541,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28512,
											"end": 28541,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28512,
											"end": 28541,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28512,
											"end": 28541,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28512,
											"end": 28541,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28512,
											"end": 28541,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28512,
											"end": 28541,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 21016,
											"end": 21017,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21027,
											"end": 21047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 21027,
											"end": 21045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 21027,
											"end": 21047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21027,
											"end": 21047,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 21027,
											"end": 21047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28240,
											"end": 28548,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28240,
											"end": 28548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26440,
											"end": 26479,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 26440,
											"end": 26479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26440,
											"end": 26479,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 26440,
											"end": 26479,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26440,
											"end": 26479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26440,
											"end": 26479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28892,
											"end": 29395,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 28892,
											"end": 29395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24362,
											"end": 24375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 24362,
											"end": 24373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 24362,
											"end": 24375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24362,
											"end": 24375,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 24362,
											"end": 24375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28976,
											"end": 28977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27658,
											"end": 27674,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 27658,
											"end": 27672,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 27658,
											"end": 27674,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27658,
											"end": 27674,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 27658,
											"end": 27674,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27635,
											"end": 27655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 27635,
											"end": 27674,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27635,
											"end": 27674,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27635,
											"end": 27674,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27635,
											"end": 27674,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27701,
											"end": 27727,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 27701,
											"end": 27725,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 27701,
											"end": 27727,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27701,
											"end": 27727,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 27701,
											"end": 27727,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27684,
											"end": 27698,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 27684,
											"end": 27727,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27684,
											"end": 27727,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27684,
											"end": 27727,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27684,
											"end": 27727,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 27761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27741,
											"end": 27762,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27741,
											"end": 27762,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27741,
											"end": 27748,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27741,
											"end": 27762,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27741,
											"end": 27762,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27741,
											"end": 27762,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27737,
											"end": 27891,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 27737,
											"end": 27891,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27797,
											"end": 27812,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 27804,
											"end": 27811,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27797,
											"end": 27803,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 27797,
											"end": 27812,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27797,
											"end": 27812,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 27797,
											"end": 27812,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27778,
											"end": 27785,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 27778,
											"end": 27794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27786,
											"end": 27793,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27778,
											"end": 27794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27778,
											"end": 27794,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27778,
											"end": 27794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27778,
											"end": 27794,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27778,
											"end": 27794,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27778,
											"end": 27794,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27778,
											"end": 27794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27778,
											"end": 27794,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27778,
											"end": 27794,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27778,
											"end": 27794,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27778,
											"end": 27794,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27778,
											"end": 27794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27778,
											"end": 27794,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27778,
											"end": 27794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27778,
											"end": 27794,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27778,
											"end": 27812,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27778,
											"end": 27812,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27778,
											"end": 27812,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27778,
											"end": 27812,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27860,
											"end": 27880,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 27860,
											"end": 27880,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27826,
											"end": 27848,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 27826,
											"end": 27857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27849,
											"end": 27856,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27826,
											"end": 27857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27826,
											"end": 27857,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27826,
											"end": 27857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27826,
											"end": 27857,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27826,
											"end": 27857,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27826,
											"end": 27857,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27826,
											"end": 27857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27826,
											"end": 27857,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27826,
											"end": 27857,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27826,
											"end": 27857,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27826,
											"end": 27857,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27826,
											"end": 27857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27826,
											"end": 27857,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27826,
											"end": 27857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27826,
											"end": 27857,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27826,
											"end": 27880,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27826,
											"end": 27880,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27826,
											"end": 27880,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27826,
											"end": 27880,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27737,
											"end": 27891,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 27737,
											"end": 27891,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29013,
											"end": 29025,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29013,
											"end": 29025,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28994,
											"end": 29009,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 28994,
											"end": 29025,
											"modifierDepth": 2,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28990,
											"end": 29289,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 28990,
											"end": 29289,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29063,
											"end": 29078,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 29063,
											"end": 29078,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29054,
											"end": 29060,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29054,
											"end": 29078,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 29054,
											"end": 29078,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29054,
											"end": 29078,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29054,
											"end": 29078,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 29054,
											"end": 29078,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29054,
											"end": 29078,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 29054,
											"end": 29078,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29041,
											"end": 29051,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 29041,
											"end": 29078,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29041,
											"end": 29078,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29041,
											"end": 29078,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29041,
											"end": 29078,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28990,
											"end": 29289,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 28990,
											"end": 29289,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28990,
											"end": 29289,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 28990,
											"end": 29289,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29109,
											"end": 29126,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29144,
											"end": 29159,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 29129,
											"end": 29141,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29129,
											"end": 29141,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29129,
											"end": 29159,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 29129,
											"end": 29159,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29129,
											"end": 29159,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29129,
											"end": 29159,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 29129,
											"end": 29159,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29129,
											"end": 29159,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 29129,
											"end": 29159,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29109,
											"end": 29159,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29109,
											"end": 29159,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29173,
											"end": 29189,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29204,
											"end": 29214,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 29204,
											"end": 29214,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29192,
											"end": 29201,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29192,
											"end": 29214,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 29192,
											"end": 29214,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29192,
											"end": 29214,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29192,
											"end": 29214,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 29192,
											"end": 29214,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29192,
											"end": 29214,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 29192,
											"end": 29214,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29173,
											"end": 29214,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29173,
											"end": 29214,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29263,
											"end": 29278,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 29263,
											"end": 29278,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29251,
											"end": 29259,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29248,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29259,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 29242,
											"end": 29259,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29259,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29259,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 29242,
											"end": 29259,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29259,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 29242,
											"end": 29259,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29241,
											"end": 29278,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 29241,
											"end": 29278,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29241,
											"end": 29278,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29241,
											"end": 29278,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 29241,
											"end": 29278,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29241,
											"end": 29278,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 29241,
											"end": 29278,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29228,
											"end": 29238,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 29228,
											"end": 29278,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29228,
											"end": 29278,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29228,
											"end": 29278,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29228,
											"end": 29278,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29095,
											"end": 29289,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29095,
											"end": 29289,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28990,
											"end": 29289,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 28990,
											"end": 29289,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29315,
											"end": 29330,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 29298,
											"end": 29312,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 29298,
											"end": 29330,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29298,
											"end": 29330,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29298,
											"end": 29330,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29298,
											"end": 29330,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29373,
											"end": 29388,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 29373,
											"end": 29388,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29355,
											"end": 29370,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 29355,
											"end": 29388,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 29355,
											"end": 29388,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29355,
											"end": 29388,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29355,
											"end": 29388,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 29355,
											"end": 29388,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29355,
											"end": 29388,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 29355,
											"end": 29388,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29340,
											"end": 29352,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29340,
											"end": 29388,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29340,
											"end": 29388,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29340,
											"end": 29388,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29340,
											"end": 29388,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24385,
											"end": 24386,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28892,
											"end": 29395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28892,
											"end": 29395,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27246,
											"end": 27356,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 27246,
											"end": 27356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27305,
											"end": 27312,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27331,
											"end": 27340,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 27331,
											"end": 27349,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27341,
											"end": 27348,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27331,
											"end": 27349,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27331,
											"end": 27349,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27331,
											"end": 27349,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27331,
											"end": 27349,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27331,
											"end": 27349,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27331,
											"end": 27349,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27331,
											"end": 27349,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27331,
											"end": 27349,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27331,
											"end": 27349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27331,
											"end": 27349,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27331,
											"end": 27349,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27331,
											"end": 27349,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27331,
											"end": 27349,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27331,
											"end": 27349,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27331,
											"end": 27349,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27331,
											"end": 27349,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27324,
											"end": 27349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27324,
											"end": 27349,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27246,
											"end": 27356,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27246,
											"end": 27356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27246,
											"end": 27356,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27246,
											"end": 27356,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25124,
											"end": 25225,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 25124,
											"end": 25225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24362,
											"end": 24375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 24362,
											"end": 24373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 24362,
											"end": 24375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24362,
											"end": 24375,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 24362,
											"end": 24375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25188,
											"end": 25218,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 25215,
											"end": 25216,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25188,
											"end": 25206,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 25188,
											"end": 25218,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25188,
											"end": 25218,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 25188,
											"end": 25218,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25124,
											"end": 25225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26241,
											"end": 26267,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 26241,
											"end": 26267,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26241,
											"end": 26267,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26241,
											"end": 26267,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26241,
											"end": 26267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26241,
											"end": 26267,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26241,
											"end": 26267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26241,
											"end": 26267,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 26241,
											"end": 26267,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 26241,
											"end": 26267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26241,
											"end": 26267,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 26241,
											"end": 26267,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26241,
											"end": 26267,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26241,
											"end": 26267,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26241,
											"end": 26267,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26409,
											"end": 26434,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 26409,
											"end": 26434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26409,
											"end": 26434,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 26409,
											"end": 26434,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26409,
											"end": 26434,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26409,
											"end": 26434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26562,
											"end": 26619,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 26562,
											"end": 26619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26562,
											"end": 26619,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 26562,
											"end": 26619,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26562,
											"end": 26619,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26562,
											"end": 26619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26562,
											"end": 26619,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26562,
											"end": 26619,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26562,
											"end": 26619,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26562,
											"end": 26619,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26562,
											"end": 26619,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26562,
											"end": 26619,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26562,
											"end": 26619,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26562,
											"end": 26619,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26562,
											"end": 26619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26562,
											"end": 26619,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26562,
											"end": 26619,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26562,
											"end": 26619,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26562,
											"end": 26619,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24469,
											"end": 24554,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 24469,
											"end": 24554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24515,
											"end": 24522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24541,
											"end": 24547,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24541,
											"end": 24547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24541,
											"end": 24547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24541,
											"end": 24547,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24541,
											"end": 24547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24541,
											"end": 24547,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24541,
											"end": 24547,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 24541,
											"end": 24547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24541,
											"end": 24547,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 24541,
											"end": 24547,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24541,
											"end": 24547,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24534,
											"end": 24547,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24469,
											"end": 24554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24469,
											"end": 24554,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27914,
											"end": 28234,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 27914,
											"end": 28234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20985,
											"end": 21006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 20985,
											"end": 21004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 20985,
											"end": 21006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20985,
											"end": 21006,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 20985,
											"end": 21006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27980,
											"end": 27990,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27658,
											"end": 27674,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 27658,
											"end": 27672,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 27658,
											"end": 27674,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27658,
											"end": 27674,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 27658,
											"end": 27674,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27635,
											"end": 27655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 27635,
											"end": 27674,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27635,
											"end": 27674,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27635,
											"end": 27674,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27635,
											"end": 27674,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27701,
											"end": 27727,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 27701,
											"end": 27725,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 27701,
											"end": 27727,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27701,
											"end": 27727,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 27701,
											"end": 27727,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27684,
											"end": 27698,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 27684,
											"end": 27727,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27684,
											"end": 27727,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27684,
											"end": 27727,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27684,
											"end": 27727,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 27761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27741,
											"end": 27762,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27741,
											"end": 27762,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27741,
											"end": 27748,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27741,
											"end": 27762,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27741,
											"end": 27762,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27741,
											"end": 27762,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27737,
											"end": 27891,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 27737,
											"end": 27891,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27797,
											"end": 27812,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 27804,
											"end": 27811,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27797,
											"end": 27803,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 27797,
											"end": 27812,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27797,
											"end": 27812,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 27797,
											"end": 27812,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27778,
											"end": 27785,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 27778,
											"end": 27794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27786,
											"end": 27793,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27778,
											"end": 27794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27778,
											"end": 27794,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27778,
											"end": 27794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27778,
											"end": 27794,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27778,
											"end": 27794,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27778,
											"end": 27794,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27778,
											"end": 27794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27778,
											"end": 27794,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27778,
											"end": 27794,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27778,
											"end": 27794,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27778,
											"end": 27794,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27778,
											"end": 27794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27778,
											"end": 27794,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27778,
											"end": 27794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27778,
											"end": 27794,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27778,
											"end": 27812,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27778,
											"end": 27812,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27778,
											"end": 27812,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27778,
											"end": 27812,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27860,
											"end": 27880,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 27860,
											"end": 27880,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27826,
											"end": 27848,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 27826,
											"end": 27857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27849,
											"end": 27856,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27826,
											"end": 27857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27826,
											"end": 27857,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27826,
											"end": 27857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27826,
											"end": 27857,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27826,
											"end": 27857,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27826,
											"end": 27857,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27826,
											"end": 27857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27826,
											"end": 27857,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27826,
											"end": 27857,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27826,
											"end": 27857,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27826,
											"end": 27857,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27826,
											"end": 27857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27826,
											"end": 27857,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27826,
											"end": 27857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27826,
											"end": 27857,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27826,
											"end": 27880,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27826,
											"end": 27880,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27826,
											"end": 27880,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27826,
											"end": 27880,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27737,
											"end": 27891,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 27737,
											"end": 27891,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28019,
											"end": 28020,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28010,
											"end": 28016,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28010,
											"end": 28020,
											"modifierDepth": 2,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28002,
											"end": 28039,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 28002,
											"end": 28039,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28002,
											"end": 28039,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28002,
											"end": 28039,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28002,
											"end": 28039,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28002,
											"end": 28039,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28002,
											"end": 28039,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28002,
											"end": 28039,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28002,
											"end": 28039,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28002,
											"end": 28039,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 28002,
											"end": 28039,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28002,
											"end": 28039,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 28002,
											"end": 28039,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28002,
											"end": 28039,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 28002,
											"end": 28039,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28002,
											"end": 28039,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28002,
											"end": 28039,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28002,
											"end": 28039,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28002,
											"end": 28039,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28002,
											"end": 28039,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28002,
											"end": 28039,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28002,
											"end": 28039,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28002,
											"end": 28039,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 28002,
											"end": 28039,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28065,
											"end": 28071,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28049,
											"end": 28061,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 28049,
											"end": 28061,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28049,
											"end": 28071,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28049,
											"end": 28071,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28049,
											"end": 28071,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28049,
											"end": 28071,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 28049,
											"end": 28071,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28049,
											"end": 28071,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28049,
											"end": 28071,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 28049,
											"end": 28071,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28049,
											"end": 28071,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 28049,
											"end": 28071,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28049,
											"end": 28071,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28049,
											"end": 28071,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28049,
											"end": 28071,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28049,
											"end": 28071,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28049,
											"end": 28071,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28049,
											"end": 28071,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28049,
											"end": 28071,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28106,
											"end": 28112,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28081,
											"end": 28090,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 28081,
											"end": 28102,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28091,
											"end": 28101,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28081,
											"end": 28102,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28081,
											"end": 28102,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28081,
											"end": 28102,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28081,
											"end": 28102,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28081,
											"end": 28102,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28081,
											"end": 28102,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28081,
											"end": 28102,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28081,
											"end": 28102,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28081,
											"end": 28102,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28081,
											"end": 28102,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28081,
											"end": 28102,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28081,
											"end": 28102,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28081,
											"end": 28102,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28081,
											"end": 28102,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28081,
											"end": 28102,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28081,
											"end": 28102,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28081,
											"end": 28112,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28081,
											"end": 28112,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28081,
											"end": 28112,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28081,
											"end": 28112,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 28081,
											"end": 28112,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28081,
											"end": 28112,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28081,
											"end": 28112,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 28081,
											"end": 28112,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28081,
											"end": 28112,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 28081,
											"end": 28112,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28081,
											"end": 28112,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28081,
											"end": 28112,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28081,
											"end": 28112,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28081,
											"end": 28112,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28081,
											"end": 28112,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28081,
											"end": 28112,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28081,
											"end": 28112,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28122,
											"end": 28186,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 28152,
											"end": 28162,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28172,
											"end": 28176,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 28179,
											"end": 28185,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28122,
											"end": 28134,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28122,
											"end": 28134,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28122,
											"end": 28134,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28122,
											"end": 28134,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28122,
											"end": 28134,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28122,
											"end": 28134,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 28122,
											"end": 28134,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 28122,
											"end": 28134,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28122,
											"end": 28134,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 28122,
											"end": 28134,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28122,
											"end": 28134,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28122,
											"end": 28151,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28122,
											"end": 28151,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28122,
											"end": 28151,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 28122,
											"end": 28151,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28122,
											"end": 28186,
											"modifierDepth": 2,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 28122,
											"end": 28186,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28122,
											"end": 28186,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28122,
											"end": 28186,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28122,
											"end": 28186,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 28122,
											"end": 28186,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28122,
											"end": 28186,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28122,
											"end": 28186,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 28122,
											"end": 28186,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28208,
											"end": 28218,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28201,
											"end": 28227,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28201,
											"end": 28227,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28201,
											"end": 28227,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
										},
										{
											"begin": 28220,
											"end": 28226,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28201,
											"end": 28227,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28201,
											"end": 28227,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28201,
											"end": 28227,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 28201,
											"end": 28227,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28201,
											"end": 28227,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28201,
											"end": 28227,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 28201,
											"end": 28227,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28201,
											"end": 28227,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 28201,
											"end": 28227,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28201,
											"end": 28227,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28201,
											"end": 28227,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28201,
											"end": 28227,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28201,
											"end": 28227,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28201,
											"end": 28227,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28201,
											"end": 28227,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28201,
											"end": 28227,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 21016,
											"end": 21017,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21027,
											"end": 21047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 21027,
											"end": 21045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 21027,
											"end": 21047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21027,
											"end": 21047,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 21027,
											"end": 21047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27914,
											"end": 28234,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27914,
											"end": 28234,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28554,
											"end": 28856,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 28554,
											"end": 28856,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20985,
											"end": 21006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 20985,
											"end": 21004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 20985,
											"end": 21006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20985,
											"end": 21006,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 20985,
											"end": 21006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28610,
											"end": 28620,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27658,
											"end": 27674,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 27658,
											"end": 27672,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 27658,
											"end": 27674,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27658,
											"end": 27674,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 27658,
											"end": 27674,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27635,
											"end": 27655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 27635,
											"end": 27674,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27635,
											"end": 27674,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27635,
											"end": 27674,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27635,
											"end": 27674,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27701,
											"end": 27727,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 27701,
											"end": 27725,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 27701,
											"end": 27727,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27701,
											"end": 27727,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 27701,
											"end": 27727,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27684,
											"end": 27698,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 27684,
											"end": 27727,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27684,
											"end": 27727,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27684,
											"end": 27727,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27684,
											"end": 27727,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27760,
											"end": 27761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27741,
											"end": 27762,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27741,
											"end": 27762,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27741,
											"end": 27748,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27741,
											"end": 27762,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27741,
											"end": 27762,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27741,
											"end": 27762,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27737,
											"end": 27891,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 27737,
											"end": 27891,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27797,
											"end": 27812,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 27804,
											"end": 27811,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27797,
											"end": 27803,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 27797,
											"end": 27812,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27797,
											"end": 27812,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 27797,
											"end": 27812,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27778,
											"end": 27785,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 27778,
											"end": 27794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27786,
											"end": 27793,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27778,
											"end": 27794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27778,
											"end": 27794,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27778,
											"end": 27794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27778,
											"end": 27794,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27778,
											"end": 27794,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27778,
											"end": 27794,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27778,
											"end": 27794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27778,
											"end": 27794,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27778,
											"end": 27794,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27778,
											"end": 27794,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27778,
											"end": 27794,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27778,
											"end": 27794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27778,
											"end": 27794,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27778,
											"end": 27794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27778,
											"end": 27794,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27778,
											"end": 27812,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27778,
											"end": 27812,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27778,
											"end": 27812,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27778,
											"end": 27812,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27860,
											"end": 27880,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 27860,
											"end": 27880,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27826,
											"end": 27848,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 27826,
											"end": 27857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27849,
											"end": 27856,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27826,
											"end": 27857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27826,
											"end": 27857,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27826,
											"end": 27857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27826,
											"end": 27857,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27826,
											"end": 27857,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27826,
											"end": 27857,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27826,
											"end": 27857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27826,
											"end": 27857,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27826,
											"end": 27857,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27826,
											"end": 27857,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27826,
											"end": 27857,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27826,
											"end": 27857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27826,
											"end": 27857,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27826,
											"end": 27857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27826,
											"end": 27857,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27826,
											"end": 27880,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27826,
											"end": 27880,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27826,
											"end": 27880,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27826,
											"end": 27880,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27737,
											"end": 27891,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 27737,
											"end": 27891,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28632,
											"end": 28646,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28649,
											"end": 28656,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 28649,
											"end": 28668,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28657,
											"end": 28667,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28649,
											"end": 28668,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28649,
											"end": 28668,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28649,
											"end": 28668,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28649,
											"end": 28668,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28649,
											"end": 28668,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28649,
											"end": 28668,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28649,
											"end": 28668,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28649,
											"end": 28668,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28649,
											"end": 28668,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28649,
											"end": 28668,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28649,
											"end": 28668,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28649,
											"end": 28668,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28649,
											"end": 28668,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28649,
											"end": 28668,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28649,
											"end": 28668,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28649,
											"end": 28668,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28632,
											"end": 28668,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28632,
											"end": 28668,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28691,
											"end": 28692,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28682,
											"end": 28688,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28682,
											"end": 28692,
											"modifierDepth": 2,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28678,
											"end": 28850,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28678,
											"end": 28850,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 28678,
											"end": 28850,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28730,
											"end": 28731,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28708,
											"end": 28715,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 28708,
											"end": 28727,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28716,
											"end": 28726,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28708,
											"end": 28727,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28708,
											"end": 28727,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28708,
											"end": 28727,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28708,
											"end": 28727,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28708,
											"end": 28727,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28708,
											"end": 28727,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28708,
											"end": 28727,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28708,
											"end": 28727,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28708,
											"end": 28727,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28708,
											"end": 28727,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28708,
											"end": 28727,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28708,
											"end": 28727,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28708,
											"end": 28727,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28708,
											"end": 28727,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28708,
											"end": 28727,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28708,
											"end": 28731,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28708,
											"end": 28731,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28708,
											"end": 28731,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28708,
											"end": 28731,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28745,
											"end": 28790,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 28771,
											"end": 28781,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28783,
											"end": 28789,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28745,
											"end": 28757,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 28745,
											"end": 28757,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28745,
											"end": 28757,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28745,
											"end": 28757,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28745,
											"end": 28757,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28745,
											"end": 28757,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 28745,
											"end": 28757,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 28745,
											"end": 28757,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28745,
											"end": 28757,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 28745,
											"end": 28757,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28745,
											"end": 28757,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28745,
											"end": 28770,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28745,
											"end": 28770,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28745,
											"end": 28770,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 28745,
											"end": 28770,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28745,
											"end": 28790,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28745,
											"end": 28790,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28745,
											"end": 28790,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28745,
											"end": 28790,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 28745,
											"end": 28790,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28745,
											"end": 28790,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28745,
											"end": 28790,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 28745,
											"end": 28790,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28820,
											"end": 28830,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28809,
											"end": 28839,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28809,
											"end": 28839,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28809,
											"end": 28839,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "E2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486"
										},
										{
											"begin": 28832,
											"end": 28838,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28809,
											"end": 28839,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28809,
											"end": 28839,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28809,
											"end": 28839,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 28809,
											"end": 28839,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28809,
											"end": 28839,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28809,
											"end": 28839,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 28809,
											"end": 28839,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28809,
											"end": 28839,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 28809,
											"end": 28839,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28809,
											"end": 28839,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28809,
											"end": 28839,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28809,
											"end": 28839,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28809,
											"end": 28839,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28809,
											"end": 28839,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28809,
											"end": 28839,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28809,
											"end": 28839,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 28678,
											"end": 28850,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 28678,
											"end": 28850,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28622,
											"end": 28856,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21016,
											"end": 21017,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21027,
											"end": 21047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 21027,
											"end": 21045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 21027,
											"end": 21047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21027,
											"end": 21047,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 21027,
											"end": 21047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28554,
											"end": 28856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26485,
											"end": 26514,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 26485,
											"end": 26514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26485,
											"end": 26514,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 26485,
											"end": 26514,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26485,
											"end": 26514,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26485,
											"end": 26514,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26304,
											"end": 26330,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 26304,
											"end": 26330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26304,
											"end": 26330,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 26304,
											"end": 26330,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26304,
											"end": 26330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26304,
											"end": 26330,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26304,
											"end": 26330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26304,
											"end": 26330,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 26304,
											"end": 26330,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 26304,
											"end": 26330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26304,
											"end": 26330,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 26304,
											"end": 26330,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26304,
											"end": 26330,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26304,
											"end": 26330,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26304,
											"end": 26330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26520,
											"end": 26555,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 26520,
											"end": 26555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26520,
											"end": 26555,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 26520,
											"end": 26555,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26520,
											"end": 26555,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26520,
											"end": 26555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26376,
											"end": 26403,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 26376,
											"end": 26403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26376,
											"end": 26403,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26376,
											"end": 26403,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26376,
											"end": 26403,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26376,
											"end": 26403,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25374,
											"end": 25589,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 25374,
											"end": 25589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24362,
											"end": 24375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 24362,
											"end": 24373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 24362,
											"end": 24375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24362,
											"end": 24375,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 24362,
											"end": 24375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25478,
											"end": 25479,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25458,
											"end": 25480,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25458,
											"end": 25480,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25458,
											"end": 25466,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25458,
											"end": 25480,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25458,
											"end": 25480,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25458,
											"end": 25480,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25454,
											"end": 25545,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 25454,
											"end": 25545,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25531,
											"end": 25532,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25503,
											"end": 25534,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25503,
											"end": 25534,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25503,
											"end": 25534,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25503,
											"end": 25534,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25503,
											"end": 25534,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25503,
											"end": 25534,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25503,
											"end": 25534,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25503,
											"end": 25534,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 25503,
											"end": 25534,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25503,
											"end": 25534,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25503,
											"end": 25534,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 25503,
											"end": 25534,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25503,
											"end": 25534,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 25503,
											"end": 25534,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25503,
											"end": 25534,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25503,
											"end": 25534,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25503,
											"end": 25534,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25503,
											"end": 25534,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25503,
											"end": 25534,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25503,
											"end": 25534,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25503,
											"end": 25534,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25454,
											"end": 25545,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 25454,
											"end": 25545,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25554,
											"end": 25582,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 25573,
											"end": 25581,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25554,
											"end": 25572,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 25554,
											"end": 25582,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25554,
											"end": 25582,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 25554,
											"end": 25582,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25374,
											"end": 25589,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25374,
											"end": 25589,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29717,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 29446,
											"end": 29717,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29495,
											"end": 29502,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29534,
											"end": 29535,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29518,
											"end": 29530,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 29518,
											"end": 29530,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29518,
											"end": 29535,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29514,
											"end": 29589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 29514,
											"end": 29589,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29558,
											"end": 29578,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 29558,
											"end": 29578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29551,
											"end": 29578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29551,
											"end": 29578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29551,
											"end": 29578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 29551,
											"end": 29578,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29514,
											"end": 29589,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 29514,
											"end": 29589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29698,
											"end": 29710,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 29698,
											"end": 29710,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29690,
											"end": 29694,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 29672,
											"end": 29686,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 29672,
											"end": 29686,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29643,
											"end": 29669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 29643,
											"end": 29667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 29643,
											"end": 29669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29643,
											"end": 29669,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 29643,
											"end": 29669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29643,
											"end": 29686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 29643,
											"end": 29686,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29643,
											"end": 29686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29643,
											"end": 29686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 29643,
											"end": 29686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29643,
											"end": 29686,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 29643,
											"end": 29686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29629,
											"end": 29639,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 29629,
											"end": 29639,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29629,
											"end": 29687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 29629,
											"end": 29687,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29629,
											"end": 29687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29629,
											"end": 29687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 29629,
											"end": 29687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29629,
											"end": 29687,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 29629,
											"end": 29687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29629,
											"end": 29694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 29629,
											"end": 29694,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29629,
											"end": 29694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29629,
											"end": 29694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 29629,
											"end": 29694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29629,
											"end": 29694,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 29629,
											"end": 29694,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29628,
											"end": 29710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 29628,
											"end": 29710,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29628,
											"end": 29710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29628,
											"end": 29710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 29628,
											"end": 29710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29628,
											"end": 29710,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 29628,
											"end": 29710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29605,
											"end": 29625,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 29605,
											"end": 29625,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29605,
											"end": 29710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 29605,
											"end": 29710,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29605,
											"end": 29710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29605,
											"end": 29710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 29605,
											"end": 29710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29605,
											"end": 29710,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 29605,
											"end": 29710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29598,
											"end": 29710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29598,
											"end": 29710,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29717,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 29446,
											"end": 29717,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29717,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29717,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21060,
											"end": 21367,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 21060,
											"end": 21367,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20384,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 21187,
											"end": 21194,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21187,
											"end": 21194,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21187,
											"end": 21205,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21183,
											"end": 21269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 21183,
											"end": 21269,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21228,
											"end": 21258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21228,
											"end": 21258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21228,
											"end": 21258,
											"name": "PUSH",
											"source": 0,
											"value": "3EE5AEB500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21228,
											"end": 21258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21228,
											"end": 21258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21228,
											"end": 21258,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21228,
											"end": 21258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21228,
											"end": 21258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21228,
											"end": 21258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21228,
											"end": 21258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21228,
											"end": 21258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21228,
											"end": 21258,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21228,
											"end": 21258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21228,
											"end": 21258,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21183,
											"end": 21269,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 21183,
											"end": 21269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20384,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 21343,
											"end": 21350,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21343,
											"end": 21360,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21343,
											"end": 21360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21343,
											"end": 21360,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21343,
											"end": 21360,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21060,
											"end": 21367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29723,
											"end": 29878,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 29723,
											"end": 29878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29782,
											"end": 29789,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29826,
											"end": 29838,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29826,
											"end": 29838,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29808,
											"end": 29823,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 29808,
											"end": 29838,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29808,
											"end": 29871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 29808,
											"end": 29871,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29859,
											"end": 29871,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29859,
											"end": 29871,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29808,
											"end": 29871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 29808,
											"end": 29871,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29808,
											"end": 29871,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 29808,
											"end": 29871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29841,
											"end": 29856,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 29808,
											"end": 29871,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 29808,
											"end": 29871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29801,
											"end": 29871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29801,
											"end": 29871,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29723,
											"end": 29878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29723,
											"end": 29878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9759,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 9599,
											"end": 9759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 9701,
											"end": 9706,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9723,
											"end": 9728,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9723,
											"end": 9737,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9723,
											"end": 9737,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9723,
											"end": 9737,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 9740,
											"end": 9742,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9744,
											"end": 9749,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9708,
											"end": 9751,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9708,
											"end": 9751,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9708,
											"end": 9751,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 9708,
											"end": 9751,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9708,
											"end": 9751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 9708,
											"end": 9751,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9708,
											"end": 9751,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9708,
											"end": 9751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9708,
											"end": 9751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 9708,
											"end": 9751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9708,
											"end": 9751,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 9708,
											"end": 9751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9708,
											"end": 9751,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9708,
											"end": 9751,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9708,
											"end": 9751,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9708,
											"end": 9751,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9708,
											"end": 9751,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9708,
											"end": 9751,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9708,
											"end": 9751,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9708,
											"end": 9751,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9708,
											"end": 9751,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9708,
											"end": 9751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9708,
											"end": 9751,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9708,
											"end": 9751,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9708,
											"end": 9751,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9708,
											"end": 9751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9708,
											"end": 9751,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 9708,
											"end": 9751,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 9708,
											"end": 9751,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9708,
											"end": 9751,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9708,
											"end": 9751,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9708,
											"end": 9751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9708,
											"end": 9751,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9708,
											"end": 9751,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9708,
											"end": 9751,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9708,
											"end": 9751,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9708,
											"end": 9751,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9708,
											"end": 9751,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9708,
											"end": 9751,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 9708,
											"end": 9751,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9708,
											"end": 9751,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9708,
											"end": 9751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9708,
											"end": 9751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9708,
											"end": 9751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9708,
											"end": 9751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 9681,
											"end": 9752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9681,
											"end": 9752,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 9681,
											"end": 9752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9759,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9759,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9759,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21373,
											"end": 21581,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 21373,
											"end": 21581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20342,
											"end": 20343,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21553,
											"end": 21560,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21553,
											"end": 21574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21553,
											"end": 21574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21553,
											"end": 21574,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21553,
											"end": 21574,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21373,
											"end": 21581,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24627,
											"end": 24789,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 24627,
											"end": 24789,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24697,
											"end": 24709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 24697,
											"end": 24707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 24697,
											"end": 24709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24697,
											"end": 24709,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 24697,
											"end": 24709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24686,
											"end": 24709,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24686,
											"end": 24709,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24686,
											"end": 24693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 24686,
											"end": 24691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 24686,
											"end": 24693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24686,
											"end": 24693,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 24686,
											"end": 24693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24686,
											"end": 24709,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24686,
											"end": 24709,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24686,
											"end": 24709,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24682,
											"end": 24783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 24682,
											"end": 24783,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24759,
											"end": 24771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 24759,
											"end": 24769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 24759,
											"end": 24771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24759,
											"end": 24771,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 24759,
											"end": 24771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24732,
											"end": 24772,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24732,
											"end": 24772,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24732,
											"end": 24772,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24732,
											"end": 24772,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24732,
											"end": 24772,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24732,
											"end": 24772,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24732,
											"end": 24772,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24732,
											"end": 24772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 24732,
											"end": 24772,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24732,
											"end": 24772,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24732,
											"end": 24772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 24732,
											"end": 24772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24732,
											"end": 24772,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 24732,
											"end": 24772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24732,
											"end": 24772,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24732,
											"end": 24772,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24732,
											"end": 24772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24732,
											"end": 24772,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24732,
											"end": 24772,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24732,
											"end": 24772,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24732,
											"end": 24772,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24682,
											"end": 24783,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 24682,
											"end": 24783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24627,
											"end": 24789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25743,
											"end": 25930,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 25743,
											"end": 25930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25816,
											"end": 25832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25835,
											"end": 25841,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25835,
											"end": 25841,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25835,
											"end": 25841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25835,
											"end": 25841,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25835,
											"end": 25841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25835,
											"end": 25841,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 25835,
											"end": 25841,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 25835,
											"end": 25841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25835,
											"end": 25841,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 25835,
											"end": 25841,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25835,
											"end": 25841,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25816,
											"end": 25841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25816,
											"end": 25841,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25860,
											"end": 25868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25851,
											"end": 25857,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25851,
											"end": 25857,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25851,
											"end": 25868,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 25851,
											"end": 25868,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 25851,
											"end": 25868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25851,
											"end": 25868,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25851,
											"end": 25868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25851,
											"end": 25868,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25851,
											"end": 25868,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25851,
											"end": 25868,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 25851,
											"end": 25868,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25851,
											"end": 25868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25851,
											"end": 25868,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25851,
											"end": 25868,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25851,
											"end": 25868,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25851,
											"end": 25868,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25851,
											"end": 25868,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 25851,
											"end": 25868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25851,
											"end": 25868,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25851,
											"end": 25868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25914,
											"end": 25922,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25883,
											"end": 25923,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25883,
											"end": 25923,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25904,
											"end": 25912,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25883,
											"end": 25923,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25883,
											"end": 25923,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25883,
											"end": 25923,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 25883,
											"end": 25923,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25883,
											"end": 25923,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25883,
											"end": 25923,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25883,
											"end": 25923,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25883,
											"end": 25923,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25883,
											"end": 25923,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25883,
											"end": 25923,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25883,
											"end": 25923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25883,
											"end": 25923,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 25806,
											"end": 25930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25743,
											"end": 25930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25743,
											"end": 25930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9998,
											"end": 10186,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 9998,
											"end": 10186,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 10118,
											"end": 10123,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10140,
											"end": 10145,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10140,
											"end": 10158,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10140,
											"end": 10158,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10140,
											"end": 10158,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 10161,
											"end": 10165,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10169,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10171,
											"end": 10176,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10178,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10125,
											"end": 10178,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10178,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 10125,
											"end": 10178,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 10125,
											"end": 10178,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10178,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10178,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 10125,
											"end": 10178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10178,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 10125,
											"end": 10178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10178,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10125,
											"end": 10178,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10178,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10125,
											"end": 10178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10178,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10178,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10178,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10178,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10178,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10125,
											"end": 10178,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10178,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10178,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10178,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 10125,
											"end": 10178,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10178,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10125,
											"end": 10178,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10178,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10178,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10178,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10125,
											"end": 10178,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10178,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10178,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10178,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10178,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10178,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10178,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10178,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10178,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10178,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 10098,
											"end": 10179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10179,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 10098,
											"end": 10179,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9998,
											"end": 10186,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9998,
											"end": 10186,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9998,
											"end": 10186,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9998,
											"end": 10186,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9998,
											"end": 10186,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16750,
											"end": 17470,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 16750,
											"end": 17470,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16830,
											"end": 16848,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16858,
											"end": 16877,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16996,
											"end": 17000,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16993,
											"end": 16994,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16986,
											"end": 16990,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16980,
											"end": 16991,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16973,
											"end": 16977,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16967,
											"end": 16971,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 16963,
											"end": 16978,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16960,
											"end": 16961,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16953,
											"end": 16958,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 16946,
											"end": 16951,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 16941,
											"end": 17001,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 17053,
											"end": 17060,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17043,
											"end": 17219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 17043,
											"end": 17219,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17097,
											"end": 17101,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17091,
											"end": 17102,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17142,
											"end": 17158,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17139,
											"end": 17140,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17134,
											"end": 17137,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17119,
											"end": 17159,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 17188,
											"end": 17204,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17186,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17176,
											"end": 17205,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17043,
											"end": 17219,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 17043,
											"end": 17219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17246,
											"end": 17262,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17232,
											"end": 17262,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17232,
											"end": 17262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17296,
											"end": 17297,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17290,
											"end": 17298,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17275,
											"end": 17298,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17275,
											"end": 17298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16912,
											"end": 17308,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17336,
											"end": 17337,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17322,
											"end": 17332,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17322,
											"end": 17337,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17322,
											"end": 17390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 17322,
											"end": 17390,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17389,
											"end": 17390,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17374,
											"end": 17385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17374,
											"end": 17390,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17374,
											"end": 17390,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17322,
											"end": 17390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 17322,
											"end": 17390,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17322,
											"end": 17390,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 17322,
											"end": 17390,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17370,
											"end": 17371,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17348,
											"end": 17353,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17340,
											"end": 17366,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17340,
											"end": 17366,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17340,
											"end": 17366,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 17340,
											"end": 17371,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17322,
											"end": 17390,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 17322,
											"end": 17390,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17318,
											"end": 17464,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17318,
											"end": 17464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 17318,
											"end": 17464,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17446,
											"end": 17451,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17413,
											"end": 17453,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17413,
											"end": 17453,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17413,
											"end": 17453,
											"name": "PUSH",
											"source": 0,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17413,
											"end": 17453,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17413,
											"end": 17453,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17413,
											"end": 17453,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17413,
											"end": 17453,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17413,
											"end": 17453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 17413,
											"end": 17453,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17413,
											"end": 17453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17413,
											"end": 17453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 17413,
											"end": 17453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17413,
											"end": 17453,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 17413,
											"end": 17453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17413,
											"end": 17453,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17413,
											"end": 17453,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17413,
											"end": 17453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17413,
											"end": 17453,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17413,
											"end": 17453,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17413,
											"end": 17453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17413,
											"end": 17453,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17318,
											"end": 17464,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 17318,
											"end": 17464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16820,
											"end": 17470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16820,
											"end": 17470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16750,
											"end": 17470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16750,
											"end": 17470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16750,
											"end": 17470,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22547,
											"end": 22643,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 22547,
											"end": 22643,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22600,
											"end": 22607,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22626,
											"end": 22636,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 22619,
											"end": 22636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22619,
											"end": 22636,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22547,
											"end": 22643,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22547,
											"end": 22643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 1527,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1383,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 1702,
											"end": 1707,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 1684,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1682,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1713,
											"end": 1725,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "tag",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1829,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1810,
											"end": 1830,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 1866,
											"end": 1871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 1839,
											"end": 1872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1739,
											"end": 1878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1943,
											"end": 1949,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 1994,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1971,
											"end": 1978,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1967,
											"end": 1990,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 1995,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 1998,
											"end": 2077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "tag",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2119,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 2188,
											"end": 2195,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2185,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2177,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2164,
											"end": 2186,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 2143,
											"end": 2196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2089,
											"end": 2206,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1884,
											"end": 2213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2250,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2273,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2285,
											"end": 2427,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 2285,
											"end": 2427,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2335,
											"end": 2344,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2368,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 2395,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 2413,
											"end": 2418,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 2395,
											"end": 2419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2419,
											"name": "tag",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 2395,
											"end": 2419,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 2386,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "tag",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2368,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 2368,
											"end": 2421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2368,
											"end": 2421,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 2368,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2355,
											"end": 2421,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2355,
											"end": 2421,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2285,
											"end": 2427,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2285,
											"end": 2427,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2285,
											"end": 2427,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2285,
											"end": 2427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2559,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 2433,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2492,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2516,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 2547,
											"end": 2552,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2516,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 2516,
											"end": 2553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2516,
											"end": 2553,
											"name": "tag",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 2516,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2553,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2553,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2559,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2559,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2559,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2704,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 2565,
											"end": 2704,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2637,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2661,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 2692,
											"end": 2697,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2661,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 2661,
											"end": 2698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2661,
											"end": 2698,
											"name": "tag",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 2661,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2648,
											"end": 2698,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2648,
											"end": 2698,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2704,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2704,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2704,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2710,
											"end": 2867,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 2710,
											"end": 2867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2810,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 2854,
											"end": 2859,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2810,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 2810,
											"end": 2860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2810,
											"end": 2860,
											"name": "tag",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 2810,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2805,
											"end": 2808,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2798,
											"end": 2861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2710,
											"end": 2867,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2710,
											"end": 2867,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2710,
											"end": 2867,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2873,
											"end": 3121,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2873,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2979,
											"end": 2983,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3017,
											"end": 3019,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3006,
											"end": 3015,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3020,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2994,
											"end": 3020,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2994,
											"end": 3020,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3030,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 3111,
											"end": 3112,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3100,
											"end": 3109,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3096,
											"end": 3113,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3087,
											"end": 3093,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3030,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 3030,
											"end": 3114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3030,
											"end": 3114,
											"name": "tag",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 3030,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2873,
											"end": 3121,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2873,
											"end": 3121,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2873,
											"end": 3121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2873,
											"end": 3121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2873,
											"end": 3121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3245,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 3127,
											"end": 3245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3214,
											"end": 3238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 3232,
											"end": 3237,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3214,
											"end": 3238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 3214,
											"end": 3238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3214,
											"end": 3238,
											"name": "tag",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 3214,
											"end": 3238,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3209,
											"end": 3212,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3202,
											"end": 3239,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3251,
											"end": 3473,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 3251,
											"end": 3473,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3344,
											"end": 3348,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3382,
											"end": 3384,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3371,
											"end": 3380,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3385,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3385,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3466,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 3463,
											"end": 3464,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3452,
											"end": 3461,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3448,
											"end": 3465,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3445,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3466,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 3395,
											"end": 3466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3466,
											"name": "tag",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 3395,
											"end": 3466,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3251,
											"end": 3473,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3251,
											"end": 3473,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3251,
											"end": 3473,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3251,
											"end": 3473,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3251,
											"end": 3473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3479,
											"end": 3659,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 3479,
											"end": 3659,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3527,
											"end": 3604,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3524,
											"end": 3525,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3517,
											"end": 3605,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3624,
											"end": 3628,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3621,
											"end": 3622,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3614,
											"end": 3629,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3648,
											"end": 3652,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3645,
											"end": 3646,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3653,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3665,
											"end": 3859,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 3665,
											"end": 3859,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3705,
											"end": 3709,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3725,
											"end": 3745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 3743,
											"end": 3744,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3725,
											"end": 3745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 3725,
											"end": 3745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3725,
											"end": 3745,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 3725,
											"end": 3745,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3720,
											"end": 3745,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3720,
											"end": 3745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3759,
											"end": 3779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 3777,
											"end": 3778,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3759,
											"end": 3779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 3759,
											"end": 3779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3759,
											"end": 3779,
											"name": "tag",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 3759,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3754,
											"end": 3779,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3754,
											"end": 3779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3803,
											"end": 3804,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3801,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3796,
											"end": 3805,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3788,
											"end": 3805,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3788,
											"end": 3805,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3827,
											"end": 3828,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3821,
											"end": 3825,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3829,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3852,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 3815,
											"end": 3852,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3832,
											"end": 3850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 3832,
											"end": 3850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 3832,
											"end": 3850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3832,
											"end": 3850,
											"name": "tag",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 3832,
											"end": 3850,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3852,
											"name": "tag",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 3815,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3665,
											"end": 3859,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3665,
											"end": 3859,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3665,
											"end": 3859,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3665,
											"end": 3859,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3665,
											"end": 3859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3865,
											"end": 4275,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 3865,
											"end": 4275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3905,
											"end": 3912,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3928,
											"end": 3948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 3946,
											"end": 3947,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 3948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 3928,
											"end": 3948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 3948,
											"name": "tag",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 3928,
											"end": 3948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3948,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3948,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3962,
											"end": 3982,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 3980,
											"end": 3981,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3962,
											"end": 3982,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 3962,
											"end": 3982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3962,
											"end": 3982,
											"name": "tag",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 3962,
											"end": 3982,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3957,
											"end": 3982,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3957,
											"end": 3982,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4017,
											"end": 4018,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4015,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4010,
											"end": 4019,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4069,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 4057,
											"end": 4068,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4069,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 4039,
											"end": 4069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4069,
											"name": "tag",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 4039,
											"end": 4069,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4028,
											"end": 4069,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4028,
											"end": 4069,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4218,
											"end": 4219,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4209,
											"end": 4216,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4205,
											"end": 4220,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4203,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4199,
											"end": 4221,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4179,
											"end": 4180,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4172,
											"end": 4181,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4152,
											"end": 4235,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4129,
											"end": 4268,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 4129,
											"end": 4268,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4248,
											"end": 4266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 4248,
											"end": 4266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 4248,
											"end": 4266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4248,
											"end": 4266,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 4248,
											"end": 4266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4129,
											"end": 4268,
											"name": "tag",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 4129,
											"end": 4268,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3913,
											"end": 4275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3865,
											"end": 4275,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3865,
											"end": 4275,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3865,
											"end": 4275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3865,
											"end": 4275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3865,
											"end": 4275,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4281,
											"end": 4461,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 4281,
											"end": 4461,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4329,
											"end": 4406,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4326,
											"end": 4327,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4319,
											"end": 4407,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4426,
											"end": 4430,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 4423,
											"end": 4424,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4416,
											"end": 4431,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4450,
											"end": 4454,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4447,
											"end": 4448,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4440,
											"end": 4455,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4467,
											"end": 4652,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 4467,
											"end": 4652,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4507,
											"end": 4508,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4524,
											"end": 4544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 4542,
											"end": 4543,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4524,
											"end": 4544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 4524,
											"end": 4544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4524,
											"end": 4544,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 4524,
											"end": 4544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4519,
											"end": 4544,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4519,
											"end": 4544,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4558,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 4576,
											"end": 4577,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4558,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 4558,
											"end": 4578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4558,
											"end": 4578,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 4558,
											"end": 4578,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4553,
											"end": 4578,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4553,
											"end": 4578,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4597,
											"end": 4598,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4587,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 4587,
											"end": 4622,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4602,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 4602,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 4602,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4602,
											"end": 4620,
											"name": "tag",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 4602,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4587,
											"end": 4622,
											"name": "tag",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 4587,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4644,
											"end": 4645,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4641,
											"end": 4642,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4637,
											"end": 4646,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4632,
											"end": 4646,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4632,
											"end": 4646,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4467,
											"end": 4652,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4467,
											"end": 4652,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4467,
											"end": 4652,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4467,
											"end": 4652,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4467,
											"end": 4652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4658,
											"end": 4849,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 4658,
											"end": 4849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4701,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4717,
											"end": 4737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 4735,
											"end": 4736,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 4717,
											"end": 4737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4737,
											"name": "tag",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 4717,
											"end": 4737,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4712,
											"end": 4737,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4712,
											"end": 4737,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4751,
											"end": 4771,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 4769,
											"end": 4770,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4751,
											"end": 4771,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 4751,
											"end": 4771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4751,
											"end": 4771,
											"name": "tag",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 4751,
											"end": 4771,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4771,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4794,
											"end": 4795,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4791,
											"end": 4792,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4796,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4780,
											"end": 4796,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4780,
											"end": 4796,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4815,
											"end": 4818,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4812,
											"end": 4813,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4809,
											"end": 4819,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4806,
											"end": 4842,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4806,
											"end": 4842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 4806,
											"end": 4842,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4822,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 4822,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 4822,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4822,
											"end": 4840,
											"name": "tag",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 4822,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4806,
											"end": 4842,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 4806,
											"end": 4842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4658,
											"end": 4849,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4658,
											"end": 4849,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4658,
											"end": 4849,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4658,
											"end": 4849,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4658,
											"end": 4849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 5024,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 4855,
											"end": 5024,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4939,
											"end": 4950,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4973,
											"end": 4979,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4968,
											"end": 4971,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4961,
											"end": 4980,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5017,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5008,
											"end": 5011,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5004,
											"end": 5018,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4989,
											"end": 5018,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4989,
											"end": 5018,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 5024,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 5024,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 5024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 5024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 5024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5197,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 5030,
											"end": 5197,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5170,
											"end": 5189,
											"name": "PUSH",
											"source": 1,
											"value": "43616E6E6F742077697468647261772030000000000000000000000000000000"
										},
										{
											"begin": 5166,
											"end": 5167,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5158,
											"end": 5164,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5154,
											"end": 5168,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5147,
											"end": 5190,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5197,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5569,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 5203,
											"end": 5569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5345,
											"end": 5348,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5366,
											"end": 5433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 5430,
											"end": 5432,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 5425,
											"end": 5428,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5366,
											"end": 5433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 5366,
											"end": 5433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5366,
											"end": 5433,
											"name": "tag",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 5366,
											"end": 5433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5359,
											"end": 5433,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5359,
											"end": 5433,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5442,
											"end": 5535,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 5531,
											"end": 5534,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5442,
											"end": 5535,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 5442,
											"end": 5535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5442,
											"end": 5535,
											"name": "tag",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 5442,
											"end": 5535,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5560,
											"end": 5562,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5555,
											"end": 5558,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5551,
											"end": 5563,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5544,
											"end": 5563,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5544,
											"end": 5563,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5569,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5569,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5569,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5575,
											"end": 5994,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 5575,
											"end": 5994,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5741,
											"end": 5745,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5779,
											"end": 5781,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5768,
											"end": 5777,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5764,
											"end": 5782,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5756,
											"end": 5782,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5756,
											"end": 5782,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5828,
											"end": 5837,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5822,
											"end": 5826,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5818,
											"end": 5838,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5814,
											"end": 5815,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5803,
											"end": 5812,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5816,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5792,
											"end": 5839,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5856,
											"end": 5987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 5982,
											"end": 5986,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5856,
											"end": 5987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 5856,
											"end": 5987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5856,
											"end": 5987,
											"name": "tag",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 5856,
											"end": 5987,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5848,
											"end": 5987,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5848,
											"end": 5987,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5575,
											"end": 5994,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5575,
											"end": 5994,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5575,
											"end": 5994,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5575,
											"end": 5994,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6000,
											"end": 6164,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 6000,
											"end": 6164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6140,
											"end": 6156,
											"name": "PUSH",
											"source": 1,
											"value": "43616E6E6F74207374616B652030000000000000000000000000000000000000"
										},
										{
											"begin": 6136,
											"end": 6137,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6128,
											"end": 6134,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6124,
											"end": 6138,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6117,
											"end": 6157,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6000,
											"end": 6164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6000,
											"end": 6164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6170,
											"end": 6536,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 6170,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6312,
											"end": 6315,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6333,
											"end": 6400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 6397,
											"end": 6399,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 6392,
											"end": 6395,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6333,
											"end": 6400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 6333,
											"end": 6400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6333,
											"end": 6400,
											"name": "tag",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 6333,
											"end": 6400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6326,
											"end": 6400,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6326,
											"end": 6400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6409,
											"end": 6502,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 6498,
											"end": 6501,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6409,
											"end": 6502,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 6409,
											"end": 6502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6409,
											"end": 6502,
											"name": "tag",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 6409,
											"end": 6502,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6529,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6522,
											"end": 6525,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6518,
											"end": 6530,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6511,
											"end": 6530,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6511,
											"end": 6530,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6170,
											"end": 6536,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6170,
											"end": 6536,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6170,
											"end": 6536,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6170,
											"end": 6536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6542,
											"end": 6961,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 6542,
											"end": 6961,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6708,
											"end": 6712,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6746,
											"end": 6748,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6735,
											"end": 6744,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6731,
											"end": 6749,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6723,
											"end": 6749,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6723,
											"end": 6749,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6795,
											"end": 6804,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6789,
											"end": 6793,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6781,
											"end": 6782,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6770,
											"end": 6779,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6766,
											"end": 6783,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6759,
											"end": 6806,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6823,
											"end": 6954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 6949,
											"end": 6953,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6823,
											"end": 6954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 6823,
											"end": 6954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6823,
											"end": 6954,
											"name": "tag",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 6823,
											"end": 6954,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6815,
											"end": 6954,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6815,
											"end": 6954,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6542,
											"end": 6961,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6542,
											"end": 6961,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6542,
											"end": 6961,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6542,
											"end": 6961,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6967,
											"end": 7299,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 6967,
											"end": 7299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7088,
											"end": 7092,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7126,
											"end": 7128,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7115,
											"end": 7124,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7111,
											"end": 7129,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7103,
											"end": 7129,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7103,
											"end": 7129,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7139,
											"end": 7210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 7207,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7196,
											"end": 7205,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7192,
											"end": 7209,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7183,
											"end": 7189,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7139,
											"end": 7210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 7139,
											"end": 7210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7139,
											"end": 7210,
											"name": "tag",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 7139,
											"end": 7210,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7220,
											"end": 7292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 7288,
											"end": 7290,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7277,
											"end": 7286,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7273,
											"end": 7291,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7264,
											"end": 7270,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7220,
											"end": 7292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 7220,
											"end": 7292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7220,
											"end": 7292,
											"name": "tag",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 7220,
											"end": 7292,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6967,
											"end": 7299,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6967,
											"end": 7299,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6967,
											"end": 7299,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6967,
											"end": 7299,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6967,
											"end": 7299,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6967,
											"end": 7299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7305,
											"end": 7747,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 7305,
											"end": 7747,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7454,
											"end": 7458,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7492,
											"end": 7494,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7481,
											"end": 7490,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7477,
											"end": 7495,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7469,
											"end": 7495,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7469,
											"end": 7495,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7505,
											"end": 7576,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 7573,
											"end": 7574,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7562,
											"end": 7571,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7558,
											"end": 7575,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7549,
											"end": 7555,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7505,
											"end": 7576,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 7505,
											"end": 7576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7505,
											"end": 7576,
											"name": "tag",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 7505,
											"end": 7576,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7586,
											"end": 7658,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 7654,
											"end": 7656,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7643,
											"end": 7652,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7639,
											"end": 7657,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7630,
											"end": 7636,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7586,
											"end": 7658,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 7586,
											"end": 7658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7586,
											"end": 7658,
											"name": "tag",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 7586,
											"end": 7658,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7668,
											"end": 7740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 7736,
											"end": 7738,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7725,
											"end": 7734,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7721,
											"end": 7739,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7712,
											"end": 7718,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7668,
											"end": 7740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 7668,
											"end": 7740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7668,
											"end": 7740,
											"name": "tag",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 7668,
											"end": 7740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7305,
											"end": 7747,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 7305,
											"end": 7747,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7305,
											"end": 7747,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7305,
											"end": 7747,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7305,
											"end": 7747,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7305,
											"end": 7747,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7305,
											"end": 7747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contract/StakingRewards_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"claimReward()": "b88a802f",
							"earned(address)": "008cc262",
							"lastUpdateTime()": "c8f33c91",
							"notifyRewardAmount(uint256)": "3c6b16ab",
							"owner()": "8da5cb5b",
							"periodFinish()": "ebe2b12b",
							"renounceOwnership()": "715018a6",
							"rewardPerTokenStored()": "df136d65",
							"rewardRate()": "7b0a47ee",
							"rewards(address)": "0700037d",
							"rewardsDuration()": "386a9525",
							"rewardsToken()": "d1af0c7d",
							"stake(uint256)": "a694fc3a",
							"stakingToken()": "72f702f3",
							"totalSupply()": "18160ddd",
							"transferOwnership(address)": "f2fde38b",
							"userRewardPerTokenPaid(address)": "8b876347",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardsToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"RewardPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"earned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastUpdateTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"notifyRewardAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"periodFinish\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerTokenStored\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userRewardPerTokenPaid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Allows users to stake TradeFiToken (TFT) to earn rewards. Based on the Synthetix StakingRewards model.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"StakingRewards\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract/StakingRewards_flattened.sol\":\"StakingRewards\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract/StakingRewards_flattened.sol\":{\"keccak256\":\"0xd0f133ae5d93b35c54ef74d67dc07da43d5b53b9f0a349cea255cdf4ed8fb949\",\"urls\":[\"bzz-raw://c68f7b6a56582b50edb7d2fae04ca156afe6e53c4dc2b362c8e1f605d13b6665\",\"dweb:/ipfs/QmQ3fbiUenFpMTzKmEhr1qUB8DbQ2aTsau9k1kmP6Z2HJJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 636,
								"contract": "contract/StakingRewards_flattened.sol:StakingRewards",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 729,
								"contract": "contract/StakingRewards_flattened.sol:StakingRewards",
								"label": "_owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 881,
								"contract": "contract/StakingRewards_flattened.sol:StakingRewards",
								"label": "stakingToken",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)77"
							},
							{
								"astId": 884,
								"contract": "contract/StakingRewards_flattened.sol:StakingRewards",
								"label": "rewardsToken",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IERC20)77"
							},
							{
								"astId": 886,
								"contract": "contract/StakingRewards_flattened.sol:StakingRewards",
								"label": "periodFinish",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 888,
								"contract": "contract/StakingRewards_flattened.sol:StakingRewards",
								"label": "rewardRate",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 891,
								"contract": "contract/StakingRewards_flattened.sol:StakingRewards",
								"label": "rewardsDuration",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 893,
								"contract": "contract/StakingRewards_flattened.sol:StakingRewards",
								"label": "lastUpdateTime",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 895,
								"contract": "contract/StakingRewards_flattened.sol:StakingRewards",
								"label": "rewardPerTokenStored",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 899,
								"contract": "contract/StakingRewards_flattened.sol:StakingRewards",
								"label": "userRewardPerTokenPaid",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 903,
								"contract": "contract/StakingRewards_flattened.sol:StakingRewards",
								"label": "rewards",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 905,
								"contract": "contract/StakingRewards_flattened.sol:StakingRewards",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 909,
								"contract": "contract/StakingRewards_flattened.sol:StakingRewards",
								"label": "_balances",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)77": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contract/StakingRewards_flattened.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contract/StakingRewards_flattened.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contract/StakingRewards_flattened.sol": {
				"ast": {
					"absolutePath": "contract/StakingRewards_flattened.sol",
					"exportedSymbols": {
						"Context": [
							723
						],
						"IERC1363": [
							167
						],
						"IERC165": [
							89
						],
						"IERC20": [
							77
						],
						"Ownable": [
							868
						],
						"ReentrancyGuard": [
							694
						],
						"SafeERC20": [
							626
						],
						"StakingRewards": [
							1276
						]
					},
					"id": 1277,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "133:25:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "160:71:0",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "242:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "255:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "424:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "449:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "433:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "433:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "471:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "455:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "455:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "483:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "475:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "432:57:0"
									},
									"src": "418:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "496:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "655:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "680:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "664:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "664:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "703:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "687:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "720:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "712:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "712:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "663:63:0"
									},
									"src": "649:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "733:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "812:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "823:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "849:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "849:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "848:9:0"
									},
									"scope": 77,
									"src": "803:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "864:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "949:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "967:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "959:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "999:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "999:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "998:9:0"
									},
									"scope": 77,
									"src": "940:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "1014:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1241:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1258:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1250:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1250:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1270:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1262:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1262:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1249:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1295:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1295:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1294:6:0"
									},
									"scope": 77,
									"src": "1232:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1307:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1585:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1603:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1595:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1595:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1618:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1610:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1610:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1594:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1650:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1650:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1649:9:0"
									},
									"scope": 77,
									"src": "1576:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1665:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2346:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2362:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2354:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2354:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2379:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2371:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2371:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2353:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2404:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2404:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2403:6:0"
									},
									"scope": 77,
									"src": "2337:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2416:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2727:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2748:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2740:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2740:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2762:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2754:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2774:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2766:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2766:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2739:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2799:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2799:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2798:6:0"
									},
									"scope": 77,
									"src": "2718:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1277,
							"src": "232:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 78,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "2939:25:0"
						},
						{
							"id": 79,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "3117:25:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "3144:280:0",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC165",
							"nameLocation": "3435:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "3449:340:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 88,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "3803:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "3828:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3821:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 82,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3821:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3820:20:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3864:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 85,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3864:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3863:6:0"
									},
									"scope": 89,
									"src": "3794:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1277,
							"src": "3425:447:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 90,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "4006:25:0"
						},
						{
							"id": 91,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "4168:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 93,
										"name": "IERC20",
										"nameLocations": [
											"4576:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "4576:6:0"
									},
									"id": 94,
									"nodeType": "InheritanceSpecifier",
									"src": "4576:6:0"
								},
								{
									"baseName": {
										"id": 95,
										"name": "IERC165",
										"nameLocations": [
											"4584:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 89,
										"src": "4584:7:0"
									},
									"id": 96,
									"nodeType": "InheritanceSpecifier",
									"src": "4584:7:0"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 92,
								"nodeType": "StructuredDocumentation",
								"src": "4196:357:0",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 167,
							"linearizedBaseContracts": [
								167,
								89,
								77
							],
							"name": "IERC1363",
							"nameLocation": "4564:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 97,
										"nodeType": "StructuredDocumentation",
										"src": "5134:370:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 106,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "5518:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5542:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5534:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 98,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5534:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5554:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5546:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5546:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5533:27:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5579:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 103,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5579:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5578:6:0"
									},
									"scope": 167,
									"src": "5509:76:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5591:453:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 118,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "6058:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6082:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "6074:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6074:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6094:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "6086:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6086:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6116:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "6101:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 112,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6101:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6073:48:0"
									},
									"returnParameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "6140:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 115,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6140:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6139:6:0"
									},
									"scope": 167,
									"src": "6049:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "6152:453:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 130,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "6619:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6647:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "6639:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6639:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6661:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "6653:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6653:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6673:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "6665:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6665:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6638:41:0"
									},
									"returnParameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "6698:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 127,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6698:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6697:6:0"
									},
									"scope": 167,
									"src": "6610:94:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "6710:536:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 144,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "7260:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7288:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "7280:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7280:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7302:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "7294:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7294:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7314:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "7306:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7306:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7336:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "7321:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 138,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7321:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7279:62:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "7360:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 141,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7360:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7359:6:0"
									},
									"scope": 167,
									"src": "7251:115:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 145,
										"nodeType": "StructuredDocumentation",
										"src": "7372:390:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 154,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "7776:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7799:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "7791:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7791:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7816:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "7808:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7808:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7790:32:0"
									},
									"returnParameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "7841:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 151,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7841:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7840:6:0"
									},
									"scope": 167,
									"src": "7767:80:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 155,
										"nodeType": "StructuredDocumentation",
										"src": "7853:478:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 166,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "8345:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8368:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "8360:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8360:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8385:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "8377:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8377:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8407:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "8392:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 160,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8392:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8359:53:0"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "8431:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 163,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8431:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8430:6:0"
									},
									"scope": 167,
									"src": "8336:101:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1277,
							"src": "4554:3885:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 168,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "8591:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 169,
								"nodeType": "StructuredDocumentation",
								"src": "8619:458:0",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 626,
							"linearizedBaseContracts": [
								626
							],
							"name": "SafeERC20",
							"nameLocation": "9086:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "9102:65:0",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 174,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "9178:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9211:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "9203:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9203:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9202:15:0"
									},
									"src": "9172:46:0"
								},
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "9224:71:0",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 183,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "9306:32:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9347:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "9339:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9339:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "9364:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "9356:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9356:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "9390:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "9382:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9382:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9338:70:0"
									},
									"src": "9300:109:0"
								},
								{
									"body": {
										"id": 206,
										"nodeType": "Block",
										"src": "9671:88:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 195,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 187,
															"src": "9701:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 198,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 187,
																		"src": "9723:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 199,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9729:8:0",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 44,
																	"src": "9723:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 200,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 189,
																			"src": "9740:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 201,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 191,
																			"src": "9744:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 202,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9739:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 196,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "9708:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 197,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "9712:10:0",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "9708:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9708:43:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 194,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "9681:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9681:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 205,
												"nodeType": "ExpressionStatement",
												"src": "9681:71:0"
											}
										]
									},
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "9415:179:0",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 207,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "9608:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9628:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "9621:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 186,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 185,
														"name": "IERC20",
														"nameLocations": [
															"9621:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "9621:6:0"
													},
													"referencedDeclaration": 77,
													"src": "9621:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9643:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "9635:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9635:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9655:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "9647:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9647:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9620:41:0"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9671:0:0"
									},
									"scope": 626,
									"src": "9599:160:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 233,
										"nodeType": "Block",
										"src": "10088:98:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 221,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 211,
															"src": "10118:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 224,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 211,
																		"src": "10140:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 225,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10146:12:0",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 76,
																	"src": "10140:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 226,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 213,
																			"src": "10161:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 227,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 215,
																			"src": "10167:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 228,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 217,
																			"src": "10171:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 229,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10160:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 222,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "10125:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 223,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "10129:10:0",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "10125:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10125:53:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 220,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "10098:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10098:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 232,
												"nodeType": "ExpressionStatement",
												"src": "10098:81:0"
											}
										]
									},
									"documentation": {
										"id": 208,
										"nodeType": "StructuredDocumentation",
										"src": "9765:228:0",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "10007:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "10031:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "10024:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 210,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 209,
														"name": "IERC20",
														"nameLocations": [
															"10024:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "10024:6:0"
													},
													"referencedDeclaration": 77,
													"src": "10024:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10046:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "10038:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10038:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10060:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "10052:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10052:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10072:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "10064:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10064:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10023:55:0"
									},
									"returnParameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10088:0:0"
									},
									"scope": 626,
									"src": "9998:188:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "10413:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 248,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 238,
															"src": "10454:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 251,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 238,
																		"src": "10476:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10482:8:0",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 44,
																	"src": "10476:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 253,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 240,
																			"src": "10493:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 254,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 242,
																			"src": "10497:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 255,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10492:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 249,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "10461:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 250,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "10465:10:0",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "10461:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10461:43:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 247,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 625,
														"src": "10430:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10430:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 246,
												"id": 258,
												"nodeType": "Return",
												"src": "10423:82:0"
											}
										]
									},
									"documentation": {
										"id": 235,
										"nodeType": "StructuredDocumentation",
										"src": "10192:126:0",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "10332:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "10355:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "10348:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 237,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 236,
														"name": "IERC20",
														"nameLocations": [
															"10348:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "10348:6:0"
													},
													"referencedDeclaration": 77,
													"src": "10348:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10370:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "10362:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10362:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10382:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "10374:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10374:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10347:41:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "10407:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10407:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10406:6:0"
									},
									"scope": 626,
									"src": "10323:189:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 288,
										"nodeType": "Block",
										"src": "10761:109:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 276,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "10802:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 279,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 264,
																		"src": "10824:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10830:12:0",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 76,
																	"src": "10824:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 281,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 266,
																			"src": "10845:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 282,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 268,
																			"src": "10851:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 283,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 270,
																			"src": "10855:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 284,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10844:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 277,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "10809:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 278,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "10813:10:0",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "10809:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10809:53:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 275,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 625,
														"src": "10778:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10778:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 274,
												"id": 287,
												"nodeType": "Return",
												"src": "10771:92:0"
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "10518:130:0",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 289,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "10662:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "10689:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "10682:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 263,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 262,
														"name": "IERC20",
														"nameLocations": [
															"10682:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "10682:6:0"
													},
													"referencedDeclaration": 77,
													"src": "10682:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10704:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "10696:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10696:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10718:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "10710:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10710:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10730:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "10722:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10722:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10681:55:0"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "10755:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 272,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10755:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10754:6:0"
									},
									"scope": 626,
									"src": "10653:217:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 319,
										"nodeType": "Block",
										"src": "11612:139:0",
										"statements": [
											{
												"assignments": [
													301
												],
												"declarations": [
													{
														"constant": false,
														"id": 301,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "11630:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 319,
														"src": "11622:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 300,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11622:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 310,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 306,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "11669:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$626",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$626",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 305,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11661:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 304,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11661:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11661:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 308,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "11676:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 302,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 293,
															"src": "11645:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 303,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11651:9:0",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 54,
														"src": "11645:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11645:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11622:62:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 312,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 293,
															"src": "11707:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 313,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "11714:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 314,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 301,
																"src": "11723:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 315,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 297,
																"src": "11738:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11723:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 311,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 410,
														"src": "11694:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11694:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 318,
												"nodeType": "ExpressionStatement",
												"src": "11694:50:0"
											}
										]
									},
									"documentation": {
										"id": 290,
										"nodeType": "StructuredDocumentation",
										"src": "10876:645:0",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 320,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "11535:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "11564:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "11557:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 292,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 291,
														"name": "IERC20",
														"nameLocations": [
															"11557:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "11557:6:0"
													},
													"referencedDeclaration": 77,
													"src": "11557:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11579:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "11571:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11571:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11596:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "11588:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11588:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11556:46:0"
									},
									"returnParameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11612:0:0"
									},
									"scope": 626,
									"src": "11526:225:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "12517:370:0",
										"statements": [
											{
												"id": 361,
												"nodeType": "UncheckedBlock",
												"src": "12527:354:0",
												"statements": [
													{
														"assignments": [
															332
														],
														"declarations": [
															{
																"constant": false,
																"id": 332,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "12559:16:0",
																"nodeType": "VariableDeclaration",
																"scope": 361,
																"src": "12551:24:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 331,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12551:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 341,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 337,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "12602:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$626",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$626",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 336,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12594:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 335,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "12594:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 338,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12594:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 339,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "12609:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 333,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 324,
																	"src": "12578:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 334,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12584:9:0",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 54,
																"src": "12578:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12578:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12551:66:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 342,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 332,
																"src": "12635:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 343,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 328,
																"src": "12654:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12635:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 352,
														"nodeType": "IfStatement",
														"src": "12631:160:0",
														"trueBody": {
															"id": 351,
															"nodeType": "Block",
															"src": "12673:118:0",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 346,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 326,
																				"src": "12731:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 347,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 332,
																				"src": "12740:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 348,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 328,
																				"src": "12758:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 345,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 183,
																			"src": "12698:32:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 349,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12698:78:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 350,
																	"nodeType": "RevertStatement",
																	"src": "12691:85:0"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 354,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 324,
																	"src": "12817:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 355,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "12824:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 358,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 356,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 332,
																		"src": "12833:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 357,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 328,
																		"src": "12852:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "12833:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 353,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 410,
																"src": "12804:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12804:66:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 360,
														"nodeType": "ExpressionStatement",
														"src": "12804:66:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 321,
										"nodeType": "StructuredDocumentation",
										"src": "11757:657:0",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "12428:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "12457:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "12450:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 323,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 322,
														"name": "IERC20",
														"nameLocations": [
															"12450:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "12450:6:0"
													},
													"referencedDeclaration": 77,
													"src": "12450:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "12472:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "12464:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12464:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "12489:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "12481:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12481:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12449:58:0"
									},
									"returnParameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12517:0:0"
									},
									"scope": 626,
									"src": "12419:468:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 409,
										"nodeType": "Block",
										"src": "13541:303:0",
										"statements": [
											{
												"assignments": [
													375
												],
												"declarations": [
													{
														"constant": false,
														"id": 375,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "13564:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 409,
														"src": "13551:25:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 374,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "13551:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 384,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 378,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 367,
																"src": "13594:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															"id": 379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13600:7:0",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 64,
															"src": "13594:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 380,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 369,
																	"src": "13610:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 381,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 371,
																	"src": "13619:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 382,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "13609:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 376,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "13579:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 377,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "13583:10:0",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "13579:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13579:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13551:75:0"
											},
											{
												"condition": {
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "13641:45:0",
													"subExpression": {
														"arguments": [
															{
																"id": 386,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 367,
																"src": "13666:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 387,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 375,
																"src": "13673:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 385,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "13642:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13642:44:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 408,
												"nodeType": "IfStatement",
												"src": "13637:201:0",
												"trueBody": {
													"id": 407,
													"nodeType": "Block",
													"src": "13688:150:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 391,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 367,
																		"src": "13722:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 394,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 367,
																					"src": "13744:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$77",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 395,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "13750:7:0",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 64,
																				"src": "13744:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 396,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 369,
																						"src": "13760:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 397,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13769:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 398,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "13759:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 392,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "13729:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 393,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "13733:10:0",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "13729:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 399,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13729:43:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 390,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 584,
																	"src": "13702:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 400,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13702:71:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 401,
															"nodeType": "ExpressionStatement",
															"src": "13702:71:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 403,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 367,
																		"src": "13807:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 404,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 375,
																		"src": "13814:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 402,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 584,
																	"src": "13787:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 405,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13787:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 406,
															"nodeType": "ExpressionStatement",
															"src": "13787:40:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "12893:566:0",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "13473:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "13493:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "13486:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 366,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 365,
														"name": "IERC20",
														"nameLocations": [
															"13486:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "13486:6:0"
													},
													"referencedDeclaration": 77,
													"src": "13486:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "13508:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "13500:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13500:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13525:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "13517:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13517:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13485:46:0"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13541:0:0"
									},
									"scope": 626,
									"src": "13464:380:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "14291:219:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 423,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 416,
																"src": "14305:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "14308:4:0",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "14305:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 425,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14313:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "14305:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 426,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14323:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14305:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 441,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "14391:39:0",
														"subExpression": {
															"arguments": [
																{
																	"id": 437,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 416,
																	"src": "14414:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 438,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "14418:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 439,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 420,
																	"src": "14425:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 435,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 414,
																	"src": "14392:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$167",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "14398:15:0",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 118,
																"src": "14392:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14392:38:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 450,
													"nodeType": "IfStatement",
													"src": "14387:117:0",
													"trueBody": {
														"id": 449,
														"nodeType": "Block",
														"src": "14432:72:0",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 445,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 414,
																					"src": "14486:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$167",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$167",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 444,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "14478:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 443,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "14478:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 446,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14478:14:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 442,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 174,
																		"src": "14453:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 447,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14453:40:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 448,
																"nodeType": "RevertStatement",
																"src": "14446:47:0"
															}
														]
													}
												},
												"id": 451,
												"nodeType": "IfStatement",
												"src": "14301:203:0",
												"trueBody": {
													"id": 434,
													"nodeType": "Block",
													"src": "14326:55:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 429,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 414,
																		"src": "14353:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$167",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 430,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 416,
																		"src": "14360:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 431,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 418,
																		"src": "14364:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$167",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 428,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 207,
																	"src": "14340:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14340:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 433,
															"nodeType": "ExpressionStatement",
															"src": "14340:30:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 411,
										"nodeType": "StructuredDocumentation",
										"src": "13850:333:0",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "14197:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "14229:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "14220:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$167",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 413,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 412,
														"name": "IERC1363",
														"nameLocations": [
															"14220:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "14220:8:0"
													},
													"referencedDeclaration": 167,
													"src": "14220:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$167",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14244:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "14236:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14236:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14256:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "14248:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14248:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14276:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "14263:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 419,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14263:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14219:62:0"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14291:0:0"
									},
									"scope": 626,
									"src": "14188:322:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 499,
										"nodeType": "Block",
										"src": "15029:239:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 468,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 461,
																"src": "15043:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15046:4:0",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "15043:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15051:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "15043:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 471,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15061:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15043:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 488,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "15139:49:0",
														"subExpression": {
															"arguments": [
																{
																	"id": 483,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 459,
																	"src": "15166:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 484,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 461,
																	"src": "15172:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 485,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 463,
																	"src": "15176:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 486,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 465,
																	"src": "15183:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 481,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 457,
																	"src": "15140:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$167",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 482,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "15146:19:0",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 144,
																"src": "15140:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15140:48:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 497,
													"nodeType": "IfStatement",
													"src": "15135:127:0",
													"trueBody": {
														"id": 496,
														"nodeType": "Block",
														"src": "15190:72:0",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 492,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 457,
																					"src": "15244:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$167",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$167",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 491,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15236:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 490,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15236:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 493,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15236:14:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 489,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 174,
																		"src": "15211:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15211:40:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 495,
																"nodeType": "RevertStatement",
																"src": "15204:47:0"
															}
														]
													}
												},
												"id": 498,
												"nodeType": "IfStatement",
												"src": "15039:223:0",
												"trueBody": {
													"id": 480,
													"nodeType": "Block",
													"src": "15064:65:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 474,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 457,
																		"src": "15095:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$167",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 475,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 459,
																		"src": "15102:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 476,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 461,
																		"src": "15108:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 477,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 463,
																		"src": "15112:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$167",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 473,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 234,
																	"src": "15078:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 478,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15078:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 479,
															"nodeType": "ExpressionStatement",
															"src": "15078:40:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 454,
										"nodeType": "StructuredDocumentation",
										"src": "14516:341:0",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "14871:26:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "14916:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "14907:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$167",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 456,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 455,
														"name": "IERC1363",
														"nameLocations": [
															"14907:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "14907:8:0"
													},
													"referencedDeclaration": 167,
													"src": "14907:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$167",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14939:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "14931:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14961:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "14953:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14953:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14981:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "14973:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14973:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15009:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "14996:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 464,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14996:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14897:122:0"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15029:0:0"
									},
									"scope": 626,
									"src": "14862:406:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 542,
										"nodeType": "Block",
										"src": "16035:218:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 513,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 506,
																"src": "16049:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "16052:4:0",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "16049:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "16057:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "16049:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 516,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16067:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "16049:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 531,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "16135:38:0",
														"subExpression": {
															"arguments": [
																{
																	"id": 527,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 506,
																	"src": "16157:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 528,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "16161:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 529,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 510,
																	"src": "16168:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 525,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 504,
																	"src": "16136:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$167",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 526,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "16142:14:0",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 166,
																"src": "16136:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16136:37:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 540,
													"nodeType": "IfStatement",
													"src": "16131:116:0",
													"trueBody": {
														"id": 539,
														"nodeType": "Block",
														"src": "16175:72:0",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 535,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 504,
																					"src": "16229:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$167",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$167",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 534,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "16221:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 533,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "16221:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 536,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16221:14:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 532,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 174,
																		"src": "16196:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16196:40:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 538,
																"nodeType": "RevertStatement",
																"src": "16189:47:0"
															}
														]
													}
												},
												"id": 541,
												"nodeType": "IfStatement",
												"src": "16045:202:0",
												"trueBody": {
													"id": 524,
													"nodeType": "Block",
													"src": "16070:55:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 519,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 504,
																		"src": "16097:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$167",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 520,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 506,
																		"src": "16104:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 521,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 508,
																		"src": "16108:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$167",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 518,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 410,
																	"src": "16084:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 522,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16084:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 523,
															"nodeType": "ExpressionStatement",
															"src": "16084:30:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 501,
										"nodeType": "StructuredDocumentation",
										"src": "15274:654:0",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "15942:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "15973:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "15964:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$167",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 503,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 502,
														"name": "IERC1363",
														"nameLocations": [
															"15964:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "15964:8:0"
													},
													"referencedDeclaration": 167,
													"src": "15964:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$167",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15988:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "15980:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15980:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16000:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "15992:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15992:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "16020:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "16007:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 509,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16007:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15963:62:0"
									},
									"returnParameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16035:0:0"
									},
									"scope": 626,
									"src": "15933:320:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 583,
										"nodeType": "Block",
										"src": "16820:650:0",
										"statements": [
											{
												"assignments": [
													553
												],
												"declarations": [
													{
														"constant": false,
														"id": 553,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "16838:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 583,
														"src": "16830:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 552,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16830:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 554,
												"nodeType": "VariableDeclarationStatement",
												"src": "16830:18:0"
											},
											{
												"assignments": [
													556
												],
												"declarations": [
													{
														"constant": false,
														"id": 556,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "16866:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 583,
														"src": "16858:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 555,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16858:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 557,
												"nodeType": "VariableDeclarationStatement",
												"src": "16858:19:0"
											},
											{
												"AST": {
													"nativeSrc": "16912:396:0",
													"nodeType": "YulBlock",
													"src": "16912:396:0",
													"statements": [
														{
															"nativeSrc": "16926:75:0",
															"nodeType": "YulVariableDeclaration",
															"src": "16926:75:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "16946:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "16946:3:0"
																		},
																		"nativeSrc": "16946:5:0",
																		"nodeType": "YulFunctionCall",
																		"src": "16946:5:0"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "16953:5:0",
																		"nodeType": "YulIdentifier",
																		"src": "16953:5:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16960:1:0",
																		"nodeType": "YulLiteral",
																		"src": "16960:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "16967:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "16967:4:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16973:4:0",
																				"nodeType": "YulLiteral",
																				"src": "16973:4:0",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16963:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "16963:3:0"
																		},
																		"nativeSrc": "16963:15:0",
																		"nodeType": "YulFunctionCall",
																		"src": "16963:15:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "16986:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "16986:4:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "16980:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "16980:5:0"
																		},
																		"nativeSrc": "16980:11:0",
																		"nodeType": "YulFunctionCall",
																		"src": "16980:11:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16993:1:0",
																		"nodeType": "YulLiteral",
																		"src": "16993:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16996:4:0",
																		"nodeType": "YulLiteral",
																		"src": "16996:4:0",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "16941:4:0",
																	"nodeType": "YulIdentifier",
																	"src": "16941:4:0"
																},
																"nativeSrc": "16941:60:0",
																"nodeType": "YulFunctionCall",
																"src": "16941:60:0"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "16930:7:0",
																	"nodeType": "YulTypedName",
																	"src": "16930:7:0",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17062:157:0",
																"nodeType": "YulBlock",
																"src": "17062:157:0",
																"statements": [
																	{
																		"nativeSrc": "17080:22:0",
																		"nodeType": "YulVariableDeclaration",
																		"src": "17080:22:0",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "17097:4:0",
																					"nodeType": "YulLiteral",
																					"src": "17097:4:0",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "17091:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "17091:5:0"
																			},
																			"nativeSrc": "17091:11:0",
																			"nodeType": "YulFunctionCall",
																			"src": "17091:11:0"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "17084:3:0",
																				"nodeType": "YulTypedName",
																				"src": "17084:3:0",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "17134:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "17134:3:0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "17139:1:0",
																					"nodeType": "YulLiteral",
																					"src": "17139:1:0",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "17142:14:0",
																						"nodeType": "YulIdentifier",
																						"src": "17142:14:0"
																					},
																					"nativeSrc": "17142:16:0",
																					"nodeType": "YulFunctionCall",
																					"src": "17142:16:0"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "17119:14:0",
																				"nodeType": "YulIdentifier",
																				"src": "17119:14:0"
																			},
																			"nativeSrc": "17119:40:0",
																			"nodeType": "YulFunctionCall",
																			"src": "17119:40:0"
																		},
																		"nativeSrc": "17119:40:0",
																		"nodeType": "YulExpressionStatement",
																		"src": "17119:40:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "17183:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "17183:3:0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "17188:14:0",
																						"nodeType": "YulIdentifier",
																						"src": "17188:14:0"
																					},
																					"nativeSrc": "17188:16:0",
																					"nodeType": "YulFunctionCall",
																					"src": "17188:16:0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "17176:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "17176:6:0"
																			},
																			"nativeSrc": "17176:29:0",
																			"nodeType": "YulFunctionCall",
																			"src": "17176:29:0"
																		},
																		"nativeSrc": "17176:29:0",
																		"nodeType": "YulExpressionStatement",
																		"src": "17176:29:0"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "17053:7:0",
																		"nodeType": "YulIdentifier",
																		"src": "17053:7:0"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "17046:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "17046:6:0"
																},
																"nativeSrc": "17046:15:0",
																"nodeType": "YulFunctionCall",
																"src": "17046:15:0"
															},
															"nativeSrc": "17043:176:0",
															"nodeType": "YulIf",
															"src": "17043:176:0"
														},
														{
															"nativeSrc": "17232:30:0",
															"nodeType": "YulAssignment",
															"src": "17232:30:0",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "17246:14:0",
																	"nodeType": "YulIdentifier",
																	"src": "17246:14:0"
																},
																"nativeSrc": "17246:16:0",
																"nodeType": "YulFunctionCall",
																"src": "17246:16:0"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "17232:10:0",
																	"nodeType": "YulIdentifier",
																	"src": "17232:10:0"
																}
															]
														},
														{
															"nativeSrc": "17275:23:0",
															"nodeType": "YulAssignment",
															"src": "17275:23:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17296:1:0",
																		"nodeType": "YulLiteral",
																		"src": "17296:1:0",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "17290:5:0",
																	"nodeType": "YulIdentifier",
																	"src": "17290:5:0"
																},
																"nativeSrc": "17290:8:0",
																"nodeType": "YulFunctionCall",
																"src": "17290:8:0"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "17275:11:0",
																	"nodeType": "YulIdentifier",
																	"src": "17275:11:0"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 549,
														"isOffset": false,
														"isSlot": false,
														"src": "16967:4:0",
														"valueSize": 1
													},
													{
														"declaration": 549,
														"isOffset": false,
														"isSlot": false,
														"src": "16986:4:0",
														"valueSize": 1
													},
													{
														"declaration": 553,
														"isOffset": false,
														"isSlot": false,
														"src": "17232:10:0",
														"valueSize": 1
													},
													{
														"declaration": 556,
														"isOffset": false,
														"isSlot": false,
														"src": "17275:11:0",
														"valueSize": 1
													},
													{
														"declaration": 547,
														"isOffset": false,
														"isSlot": false,
														"src": "16953:5:0",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 558,
												"nodeType": "InlineAssembly",
												"src": "16887:421:0"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 561,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 559,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 553,
															"src": "17322:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17336:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "17322:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 572,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 570,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "17374:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17389:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "17374:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "17322:68:0",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 569,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 564,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 547,
																			"src": "17348:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 563,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "17340:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 562,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "17340:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17340:14:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 566,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "17355:4:0",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "17340:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17360:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "17340:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 568,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17370:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "17340:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 582,
												"nodeType": "IfStatement",
												"src": "17318:146:0",
												"trueBody": {
													"id": 581,
													"nodeType": "Block",
													"src": "17392:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 577,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 547,
																				"src": "17446:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$77",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$77",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 576,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "17438:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 575,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "17438:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17438:14:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 574,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 174,
																	"src": "17413:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 579,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17413:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 580,
															"nodeType": "RevertStatement",
															"src": "17406:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 544,
										"nodeType": "StructuredDocumentation",
										"src": "16259:486:0",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 584,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "16759:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "16786:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "16779:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 546,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 545,
														"name": "IERC20",
														"nameLocations": [
															"16779:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "16779:6:0"
													},
													"referencedDeclaration": 77,
													"src": "16779:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "16806:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "16793:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 548,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16793:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16778:33:0"
									},
									"returnParameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16820:0:0"
									},
									"scope": 626,
									"src": "16750:720:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 624,
										"nodeType": "Block",
										"src": "18061:391:0",
										"statements": [
											{
												"assignments": [
													596
												],
												"declarations": [
													{
														"constant": false,
														"id": 596,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "18076:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 624,
														"src": "18071:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 595,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "18071:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 597,
												"nodeType": "VariableDeclarationStatement",
												"src": "18071:12:0"
											},
											{
												"assignments": [
													599
												],
												"declarations": [
													{
														"constant": false,
														"id": 599,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "18101:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 624,
														"src": "18093:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 598,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18093:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 600,
												"nodeType": "VariableDeclarationStatement",
												"src": "18093:18:0"
											},
											{
												"assignments": [
													602
												],
												"declarations": [
													{
														"constant": false,
														"id": 602,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "18129:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 624,
														"src": "18121:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 601,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18121:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 603,
												"nodeType": "VariableDeclarationStatement",
												"src": "18121:19:0"
											},
											{
												"AST": {
													"nativeSrc": "18175:174:0",
													"nodeType": "YulBlock",
													"src": "18175:174:0",
													"statements": [
														{
															"nativeSrc": "18189:71:0",
															"nodeType": "YulAssignment",
															"src": "18189:71:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "18205:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "18205:3:0"
																		},
																		"nativeSrc": "18205:5:0",
																		"nodeType": "YulFunctionCall",
																		"src": "18205:5:0"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "18212:5:0",
																		"nodeType": "YulIdentifier",
																		"src": "18212:5:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18219:1:0",
																		"nodeType": "YulLiteral",
																		"src": "18219:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "18226:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "18226:4:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18232:4:0",
																				"nodeType": "YulLiteral",
																				"src": "18232:4:0",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18222:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "18222:3:0"
																		},
																		"nativeSrc": "18222:15:0",
																		"nodeType": "YulFunctionCall",
																		"src": "18222:15:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "18245:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "18245:4:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "18239:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "18239:5:0"
																		},
																		"nativeSrc": "18239:11:0",
																		"nodeType": "YulFunctionCall",
																		"src": "18239:11:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18252:1:0",
																		"nodeType": "YulLiteral",
																		"src": "18252:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18255:4:0",
																		"nodeType": "YulLiteral",
																		"src": "18255:4:0",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "18200:4:0",
																	"nodeType": "YulIdentifier",
																	"src": "18200:4:0"
																},
																"nativeSrc": "18200:60:0",
																"nodeType": "YulFunctionCall",
																"src": "18200:60:0"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "18189:7:0",
																	"nodeType": "YulIdentifier",
																	"src": "18189:7:0"
																}
															]
														},
														{
															"nativeSrc": "18273:30:0",
															"nodeType": "YulAssignment",
															"src": "18273:30:0",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "18287:14:0",
																	"nodeType": "YulIdentifier",
																	"src": "18287:14:0"
																},
																"nativeSrc": "18287:16:0",
																"nodeType": "YulFunctionCall",
																"src": "18287:16:0"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "18273:10:0",
																	"nodeType": "YulIdentifier",
																	"src": "18273:10:0"
																}
															]
														},
														{
															"nativeSrc": "18316:23:0",
															"nodeType": "YulAssignment",
															"src": "18316:23:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18337:1:0",
																		"nodeType": "YulLiteral",
																		"src": "18337:1:0",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "18331:5:0",
																	"nodeType": "YulIdentifier",
																	"src": "18331:5:0"
																},
																"nativeSrc": "18331:8:0",
																"nodeType": "YulFunctionCall",
																"src": "18331:8:0"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "18316:11:0",
																	"nodeType": "YulIdentifier",
																	"src": "18316:11:0"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 590,
														"isOffset": false,
														"isSlot": false,
														"src": "18226:4:0",
														"valueSize": 1
													},
													{
														"declaration": 590,
														"isOffset": false,
														"isSlot": false,
														"src": "18245:4:0",
														"valueSize": 1
													},
													{
														"declaration": 599,
														"isOffset": false,
														"isSlot": false,
														"src": "18273:10:0",
														"valueSize": 1
													},
													{
														"declaration": 602,
														"isOffset": false,
														"isSlot": false,
														"src": "18316:11:0",
														"valueSize": 1
													},
													{
														"declaration": 596,
														"isOffset": false,
														"isSlot": false,
														"src": "18189:7:0",
														"valueSize": 1
													},
													{
														"declaration": 588,
														"isOffset": false,
														"isSlot": false,
														"src": "18212:5:0",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 604,
												"nodeType": "InlineAssembly",
												"src": "18150:199:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 605,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 596,
														"src": "18365:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 608,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 606,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 599,
																		"src": "18377:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 607,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18391:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "18377:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 619,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 617,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 602,
																		"src": "18428:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 618,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18443:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "18428:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 620,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "18377:67:0",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 616,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 611,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 588,
																						"src": "18403:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$77",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$77",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 610,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "18395:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 609,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "18395:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 612,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "18395:14:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 613,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "18410:4:0",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "18395:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 614,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "18415:6:0",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "18395:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 615,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18424:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "18395:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 621,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "18376:69:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "18365:80:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 594,
												"id": 623,
												"nodeType": "Return",
												"src": "18358:87:0"
											}
										]
									},
									"documentation": {
										"id": 585,
										"nodeType": "StructuredDocumentation",
										"src": "17476:491:0",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 625,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "17981:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "18012:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "18005:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 587,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 586,
														"name": "IERC20",
														"nameLocations": [
															"18005:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "18005:6:0"
													},
													"referencedDeclaration": 77,
													"src": "18005:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "18032:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "18019:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 589,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18019:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18004:33:0"
									},
									"returnParameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "18055:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 592,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18055:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18054:6:0"
									},
									"scope": 626,
									"src": "17972:480:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1277,
							"src": "9078:9376:0",
							"usedErrors": [
								174,
								183
							],
							"usedEvents": []
						},
						{
							"id": 627,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "18594:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 628,
								"nodeType": "StructuredDocumentation",
								"src": "18620:894:0",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 694,
							"linearizedBaseContracts": [
								694
							],
							"name": "ReentrancyGuard",
							"nameLocation": "19533:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 631,
									"mutability": "constant",
									"name": "NOT_ENTERED",
									"nameLocation": "20328:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 694,
									"src": "20303:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 629,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "20303:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 630,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "20342:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 634,
									"mutability": "constant",
									"name": "ENTERED",
									"nameLocation": "20374:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 694,
									"src": "20349:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 632,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "20349:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 633,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "20384:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 636,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "20408:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 694,
									"src": "20392:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 635,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "20392:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 637,
										"nodeType": "StructuredDocumentation",
										"src": "20422:52:0",
										"text": " @dev Unauthorized reentrant call."
									},
									"errorSelector": "3ee5aeb5",
									"id": 639,
									"name": "ReentrancyGuardReentrantCall",
									"nameLocation": "20485:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20513:2:0"
									},
									"src": "20479:37:0"
								},
								{
									"body": {
										"id": 646,
										"nodeType": "Block",
										"src": "20536:38:0",
										"statements": [
											{
												"expression": {
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 642,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 636,
														"src": "20546:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 643,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 631,
														"src": "20556:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20546:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 645,
												"nodeType": "ExpressionStatement",
												"src": "20546:21:0"
											}
										]
									},
									"id": 647,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20533:2:0"
									},
									"returnParameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20536:0:0"
									},
									"scope": 694,
									"src": "20522:52:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 657,
										"nodeType": "Block",
										"src": "20975:79:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 650,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 674,
														"src": "20985:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20985:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 652,
												"nodeType": "ExpressionStatement",
												"src": "20985:21:0"
											},
											{
												"id": 653,
												"nodeType": "PlaceholderStatement",
												"src": "21016:1:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 654,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 682,
														"src": "21027:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21027:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 656,
												"nodeType": "ExpressionStatement",
												"src": "21027:20:0"
											}
										]
									},
									"documentation": {
										"id": 648,
										"nodeType": "StructuredDocumentation",
										"src": "20580:366:0",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 658,
									"name": "nonReentrant",
									"nameLocation": "20960:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20972:2:0"
									},
									"src": "20951:103:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 673,
										"nodeType": "Block",
										"src": "21099:268:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 661,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 636,
														"src": "21187:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 662,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 634,
														"src": "21198:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21187:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 668,
												"nodeType": "IfStatement",
												"src": "21183:86:0",
												"trueBody": {
													"id": 667,
													"nodeType": "Block",
													"src": "21207:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 664,
																	"name": "ReentrancyGuardReentrantCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 639,
																	"src": "21228:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21228:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 666,
															"nodeType": "RevertStatement",
															"src": "21221:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 669,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 636,
														"src": "21343:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 670,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 634,
														"src": "21353:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21343:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 672,
												"nodeType": "ExpressionStatement",
												"src": "21343:17:0"
											}
										]
									},
									"id": 674,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "21069:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21088:2:0"
									},
									"returnParameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21099:0:0"
									},
									"scope": 694,
									"src": "21060:307:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 681,
										"nodeType": "Block",
										"src": "21411:170:0",
										"statements": [
											{
												"expression": {
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 677,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 636,
														"src": "21553:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 678,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 631,
														"src": "21563:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21553:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 680,
												"nodeType": "ExpressionStatement",
												"src": "21553:21:0"
											}
										]
									},
									"id": 682,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "21382:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21400:2:0"
									},
									"returnParameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21411:0:0"
									},
									"scope": 694,
									"src": "21373:208:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 692,
										"nodeType": "Block",
										"src": "21824:42:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 688,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 636,
														"src": "21841:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 689,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 634,
														"src": "21852:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21841:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 687,
												"id": 691,
												"nodeType": "Return",
												"src": "21834:25:0"
											}
										]
									},
									"documentation": {
										"id": 683,
										"nodeType": "StructuredDocumentation",
										"src": "21587:168:0",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 693,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "21769:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21792:2:0"
									},
									"returnParameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "21818:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 685,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "21818:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21817:6:0"
									},
									"scope": 694,
									"src": "21760:106:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1277,
							"src": "19515:2353:0",
							"usedErrors": [
								639
							],
							"usedEvents": []
						},
						{
							"id": 695,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "21992:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 696,
								"nodeType": "StructuredDocumentation",
								"src": "22018:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 723,
							"linearizedBaseContracts": [
								723
							],
							"name": "Context",
							"nameLocation": "22533:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 704,
										"nodeType": "Block",
										"src": "22609:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 701,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "22626:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "22630:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "22626:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 700,
												"id": 703,
												"nodeType": "Return",
												"src": "22619:17:0"
											}
										]
									},
									"id": 705,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "22556:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22566:2:0"
									},
									"returnParameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "22600:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22600:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22599:9:0"
									},
									"scope": 723,
									"src": "22547:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 713,
										"nodeType": "Block",
										"src": "22716:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 710,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "22733:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "22737:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "22733:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 709,
												"id": 712,
												"nodeType": "Return",
												"src": "22726:15:0"
											}
										]
									},
									"id": 714,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "22658:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22666:2:0"
									},
									"returnParameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "22700:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 707,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "22700:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22699:16:0"
									},
									"scope": 723,
									"src": "22649:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 721,
										"nodeType": "Block",
										"src": "22826:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "22843:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 718,
												"id": 720,
												"nodeType": "Return",
												"src": "22836:8:0"
											}
										]
									},
									"id": 722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "22763:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22783:2:0"
									},
									"returnParameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "22817:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22817:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22816:9:0"
									},
									"scope": 723,
									"src": "22754:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1277,
							"src": "22515:338:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 724,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "22979:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 726,
										"name": "Context",
										"nameLocations": [
											"23523:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 723,
										"src": "23523:7:0"
									},
									"id": 727,
									"nodeType": "InheritanceSpecifier",
									"src": "23523:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 725,
								"nodeType": "StructuredDocumentation",
								"src": "23006:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 868,
							"linearizedBaseContracts": [
								868,
								723
							],
							"name": "Ownable",
							"nameLocation": "23512:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 729,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "23553:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 868,
									"src": "23537:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 728,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "23537:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 730,
										"nodeType": "StructuredDocumentation",
										"src": "23566:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 734,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "23662:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "23697:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "23689:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23689:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23688:17:0"
									},
									"src": "23656:50:0"
								},
								{
									"documentation": {
										"id": 735,
										"nodeType": "StructuredDocumentation",
										"src": "23712:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 739,
									"name": "OwnableInvalidOwner",
									"nameLocation": "23805:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "23833:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "23825:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 736,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23825:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23824:15:0"
									},
									"src": "23799:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 745,
									"name": "OwnershipTransferred",
									"nameLocation": "23852:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "23889:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "23873:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 740,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23873:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 743,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "23920:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "23904:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 742,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23904:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23872:57:0"
									},
									"src": "23846:84:0"
								},
								{
									"body": {
										"id": 770,
										"nodeType": "Block",
										"src": "24090:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 751,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 748,
														"src": "24104:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 754,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24128:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 753,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24120:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 752,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "24120:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 755,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24120:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "24104:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 765,
												"nodeType": "IfStatement",
												"src": "24100:95:0",
												"trueBody": {
													"id": 764,
													"nodeType": "Block",
													"src": "24132:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 760,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24181:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 759,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "24173:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 758,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "24173:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 761,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "24173:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 757,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 739,
																	"src": "24153:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 762,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24153:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 763,
															"nodeType": "RevertStatement",
															"src": "24146:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 767,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "24223:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 766,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 867,
														"src": "24204:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24204:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 769,
												"nodeType": "ExpressionStatement",
												"src": "24204:32:0"
											}
										]
									},
									"documentation": {
										"id": 746,
										"nodeType": "StructuredDocumentation",
										"src": "23936:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 771,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "24076:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "24068:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 747,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24068:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24067:22:0"
									},
									"returnParameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24090:0:0"
									},
									"scope": 868,
									"src": "24056:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 778,
										"nodeType": "Block",
										"src": "24352:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 774,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "24362:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24362:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 776,
												"nodeType": "ExpressionStatement",
												"src": "24362:13:0"
											},
											{
												"id": 777,
												"nodeType": "PlaceholderStatement",
												"src": "24385:1:0"
											}
										]
									},
									"documentation": {
										"id": 772,
										"nodeType": "StructuredDocumentation",
										"src": "24249:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 779,
									"name": "onlyOwner",
									"nameLocation": "24340:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24349:2:0"
									},
									"src": "24331:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 787,
										"nodeType": "Block",
										"src": "24524:30:0",
										"statements": [
											{
												"expression": {
													"id": 785,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 729,
													"src": "24541:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 784,
												"id": 786,
												"nodeType": "Return",
												"src": "24534:13:0"
											}
										]
									},
									"documentation": {
										"id": 780,
										"nodeType": "StructuredDocumentation",
										"src": "24399:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 788,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "24478:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24483:2:0"
									},
									"returnParameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "24515:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24515:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24514:9:0"
									},
									"scope": 868,
									"src": "24469:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 804,
										"nodeType": "Block",
										"src": "24672:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 792,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "24686:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 793,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24686:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 794,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "24697:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 795,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24697:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "24686:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 803,
												"nodeType": "IfStatement",
												"src": "24682:101:0",
												"trueBody": {
													"id": 802,
													"nodeType": "Block",
													"src": "24711:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 798,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 705,
																			"src": "24759:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 799,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "24759:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 797,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 734,
																	"src": "24732:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 800,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24732:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 801,
															"nodeType": "RevertStatement",
															"src": "24725:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 789,
										"nodeType": "StructuredDocumentation",
										"src": "24560:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 805,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "24636:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24647:2:0"
									},
									"returnParameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24672:0:0"
									},
									"scope": 868,
									"src": "24627:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 818,
										"nodeType": "Block",
										"src": "25178:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 814,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25215:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 813,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "25207:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 812,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "25207:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25207:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 811,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 867,
														"src": "25188:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25188:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 817,
												"nodeType": "ExpressionStatement",
												"src": "25188:30:0"
											}
										]
									},
									"documentation": {
										"id": 806,
										"nodeType": "StructuredDocumentation",
										"src": "24795:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 819,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 809,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 808,
												"name": "onlyOwner",
												"nameLocations": [
													"25168:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 779,
												"src": "25168:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25168:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "25133:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25150:2:0"
									},
									"returnParameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25178:0:0"
									},
									"scope": 868,
									"src": "25124:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 846,
										"nodeType": "Block",
										"src": "25444:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 827,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 822,
														"src": "25458:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 830,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25478:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 829,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "25470:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 828,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "25470:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 831,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25470:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "25458:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 841,
												"nodeType": "IfStatement",
												"src": "25454:91:0",
												"trueBody": {
													"id": 840,
													"nodeType": "Block",
													"src": "25482:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 836,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25531:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 835,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "25523:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 834,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "25523:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 837,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "25523:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 833,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 739,
																	"src": "25503:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25503:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 839,
															"nodeType": "RevertStatement",
															"src": "25496:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 843,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 822,
															"src": "25573:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 842,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 867,
														"src": "25554:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25554:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 845,
												"nodeType": "ExpressionStatement",
												"src": "25554:28:0"
											}
										]
									},
									"documentation": {
										"id": 820,
										"nodeType": "StructuredDocumentation",
										"src": "25231:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 847,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 825,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 824,
												"name": "onlyOwner",
												"nameLocations": [
													"25434:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 779,
												"src": "25434:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25434:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "25383:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "25409:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "25401:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25401:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25400:18:0"
									},
									"returnParameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25444:0:0"
									},
									"scope": 868,
									"src": "25374:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 866,
										"nodeType": "Block",
										"src": "25806:124:0",
										"statements": [
											{
												"assignments": [
													854
												],
												"declarations": [
													{
														"constant": false,
														"id": 854,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "25824:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 866,
														"src": "25816:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 853,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "25816:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 856,
												"initialValue": {
													"id": 855,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 729,
													"src": "25835:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25816:25:0"
											},
											{
												"expression": {
													"id": 859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 857,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 729,
														"src": "25851:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 858,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "25860:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "25851:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 860,
												"nodeType": "ExpressionStatement",
												"src": "25851:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 862,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 854,
															"src": "25904:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 863,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 850,
															"src": "25914:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 861,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 745,
														"src": "25883:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25883:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 865,
												"nodeType": "EmitStatement",
												"src": "25878:45:0"
											}
										]
									},
									"documentation": {
										"id": 848,
										"nodeType": "StructuredDocumentation",
										"src": "25595:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 867,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "25752:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "25779:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 867,
												"src": "25771:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 849,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25771:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25770:18:0"
									},
									"returnParameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25806:0:0"
									},
									"scope": 868,
									"src": "25743:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1277,
							"src": "23494:2438:0",
							"usedErrors": [
								734,
								739
							],
							"usedEvents": [
								745
							]
						},
						{
							"id": 869,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "25973:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 871,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"26177:15:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 694,
										"src": "26177:15:0"
									},
									"id": 872,
									"nodeType": "InheritanceSpecifier",
									"src": "26177:15:0"
								},
								{
									"baseName": {
										"id": 873,
										"name": "Ownable",
										"nameLocations": [
											"26194:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 868,
										"src": "26194:7:0"
									},
									"id": 874,
									"nodeType": "InheritanceSpecifier",
									"src": "26194:7:0"
								}
							],
							"canonicalName": "StakingRewards",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 870,
								"nodeType": "StructuredDocumentation",
								"src": "26003:146:0",
								"text": " @title StakingRewards\n @dev Allows users to stake TradeFiToken (TFT) to earn rewards.\n Based on the Synthetix StakingRewards model."
							},
							"fullyImplemented": true,
							"id": 1276,
							"linearizedBaseContracts": [
								1276,
								868,
								723,
								694
							],
							"name": "StakingRewards",
							"nameLocation": "26159:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 878,
									"libraryName": {
										"id": 875,
										"name": "SafeERC20",
										"nameLocations": [
											"26214:9:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 626,
										"src": "26214:9:0"
									},
									"nodeType": "UsingForDirective",
									"src": "26208:27:0",
									"typeName": {
										"id": 877,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 876,
											"name": "IERC20",
											"nameLocations": [
												"26228:6:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "26228:6:0"
										},
										"referencedDeclaration": 77,
										"src": "26228:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "72f702f3",
									"id": 881,
									"mutability": "mutable",
									"name": "stakingToken",
									"nameLocation": "26255:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1276,
									"src": "26241:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 880,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 879,
											"name": "IERC20",
											"nameLocations": [
												"26241:6:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "26241:6:0"
										},
										"referencedDeclaration": 77,
										"src": "26241:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d1af0c7d",
									"id": 884,
									"mutability": "mutable",
									"name": "rewardsToken",
									"nameLocation": "26318:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1276,
									"src": "26304:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 883,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 882,
											"name": "IERC20",
											"nameLocations": [
												"26304:6:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "26304:6:0"
										},
										"referencedDeclaration": 77,
										"src": "26304:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ebe2b12b",
									"id": 886,
									"mutability": "mutable",
									"name": "periodFinish",
									"nameLocation": "26391:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1276,
									"src": "26376:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 885,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "26376:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7b0a47ee",
									"id": 888,
									"mutability": "mutable",
									"name": "rewardRate",
									"nameLocation": "26424:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 1276,
									"src": "26409:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 887,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "26409:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "386a9525",
									"id": 891,
									"mutability": "mutable",
									"name": "rewardsDuration",
									"nameLocation": "26455:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 1276,
									"src": "26440:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 889,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "26440:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "37",
										"id": 890,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "26473:6:0",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_604800_by_1",
											"typeString": "int_const 604800"
										},
										"value": "7"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c8f33c91",
									"id": 893,
									"mutability": "mutable",
									"name": "lastUpdateTime",
									"nameLocation": "26500:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 1276,
									"src": "26485:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 892,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "26485:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "df136d65",
									"id": 895,
									"mutability": "mutable",
									"name": "rewardPerTokenStored",
									"nameLocation": "26535:20:0",
									"nodeType": "VariableDeclaration",
									"scope": 1276,
									"src": "26520:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 894,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "26520:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8b876347",
									"id": 899,
									"mutability": "mutable",
									"name": "userRewardPerTokenPaid",
									"nameLocation": "26597:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 1276,
									"src": "26562:57:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 898,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 896,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "26570:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "26562:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 897,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "26581:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0700037d",
									"id": 903,
									"mutability": "mutable",
									"name": "rewards",
									"nameLocation": "26660:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1276,
									"src": "26625:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 902,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 900,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "26633:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "26625:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 901,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "26644:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 905,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "26690:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1276,
									"src": "26674:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 904,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "26674:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 909,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "26744:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1276,
									"src": "26708:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 908,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 906,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "26716:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "26708:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 907,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "26727:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d",
									"id": 915,
									"name": "Staked",
									"nameLocation": "26766:6:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 911,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "26789:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "26773:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 910,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 913,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "26803:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "26795:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 912,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26795:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26772:38:0"
									},
									"src": "26760:51:0"
								},
								{
									"anonymous": false,
									"eventSelector": "7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5",
									"id": 921,
									"name": "Withdrawn",
									"nameLocation": "26822:9:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "26848:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "26832:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 916,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26832:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 919,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "26862:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "26854:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 918,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26854:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26831:38:0"
									},
									"src": "26816:54:0"
								},
								{
									"anonymous": false,
									"eventSelector": "e2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486",
									"id": 927,
									"name": "RewardPaid",
									"nameLocation": "26881:10:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 923,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "26908:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "26892:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 922,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 925,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "26922:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "26914:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26914:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26891:38:0"
									},
									"src": "26875:55:0"
								},
								{
									"body": {
										"id": 950,
										"nodeType": "Block",
										"src": "27014:99:0",
										"statements": [
											{
												"expression": {
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 938,
														"name": "stakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 881,
														"src": "27024:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 940,
																"name": "_stakingToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 929,
																"src": "27046:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 939,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "27039:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 941,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27039:21:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"src": "27024:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"id": 943,
												"nodeType": "ExpressionStatement",
												"src": "27024:36:0"
											},
											{
												"expression": {
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 944,
														"name": "rewardsToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 884,
														"src": "27070:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 946,
																"name": "_rewardsToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 931,
																"src": "27092:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 945,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "27085:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 947,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27085:21:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"src": "27070:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"id": 949,
												"nodeType": "ExpressionStatement",
												"src": "27070:36:0"
											}
										]
									},
									"id": 951,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 934,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "27002:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "27006:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "27002:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 936,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 933,
												"name": "Ownable",
												"nameLocations": [
													"26994:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 868,
												"src": "26994:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "26994:19:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "_stakingToken",
												"nameLocation": "26956:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "26948:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 928,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26948:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "_rewardsToken",
												"nameLocation": "26979:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "26971:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 930,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26971:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26947:46:0"
									},
									"returnParameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27014:0:0"
									},
									"scope": 1276,
									"src": "26936:177:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 958,
										"nodeType": "Block",
										"src": "27204:36:0",
										"statements": [
											{
												"expression": {
													"id": 956,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 905,
													"src": "27221:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 955,
												"id": 957,
												"nodeType": "Return",
												"src": "27214:19:0"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 959,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "27158:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27169:2:0"
									},
									"returnParameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 959,
												"src": "27195:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27195:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27194:9:0"
									},
									"scope": 1276,
									"src": "27149:91:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 970,
										"nodeType": "Block",
										"src": "27314:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 966,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 909,
														"src": "27331:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 968,
													"indexExpression": {
														"id": 967,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "27341:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "27331:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 965,
												"id": 969,
												"nodeType": "Return",
												"src": "27324:25:0"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 971,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "27255:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "27273:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "27265:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27265:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27264:17:0"
									},
									"returnParameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "27305:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 963,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27305:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27304:9:0"
									},
									"scope": 1276,
									"src": "27246:110:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 997,
										"nodeType": "Block",
										"src": "27429:125:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 991,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 988,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 978,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 909,
																			"src": "27447:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 980,
																		"indexExpression": {
																			"id": 979,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 973,
																			"src": "27457:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "27447:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 986,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 981,
																						"name": "rewardPerToken",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1260,
																						"src": "27469:14:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																							"typeString": "function () view returns (uint256)"
																						}
																					},
																					"id": 982,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "27469:16:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"baseExpression": {
																						"id": 983,
																						"name": "userRewardPerTokenPaid",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 899,
																						"src": "27488:22:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																							"typeString": "mapping(address => uint256)"
																						}
																					},
																					"id": 985,
																					"indexExpression": {
																						"id": 984,
																						"name": "account",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 973,
																						"src": "27511:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "27488:31:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "27469:50:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 987,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "27468:52:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "27447:73:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 989,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "27446:75:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "31653138",
															"id": 990,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27524:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"value": "1e18"
														},
														"src": "27446:82:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"baseExpression": {
															"id": 992,
															"name": "rewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "27531:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 994,
														"indexExpression": {
															"id": 993,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 973,
															"src": "27539:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "27531:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27446:101:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 977,
												"id": 996,
												"nodeType": "Return",
												"src": "27439:108:0"
											}
										]
									},
									"functionSelector": "008cc262",
									"id": 998,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "earned",
									"nameLocation": "27375:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "27390:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "27382:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 972,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27382:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27381:17:0"
									},
									"returnParameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "27420:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27420:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27419:9:0"
									},
									"scope": 1276,
									"src": "27366:188:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1035,
										"nodeType": "Block",
										"src": "27625:283:0",
										"statements": [
											{
												"expression": {
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1002,
														"name": "rewardPerTokenStored",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 895,
														"src": "27635:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1003,
															"name": "rewardPerToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1260,
															"src": "27658:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1004,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27658:16:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27635:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1006,
												"nodeType": "ExpressionStatement",
												"src": "27635:39:0"
											},
											{
												"expression": {
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1007,
														"name": "lastUpdateTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 893,
														"src": "27684:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1008,
															"name": "lastTimeRewardApplicable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1275,
															"src": "27701:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1009,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27701:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27684:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1011,
												"nodeType": "ExpressionStatement",
												"src": "27684:43:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1012,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1000,
														"src": "27741:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1015,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "27760:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1014,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "27752:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1013,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "27752:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1016,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27752:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "27741:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1033,
												"nodeType": "IfStatement",
												"src": "27737:154:0",
												"trueBody": {
													"id": 1032,
													"nodeType": "Block",
													"src": "27764:127:0",
													"statements": [
														{
															"expression": {
																"id": 1024,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1018,
																		"name": "rewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 903,
																		"src": "27778:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1020,
																	"indexExpression": {
																		"id": 1019,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1000,
																		"src": "27786:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "27778:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1022,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1000,
																			"src": "27804:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1021,
																		"name": "earned",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 998,
																		"src": "27797:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view returns (uint256)"
																		}
																	},
																	"id": 1023,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "27797:15:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "27778:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1025,
															"nodeType": "ExpressionStatement",
															"src": "27778:34:0"
														},
														{
															"expression": {
																"id": 1030,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1026,
																		"name": "userRewardPerTokenPaid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 899,
																		"src": "27826:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1028,
																	"indexExpression": {
																		"id": 1027,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1000,
																		"src": "27849:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "27826:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1029,
																	"name": "rewardPerTokenStored",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 895,
																	"src": "27860:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "27826:54:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1031,
															"nodeType": "ExpressionStatement",
															"src": "27826:54:0"
														}
													]
												}
											},
											{
												"id": 1034,
												"nodeType": "PlaceholderStatement",
												"src": "27900:1:0"
											}
										]
									},
									"id": 1036,
									"name": "updateReward",
									"nameLocation": "27595:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "27616:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "27608:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 999,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27608:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27607:17:0"
									},
									"src": "27586:322:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1083,
										"nodeType": "Block",
										"src": "27992:242:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1050,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1048,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1038,
																"src": "28010:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1049,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "28019:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "28010:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74207374616b652030",
															"id": 1051,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28022:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
																"typeString": "literal_string \"Cannot stake 0\""
															},
															"value": "Cannot stake 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
																"typeString": "literal_string \"Cannot stake 0\""
															}
														],
														"id": 1047,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "28002:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28002:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1053,
												"nodeType": "ExpressionStatement",
												"src": "28002:37:0"
											},
											{
												"expression": {
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1054,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "28049:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1055,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1038,
														"src": "28065:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28049:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1057,
												"nodeType": "ExpressionStatement",
												"src": "28049:22:0"
											},
											{
												"expression": {
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1058,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "28081:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1061,
														"indexExpression": {
															"expression": {
																"id": 1059,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "28091:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1060,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "28095:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "28091:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "28081:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1062,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1038,
														"src": "28106:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28081:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1064,
												"nodeType": "ExpressionStatement",
												"src": "28081:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1068,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "28152:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1069,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "28156:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "28152:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1072,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "28172:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingRewards_$1276",
																		"typeString": "contract StakingRewards"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingRewards_$1276",
																		"typeString": "contract StakingRewards"
																	}
																],
																"id": 1071,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "28164:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1070,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "28164:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1073,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28164:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1074,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1038,
															"src": "28179:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1065,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "28122:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 1067,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "28135:16:0",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 234,
														"src": "28122:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$77_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28122:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1076,
												"nodeType": "ExpressionStatement",
												"src": "28122:64:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1078,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "28208:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1079,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "28212:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "28208:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1080,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1038,
															"src": "28220:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1077,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "28201:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28201:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1082,
												"nodeType": "EmitStatement",
												"src": "28196:31:0"
											}
										]
									},
									"functionSelector": "a694fc3a",
									"id": 1084,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1041,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1040,
												"name": "nonReentrant",
												"nameLocations": [
													"27954:12:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 658,
												"src": "27954:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "27954:12:0"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1043,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "27980:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "27984:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "27980:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1045,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1042,
												"name": "updateReward",
												"nameLocations": [
													"27967:12:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1036,
												"src": "27967:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "27967:24:0"
										}
									],
									"name": "stake",
									"nameLocation": "27923:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "27937:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "27929:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1037,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27929:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27928:16:0"
									},
									"returnParameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27992:0:0"
									},
									"scope": 1276,
									"src": "27914:320:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1127,
										"nodeType": "Block",
										"src": "28319:229:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1098,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1096,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1086,
																"src": "28337:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1097,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "28346:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "28337:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f742077697468647261772030",
															"id": 1099,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28349:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0",
																"typeString": "literal_string \"Cannot withdraw 0\""
															},
															"value": "Cannot withdraw 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0",
																"typeString": "literal_string \"Cannot withdraw 0\""
															}
														],
														"id": 1095,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "28329:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28329:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1101,
												"nodeType": "ExpressionStatement",
												"src": "28329:40:0"
											},
											{
												"expression": {
													"id": 1104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1102,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "28379:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1103,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1086,
														"src": "28395:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28379:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1105,
												"nodeType": "ExpressionStatement",
												"src": "28379:22:0"
											},
											{
												"expression": {
													"id": 1111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1106,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "28411:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1109,
														"indexExpression": {
															"expression": {
																"id": 1107,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "28421:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "28425:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "28421:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "28411:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1110,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1086,
														"src": "28436:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28411:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1112,
												"nodeType": "ExpressionStatement",
												"src": "28411:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1116,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "28478:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "28482:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "28478:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1118,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1086,
															"src": "28490:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1113,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "28452:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 1115,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "28465:12:0",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 207,
														"src": "28452:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$77_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28452:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1120,
												"nodeType": "ExpressionStatement",
												"src": "28452:45:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1122,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "28522:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "28526:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "28522:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1124,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1086,
															"src": "28534:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1121,
														"name": "Withdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 921,
														"src": "28512:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28512:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1126,
												"nodeType": "EmitStatement",
												"src": "28507:34:0"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 1128,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1089,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1088,
												"name": "nonReentrant",
												"nameLocations": [
													"28281:12:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 658,
												"src": "28281:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "28281:12:0"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1091,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "28307:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "28311:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "28307:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1093,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1090,
												"name": "updateReward",
												"nameLocations": [
													"28294:12:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1036,
												"src": "28294:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "28294:24:0"
										}
									],
									"name": "withdraw",
									"nameLocation": "28249:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "28266:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "28258:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28258:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28257:16:0"
									},
									"returnParameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28319:0:0"
									},
									"scope": 1276,
									"src": "28240:308:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1170,
										"nodeType": "Block",
										"src": "28622:234:0",
										"statements": [
											{
												"assignments": [
													1138
												],
												"declarations": [
													{
														"constant": false,
														"id": 1138,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "28640:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1170,
														"src": "28632:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1137,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "28632:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1143,
												"initialValue": {
													"baseExpression": {
														"id": 1139,
														"name": "rewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "28649:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1142,
													"indexExpression": {
														"expression": {
															"id": 1140,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "28657:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1141,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "28661:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "28657:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "28649:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "28632:36:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1144,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1138,
														"src": "28682:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1145,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "28691:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "28682:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1169,
												"nodeType": "IfStatement",
												"src": "28678:172:0",
												"trueBody": {
													"id": 1168,
													"nodeType": "Block",
													"src": "28694:156:0",
													"statements": [
														{
															"expression": {
																"id": 1152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1147,
																		"name": "rewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 903,
																		"src": "28708:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1150,
																	"indexExpression": {
																		"expression": {
																			"id": 1148,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "28716:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1149,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "28720:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "28716:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "28708:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28730:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "28708:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1153,
															"nodeType": "ExpressionStatement",
															"src": "28708:23:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1157,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "28771:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1158,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "28775:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "28771:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1159,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1138,
																		"src": "28783:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1154,
																		"name": "rewardsToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 884,
																		"src": "28745:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1156,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "28758:12:0",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 207,
																	"src": "28745:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$77_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1160,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28745:45:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1161,
															"nodeType": "ExpressionStatement",
															"src": "28745:45:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1163,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "28820:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1164,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "28824:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "28820:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1165,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1138,
																		"src": "28832:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1162,
																	"name": "RewardPaid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 927,
																	"src": "28809:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1166,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28809:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1167,
															"nodeType": "EmitStatement",
															"src": "28804:35:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "b88a802f",
									"id": 1171,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1131,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1130,
												"name": "nonReentrant",
												"nameLocations": [
													"28584:12:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 658,
												"src": "28584:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "28584:12:0"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1133,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "28610:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "28614:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "28610:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1135,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1132,
												"name": "updateReward",
												"nameLocations": [
													"28597:12:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1036,
												"src": "28597:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "28597:24:0"
										}
									],
									"name": "claimReward",
									"nameLocation": "28563:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28574:2:0"
									},
									"returnParameters": {
										"id": 1136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28622:0:0"
									},
									"scope": 1276,
									"src": "28554:302:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1231,
										"nodeType": "Block",
										"src": "28980:415:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1184,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "28994:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1185,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "29000:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "28994:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 1186,
														"name": "periodFinish",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 886,
														"src": "29013:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28994:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1217,
													"nodeType": "Block",
													"src": "29095:194:0",
													"statements": [
														{
															"assignments": [
																1196
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1196,
																	"mutability": "mutable",
																	"name": "remaining",
																	"nameLocation": "29117:9:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1217,
																	"src": "29109:17:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1195,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "29109:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1201,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1200,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1197,
																	"name": "periodFinish",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 886,
																	"src": "29129:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"expression": {
																		"id": 1198,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "29144:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1199,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "29150:9:0",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "29144:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "29129:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "29109:50:0"
														},
														{
															"assignments": [
																1203
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1203,
																	"mutability": "mutable",
																	"name": "leftover",
																	"nameLocation": "29181:8:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1217,
																	"src": "29173:16:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1202,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "29173:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1207,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1206,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1204,
																	"name": "remaining",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1196,
																	"src": "29192:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1205,
																	"name": "rewardRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 888,
																	"src": "29204:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "29192:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "29173:41:0"
														},
														{
															"expression": {
																"id": 1215,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1208,
																	"name": "rewardRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 888,
																	"src": "29228:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1214,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1211,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1209,
																					"name": "reward",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1173,
																					"src": "29242:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 1210,
																					"name": "leftover",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1203,
																					"src": "29251:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "29242:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1212,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "29241:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1213,
																		"name": "rewardsDuration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 891,
																		"src": "29263:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "29241:37:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "29228:50:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1216,
															"nodeType": "ExpressionStatement",
															"src": "29228:50:0"
														}
													]
												},
												"id": 1218,
												"nodeType": "IfStatement",
												"src": "28990:299:0",
												"trueBody": {
													"id": 1194,
													"nodeType": "Block",
													"src": "29027:62:0",
													"statements": [
														{
															"expression": {
																"id": 1192,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1188,
																	"name": "rewardRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 888,
																	"src": "29041:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1191,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1189,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1173,
																		"src": "29054:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1190,
																		"name": "rewardsDuration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 891,
																		"src": "29063:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "29054:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "29041:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1193,
															"nodeType": "ExpressionStatement",
															"src": "29041:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1219,
														"name": "lastUpdateTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 893,
														"src": "29298:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1220,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "29315:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1221,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "29321:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "29315:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29298:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1223,
												"nodeType": "ExpressionStatement",
												"src": "29298:32:0"
											},
											{
												"expression": {
													"id": 1229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1224,
														"name": "periodFinish",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 886,
														"src": "29340:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1228,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1225,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "29355:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1226,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "29361:9:0",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "29355:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1227,
															"name": "rewardsDuration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "29373:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "29355:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29340:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1230,
												"nodeType": "ExpressionStatement",
												"src": "29340:48:0"
											}
										]
									},
									"functionSelector": "3c6b16ab",
									"id": 1232,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1176,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1175,
												"name": "onlyOwner",
												"nameLocations": [
													"28945:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 779,
												"src": "28945:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "28945:9:0"
										},
										{
											"arguments": [
												{
													"arguments": [
														{
															"hexValue": "30",
															"id": 1180,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28976:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1179,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "28968:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1178,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "28968:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 1181,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28968:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1182,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1177,
												"name": "updateReward",
												"nameLocations": [
													"28955:12:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1036,
												"src": "28955:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "28955:24:0"
										}
									],
									"name": "notifyRewardAmount",
									"nameLocation": "28901:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "28928:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1232,
												"src": "28920:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28920:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28919:16:0"
									},
									"returnParameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28980:0:0"
									},
									"scope": 1276,
									"src": "28892:503:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1259,
										"nodeType": "Block",
										"src": "29504:213:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1237,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "29518:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1238,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29534:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "29518:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1243,
												"nodeType": "IfStatement",
												"src": "29514:75:0",
												"trueBody": {
													"id": 1242,
													"nodeType": "Block",
													"src": "29537:52:0",
													"statements": [
														{
															"expression": {
																"id": 1240,
																"name": "rewardPerTokenStored",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 895,
																"src": "29558:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1236,
															"id": 1241,
															"nodeType": "Return",
															"src": "29551:27:0"
														}
													]
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1244,
														"name": "rewardPerTokenStored",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 895,
														"src": "29605:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1256,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1253,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1251,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1245,
																			"name": "rewardRate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 888,
																			"src": "29629:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1249,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"arguments": [],
																						"expression": {
																							"argumentTypes": [],
																							"id": 1246,
																							"name": "lastTimeRewardApplicable",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1275,
																							"src": "29643:24:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																								"typeString": "function () view returns (uint256)"
																							}
																						},
																						"id": 1247,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "29643:26:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"id": 1248,
																						"name": "lastUpdateTime",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 893,
																						"src": "29672:14:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "29643:43:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1250,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "29642:45:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "29629:58:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "31653138",
																		"id": 1252,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "29690:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		},
																		"value": "1e18"
																	},
																	"src": "29629:65:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1254,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "29628:67:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1255,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "29698:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "29628:82:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29605:105:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1236,
												"id": 1258,
												"nodeType": "Return",
												"src": "29598:112:0"
											}
										]
									},
									"id": 1260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rewardPerToken",
									"nameLocation": "29455:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29469:2:0"
									},
									"returnParameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "29495:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29495:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29494:9:0"
									},
									"scope": 1276,
									"src": "29446:271:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1274,
										"nodeType": "Block",
										"src": "29791:87:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1268,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1265,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "29808:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "29814:9:0",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "29808:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1267,
															"name": "periodFinish",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 886,
															"src": "29826:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "29808:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1271,
														"name": "periodFinish",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 886,
														"src": "29859:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "29808:63:0",
													"trueExpression": {
														"expression": {
															"id": 1269,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "29841:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1270,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "29847:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "29841:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1264,
												"id": 1273,
												"nodeType": "Return",
												"src": "29801:70:0"
											}
										]
									},
									"id": 1275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "lastTimeRewardApplicable",
									"nameLocation": "29732:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29756:2:0"
									},
									"returnParameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "29782:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29782:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29781:9:0"
									},
									"scope": 1276,
									"src": "29723:155:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1277,
							"src": "26150:3730:0",
							"usedErrors": [
								174,
								639,
								734,
								739
							],
							"usedEvents": [
								745,
								915,
								921,
								927
							]
						}
					],
					"src": "133:29747:0"
				},
				"id": 0
			}
		}
	}
}